[
  {
    "path": "statistik-konsolidierung/Statistik_Konsolidierung1_Demo_assoziationen/",
    "title": "Konsolidierung 1: Demo Assoziationen",
    "description": {},
    "author": [
      {
        "name": "Gian-Andrea Egeler",
        "url": {}
      }
    ],
    "date": "2021-09-27",
    "categories": [
      "Statistik_Konsolidierung1",
      "Statistik"
    ],
    "contents": "\r\nKonsolidierung 1: Demo Assoziationen\r\nDownload R-Skript\r\n\r\n\r\n#lade Packages\r\nlibrary(tidyverse)\r\nlibrary(magrittr)\r\nlibrary(here)\r\nlibrary(lubridate)\r\n\r\n#mytheme\r\nmytheme <- \r\n  theme_classic() + \r\n  theme(\r\n    axis.line = element_line(color = \"black\"), \r\n    axis.text = element_text(size = 20, color = \"black\"), \r\n    axis.title = element_text(size = 20, color = \"black\"), \r\n    axis.ticks = element_line(size = 1, color = \"black\"), \r\n    axis.ticks.length = unit(.5, \"cm\")\r\n  )\r\n\r\n\r\n\r\n\r\n\r\n#lade Daten\r\n# mehr Info darüber: https://cran.r-project.org/web/packages/explore/vignettes/explore_mtcars.html\r\ncars <- mtcars\r\n\r\n#neue kategoriale variable\r\ncars %<>% \r\n  as_tibble() %>% # da \"nur\" data frame kann glimplse nichts damit anfangen \r\n  mutate(vs_cat = if_else(.$vs == 0, \"normal\", \"v-type\")) %>% \r\n  mutate(am_cat = if_else(am == 0, \"automatic\", \"manual\"))\r\n\r\n# betrachte die Daten\r\nsummary(cars)\r\n\r\n\r\n      mpg             cyl             disp             hp       \r\n Min.   :10.40   Min.   :4.000   Min.   : 71.1   Min.   : 52.0  \r\n 1st Qu.:15.43   1st Qu.:4.000   1st Qu.:120.8   1st Qu.: 96.5  \r\n Median :19.20   Median :6.000   Median :196.3   Median :123.0  \r\n Mean   :20.09   Mean   :6.188   Mean   :230.7   Mean   :146.7  \r\n 3rd Qu.:22.80   3rd Qu.:8.000   3rd Qu.:326.0   3rd Qu.:180.0  \r\n Max.   :33.90   Max.   :8.000   Max.   :472.0   Max.   :335.0  \r\n      drat             wt             qsec             vs        \r\n Min.   :2.760   Min.   :1.513   Min.   :14.50   Min.   :0.0000  \r\n 1st Qu.:3.080   1st Qu.:2.581   1st Qu.:16.89   1st Qu.:0.0000  \r\n Median :3.695   Median :3.325   Median :17.71   Median :0.0000  \r\n Mean   :3.597   Mean   :3.217   Mean   :17.85   Mean   :0.4375  \r\n 3rd Qu.:3.920   3rd Qu.:3.610   3rd Qu.:18.90   3rd Qu.:1.0000  \r\n Max.   :4.930   Max.   :5.424   Max.   :22.90   Max.   :1.0000  \r\n       am              gear            carb          vs_cat         \r\n Min.   :0.0000   Min.   :3.000   Min.   :1.000   Length:32         \r\n 1st Qu.:0.0000   1st Qu.:3.000   1st Qu.:2.000   Class :character  \r\n Median :0.0000   Median :4.000   Median :2.000   Mode  :character  \r\n Mean   :0.4062   Mean   :3.688   Mean   :2.812                     \r\n 3rd Qu.:1.0000   3rd Qu.:4.000   3rd Qu.:4.000                     \r\n Max.   :1.0000   Max.   :5.000   Max.   :8.000                     \r\n    am_cat         \r\n Length:32         \r\n Class :character  \r\n Mode  :character  \r\n                   \r\n                   \r\n                   \r\n\r\nglimpse(cars)\r\n\r\n\r\nRows: 32\r\nColumns: 13\r\n$ mpg    <dbl> 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8,~\r\n$ cyl    <dbl> 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4,~\r\n$ disp   <dbl> 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.~\r\n$ hp     <dbl> 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 1~\r\n$ drat   <dbl> 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92,~\r\n$ wt     <dbl> 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.19~\r\n$ qsec   <dbl> 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.0~\r\n$ vs     <dbl> 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1,~\r\n$ am     <dbl> 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,~\r\n$ gear   <dbl> 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4,~\r\n$ carb   <dbl> 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1,~\r\n$ vs_cat <chr> \"normal\", \"normal\", \"v-type\", \"v-type\", \"normal\", \"v-~\r\n$ am_cat <chr> \"manual\", \"manual\", \"manual\", \"automatic\", \"automatic~\r\n\r\n#Assoziation zwischen Anzahl Zylinder und Motorentyp ()\r\ntable(cars$vs_cat, cars$am_cat) # Achtung: sieht aus, \r\n\r\n\r\n        \r\n         automatic manual\r\n  normal        12      6\r\n  v-type         7      7\r\n\r\n# als gäbe es weniger V-Motoren bei den Handgeschalteten Autos\r\n\r\n#lass und das überprüfen\r\n#achtung: bei chi-square test kommt es \r\n#sehr auf das format drauf an (er erwartet entweder \r\n#vektoren oder eine matrix!)\r\nchi_sq <- chisq.test(cars$am, cars$vs)\r\nchi_sq\r\n\r\n\r\n\r\n    Pearson's Chi-squared test with Yates' continuity correction\r\n\r\ndata:  cars$am and cars$vs\r\nX-squared = 0.34754, df = 1, p-value = 0.5555\r\n\r\n#fisher exakter test\r\nfisher.test(cars$am_cat, cars$vs_cat)\r\n\r\n\r\n\r\n    Fisher's Exact Test for Count Data\r\n\r\ndata:  cars$am_cat and cars$vs_cat\r\np-value = 0.4727\r\nalternative hypothesis: true odds ratio is not equal to 1\r\n95 percent confidence interval:\r\n  0.3825342 10.5916087\r\nsample estimates:\r\nodds ratio \r\n  1.956055 \r\n\r\nErgebnis\r\nDer \\(\\chi^2\\)-Test sagt uns, dass das Art des Motors und Art des Fahrwerks statistisch nicht zusammenhängen. Es gibt keine signifikante Unterscheide zwischen den Variablen “VS” und “AM - Transmission” (\\(\\chi^2\\)(1) = 0.348, p = 0.556. Der Fisher exacter Test bestätigt diesen Befund. Die Odds Ratio (OR) sagt uns hingegen - unter der Prämisse, dass “normale” Motoren eher mit automatischen und V-Motoren eher mit handgeschalteten Fahrwerken ausgestattet sind - dass die Chance doppelt so hoch ist, dass ein Auto mit “normalem” Motor automatisch geschaltet ist, als dies bei einem Auto mit V-Motor der Fall wäre\r\n\r\n\r\n#bei t-Test immer zuerst visualisieren: in diesem Fall Boxplot\r\n#mit Variablen Getriebe (v- vs. s-motor) und Anzahl Pferdestärke\r\nggplot(cars, aes(y = hp, x = vs_cat)) +\r\n  # stat_boxplot(geom ='errorbar', width = .25) +\r\n  # geom_boxplot() +\r\n  geom_violin()\r\n\r\n\r\n\r\n  labs(x = \"\\nBauform Motor\", y = \"Pferdestärke (PS)\\n\") +\r\n  mytheme\r\n\r\n\r\nNULL\r\n\r\n#alternativ     \r\nboxplot(cars$hp ~ cars$vs_cat) # sieht ganz ok aus, jedoch weist \r\n\r\n\r\n\r\n#die Variable \"normale Motoren\" deutlich eine grössere Streuung aus\r\n#-> siehe aov.1 und deren Modelgüte-Plots\r\n\r\n#Definiere Model: t-Test, wobei die AV metrisch \r\n#(in unserem Fall eine Zählvariable) sein muss\r\nttest <- t.test(cars$hp ~ cars$vs_cat)\r\naov.1 <- aov(cars$hp ~ cars$vs_cat)\r\n\r\n\r\n#schaue Modellgüte an\r\npar(mfrow = c(2,2))\r\nplot(aov.1)\r\n\r\n\r\n\r\n#zeige resultate\r\nttest\r\n\r\n\r\n\r\n    Welch Two Sample t-test\r\n\r\ndata:  cars$hp by cars$vs_cat\r\nt = 6.2908, df = 23.561, p-value = 1.82e-06\r\nalternative hypothesis: true difference in means between group normal and group v-type is not equal to 0\r\n95 percent confidence interval:\r\n  66.06161 130.66854\r\nsample estimates:\r\nmean in group normal mean in group v-type \r\n           189.72222             91.35714 \r\n\r\nsummary.lm(aov.1)\r\n\r\n\r\n\r\nCall:\r\naov(formula = cars$hp ~ cars$vs_cat)\r\n\r\nResiduals:\r\n   Min     1Q Median     3Q    Max \r\n-98.72 -25.61  -4.04  22.55 145.28 \r\n\r\nCoefficients:\r\n                  Estimate Std. Error t value Pr(>|t|)    \r\n(Intercept)         189.72      11.35  16.720  < 2e-16 ***\r\ncars$vs_catv-type   -98.37      17.16  -5.734 2.94e-06 ***\r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\nResidual standard error: 48.14 on 30 degrees of freedom\r\nMultiple R-squared:  0.5229,    Adjusted R-squared:  0.507 \r\nF-statistic: 32.88 on 1 and 30 DF,  p-value: 2.941e-06\r\n\r\n\r\n\r\n# für mehr infos here: https://cran.r-project.org/web/packages/datasauRus/vignettes/Datasaurus.html\r\n\r\nlibrary(datasauRus)\r\nif(requireNamespace(\"dplyr\")){\r\n  suppressPackageStartupMessages(library(dplyr))\r\n  dt <- datasaurus_dozen %>% \r\n    group_by(dataset) %>% \r\n    summarize(\r\n      mean_x    = mean(x),\r\n      mean_y    = mean(y),\r\n      std_dev_x = sd(x),\r\n      std_dev_y = sd(y),\r\n      corr_x_y  = cor(x, y)\r\n    )\r\n}\r\n\r\n# check data structure\r\nglimpse(dt)\r\n\r\n\r\n# plot two examples  \r\ndt = filter(datasaurus_dozen, dataset == \"dino\" | dataset == \"slant_up\")\r\n  \r\nggplot(dt, aes(x=x, y=y, colour=dataset))+\r\n    geom_point()+\r\n    theme_bw() +\r\n    theme(legend.position = \"none\") +\r\n    facet_wrap(~dataset) +\r\n    geom_smooth(method = \"lm\", se = FALSE)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "statistik-konsolidierung/Statistik_Konsolidierung1_Demo_assoziationen/distill-preview.png",
    "last_modified": "2021-09-28T09:21:04+02:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "statistik-konsolidierung/Statistik_Konsolidierung1_suggest_datasets/",
    "title": "Vorgeschlagene Datensätze für die Repetitionsübungen",
    "description": {},
    "author": [],
    "date": "2021-09-27",
    "categories": [
      "Statistik_Konsolidierung_1",
      "Statistik"
    ],
    "contents": "\r\nVorgeschlagene Datensaetze zur Repetition der Übungen\r\nR data sets\r\nchickwts\r\niris\r\nTitanic (achtung hat das table Datenformat)\r\nstarwars (dplyr package)\r\nResearch Methods data sets\r\nNOVANIMAL (Kassendaten oder Gästebefragung)\r\nUkraine (Demoskript 3)\r\nIpomopsis (Demoskript 3)\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-09-28T09:21:04+02:00",
    "input_file": {}
  },
  {
    "path": "statistik-konsolidierung/Statistik_Konsolidierung4_Demo_GLM/",
    "title": "Konsolidierung 4: GLM",
    "description": {},
    "author": [
      {
        "name": "Gian-Andrea Egeler",
        "url": {}
      }
    ],
    "date": "2021-09-27",
    "categories": [
      "Statistik_Konsolidierung4",
      "Statistik"
    ],
    "contents": "\r\n\r\n\r\n  |                                                                  \r\n  |                                                            |   0%\r\n  |                                                                  \r\n  |.....                                                       |   9%\r\n  |                                                                  \r\n  |...........                                                 |  18%\r\n  |                                                                  \r\n  |................                                            |  27%\r\n  |                                                                  \r\n  |......................                                      |  36%\r\n  |                                                                  \r\n  |...........................                                 |  45%\r\n  |                                                                  \r\n  |.................................                           |  55%\r\n  |                                                                  \r\n  |......................................                      |  64%\r\n  |                                                                  \r\n  |............................................                |  73%\r\n  |                                                                  \r\n  |.................................................           |  82%\r\n  |                                                                  \r\n  |.......................................................     |  91%\r\n  |                                                                  \r\n  |............................................................| 100%\r\n[1] \"C:/Users/egel/switchdrive2/ZHAW/03_Lehre/research methods MSc/unterrichtsunterlagen_HS21/_statistik-konsolidierung/Statistik_Konsolidierung4_Demo_GLM/Demo_GLM_Konsolidierung4.R\"\r\n\r\nDemo GLM\r\n\r\nDownload R-Skript\r\n\r\nquasi-poisson regression\r\n\r\n\r\n############\r\n# quasipoisson regression\r\n############\r\n\r\ncars <- mtcars %>% \r\n   mutate(kml = (235.214583/mpg))\r\n\r\nglm.poisson <- glm(hp ~ kml, data = cars, family = poisson(link = log))\r\n\r\nsummary(glm.poisson) # klare overdisperion\r\n\r\n\r\n\r\nCall:\r\nglm(formula = hp ~ kml, family = poisson(link = log), data = cars)\r\n\r\nDeviance Residuals: \r\n   Min      1Q  Median      3Q     Max  \r\n-6.438  -2.238  -1.159   2.457  10.576  \r\n\r\nCoefficients:\r\n            Estimate Std. Error z value Pr(>|z|)    \r\n(Intercept) 3.894293   0.050262   77.48   <2e-16 ***\r\nkml         0.081666   0.003414   23.92   <2e-16 ***\r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\n(Dispersion parameter for poisson family taken to be 1)\r\n\r\n    Null deviance: 958.27  on 31  degrees of freedom\r\nResidual deviance: 426.59  on 30  degrees of freedom\r\nAIC: 645.67\r\n\r\nNumber of Fisher Scoring iterations: 4\r\n\r\n# deshalb quasipoisson\r\nglm.quasipoisson <- glm(hp ~ mpg, data = cars, family = quasipoisson(link = log))\r\n\r\nsummary(glm.quasipoisson)\r\n\r\n\r\n\r\nCall:\r\nglm(formula = hp ~ mpg, family = quasipoisson(link = log), data = cars)\r\n\r\nDeviance Residuals: \r\n   Min      1Q  Median      3Q     Max  \r\n-4.335  -2.042  -1.334   1.886   9.229  \r\n\r\nCoefficients:\r\n            Estimate Std. Error t value Pr(>|t|)    \r\n(Intercept)  6.30196    0.17530  35.950  < 2e-16 ***\r\nmpg         -0.06921    0.00938  -7.379 3.21e-08 ***\r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\n(Dispersion parameter for quasipoisson family taken to be 10.83975)\r\n\r\n    Null deviance: 958.27  on 31  degrees of freedom\r\nResidual deviance: 303.86  on 30  degrees of freedom\r\nAIC: NA\r\n\r\nNumber of Fisher Scoring iterations: 4\r\n\r\n# visualisiere\r\nggplot2::ggplot(cars, aes(x = mpg, y = hp)) + \r\n    geom_point(size = 8) + \r\n    geom_smooth(method = \"glm\", method.args = list(family = \"poisson\"), se = F,\r\n                color = \"green\", size = 2) + \r\n    scale_x_continuous(limits = c(0,35)) + \r\n    scale_y_continuous(limits = c(0,400)) + \r\n    theme_classic()\r\n\r\n\r\n\r\n#Rücktransformation meiner Variablen\r\n\r\n\r\n\r\nlogistische Regression\r\n\r\n\r\n############\r\n# logistische regression\r\n############\r\ncars <- mtcars\r\n\r\n# erstelle das modell\r\nglm.binar <- glm(vs ~ hp, data = cars, family = binomial(link = logit)) \r\n\r\n\r\nsummary(glm.binar)\r\n\r\n\r\n\r\nCall:\r\nglm(formula = vs ~ hp, family = binomial(link = logit), data = cars)\r\n\r\nDeviance Residuals: \r\n     Min        1Q    Median        3Q       Max  \r\n-2.12148  -0.20302  -0.01598   0.51173   1.20083  \r\n\r\nCoefficients:\r\n            Estimate Std. Error z value Pr(>|z|)   \r\n(Intercept)  8.37802    3.21593   2.605  0.00918 **\r\nhp          -0.06856    0.02740  -2.502  0.01234 * \r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\n(Dispersion parameter for binomial family taken to be 1)\r\n\r\n    Null deviance: 43.860  on 31  degrees of freedom\r\nResidual deviance: 16.838  on 30  degrees of freedom\r\nAIC: 20.838\r\n\r\nNumber of Fisher Scoring iterations: 7\r\n\r\n# überprüfe das modell\r\ncars$predicted <- predict(glm.binar, type = \"response\")\r\n\r\n\r\n# visualisiere\r\nggplot(cars, aes(x = hp, y = vs)) +    \r\n    geom_point(size = 8) +\r\n    geom_point(aes(y = predicted), shape  = 1, size = 6) +\r\n    guides(color = F) +\r\n    geom_smooth(method = \"glm\", method.args = list(family = 'binomial'), \r\n                se = FALSE,\r\n                size = 2) +\r\n    # geom_smooth(method = \"lm\", color = \"red\", se = FALSE) +\r\n    mytheme\r\n\r\n\r\n\r\n#Modeldiagnostik (wenn nicht signifikant, dann OK)\r\n1 - pchisq(glm.binar$deviance,glm.binar$df.resid)  \r\n\r\n\r\n[1] 0.9744718\r\n\r\n#Modellgüte (pseudo-R²)\r\n1 - (glm.binar$dev / glm.binar$null)  \r\n\r\n\r\n[1] 0.6161072\r\n\r\n#Steilheit der Beziehung (relative Änderung der odds von x + 1 vs. x)\r\nexp(glm.binar$coefficients[2])\r\n\r\n\r\n       hp \r\n0.9337368 \r\n\r\n#LD50 (wieso negativ: weil zweiter koeffizient negative steigung hat)\r\nabs(glm.binar$coefficients[1]/glm.binar$coefficients[2])\r\n\r\n\r\n(Intercept) \r\n   122.1986 \r\n\r\n# kreuztabelle (confusion matrix): fasse die ergebnisse aus predict und \"gegebenheiten, realität\" zusammen\r\ntab1 <- table(cars$predicted>.5, cars$vs)\r\ndimnames(tab1) <- list(c(\"M:S-type\",\"M:V-type\"), c(\"T:S-type\", \"T:V-type\"))\r\ntab1\r\n\r\n\r\n         T:S-type T:V-type\r\nM:S-type       15        2\r\nM:V-type        3       12\r\n\r\nprop.table(tab1, 2)\r\n\r\n\r\n          T:S-type  T:V-type\r\nM:S-type 0.8333333 0.1428571\r\nM:V-type 0.1666667 0.8571429\r\n\r\n#Rücktransformation meiner Variablen\r\n\r\n\r\n\r\n#LOESS & GAM\r\n\r\n\r\n###########\r\n# LOESS & GAM\r\n###########\r\n\r\nggplot2::ggplot(mtcars, aes(x = mpg, y = hp)) + \r\n  geom_point(size = 8) + \r\n  geom_smooth(method = \"gam\", se = F, color = \"green\", size = 2, formula = y ~ s(x, bs = \"cs\")) + \r\n  geom_smooth(method = \"loess\", se = F, color = \"red\", size = 2) + \r\n  geom_smooth(method = \"glm\", size = 2, color = \"blue\", se = F) + \r\n  scale_x_continuous(limits = c(0,35)) + \r\n    scale_y_continuous(limits = c(0,400)) + \r\n    mytheme\r\n\r\n\r\n\r\nggplot2::ggplot(mtcars, aes(x = mpg, y = hp)) + \r\n  geom_point(size = 8) + \r\n  geom_smooth(method = \"gam\", se = F, color = \"green\", size = 2, formula = y ~ s(x, bs = \"cs\")) + \r\n    # geom_smooth(method = \"loess\", se = F, color = \"red\", size = 2) + \r\n  geom_smooth(method = \"glm\", size = 2, color = \"grey\", se = F) + \r\n  scale_x_continuous(limits = c(0,35)) + \r\n  scale_y_continuous(limits = c(0,400)) + \r\n  mytheme\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "statistik-konsolidierung/Statistik_Konsolidierung4_Demo_GLM/distill-preview.png",
    "last_modified": "2021-09-28T09:21:04+02:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  }
]
