[
  {
    "path": "statistik/Statistik_Konsolidierung1_demoskript_assozationen/",
    "title": "Demo",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik_Konsolidierung1",
      "Statistik"
    ],
    "contents": "\n\n\n\nDemo: Statistik Konsolidierung 1\n\nDownload R-Skript\n\nDemo für Assoziationen\n\n\n\n# state: november 2020\n# author: gian-andrea egeler\n\n#lade Packages\nlibrary(tidyverse)\nlibrary(magrittr)\nlibrary(here)\nlibrary(lubridate)\n\n#mytheme\nmytheme <- \n  theme_classic() + \n  theme(\n    axis.line = element_line(color = \"black\"), \n    axis.text = element_text(size = 20, color = \"black\"), \n    axis.title = element_text(size = 20, color = \"black\"), \n    axis.ticks = element_line(size = 1, color = \"black\"), \n    axis.ticks.length = unit(.5, \"cm\")\n  )\n\n\n\n\n\n\n#lade dateien\n# mehr info darüber hier: https://cran.r-project.org/web/packages/explore/vignettes/explore_mtcars.html\nmtcars %<>% \n  as_tibble() %>% # da \"nur\" data frame kann glimplse nichts damit anfangen \n  # summary() %>% \n  mutate(test_test = if_else(.$vs == 0, \"normal\", \"v-type\"))\n\nsummary(as_tibble(mtcars))\n\n\n      mpg             cyl             disp             hp       \n Min.   :10.40   Min.   :4.000   Min.   : 71.1   Min.   : 52.0  \n 1st Qu.:15.43   1st Qu.:4.000   1st Qu.:120.8   1st Qu.: 96.5  \n Median :19.20   Median :6.000   Median :196.3   Median :123.0  \n Mean   :20.09   Mean   :6.188   Mean   :230.7   Mean   :146.7  \n 3rd Qu.:22.80   3rd Qu.:8.000   3rd Qu.:326.0   3rd Qu.:180.0  \n Max.   :33.90   Max.   :8.000   Max.   :472.0   Max.   :335.0  \n      drat             wt             qsec             vs        \n Min.   :2.760   Min.   :1.513   Min.   :14.50   Min.   :0.0000  \n 1st Qu.:3.080   1st Qu.:2.581   1st Qu.:16.89   1st Qu.:0.0000  \n Median :3.695   Median :3.325   Median :17.71   Median :0.0000  \n Mean   :3.597   Mean   :3.217   Mean   :17.85   Mean   :0.4375  \n 3rd Qu.:3.920   3rd Qu.:3.610   3rd Qu.:18.90   3rd Qu.:1.0000  \n Max.   :4.930   Max.   :5.424   Max.   :22.90   Max.   :1.0000  \n       am              gear            carb        test_test        \n Min.   :0.0000   Min.   :3.000   Min.   :1.000   Length:32         \n 1st Qu.:0.0000   1st Qu.:3.000   1st Qu.:2.000   Class :character  \n Median :0.0000   Median :4.000   Median :2.000   Mode  :character  \n Mean   :0.4062   Mean   :3.688   Mean   :2.812                     \n 3rd Qu.:1.0000   3rd Qu.:4.000   3rd Qu.:4.000                     \n Max.   :1.0000   Max.   :5.000   Max.   :8.000                     \n\n\n# kline daten\nmtcars %>% \n  as_tibble() %>% \n  mutate(vs = if_else(.$vs == 0, \"normal\", \"v-type\")) -> df\n\n#assoziation zwischen anzahl zylinder und motorentyp ()\ntable(df$vs, df$am) # zur visualisierung: sieht aus, als gäbe es weniger v motoren bei den handgeschalteten\n\n\n        \n          0  1\n  normal 12  6\n  v-type  7  7\n\n\n#lass und das überprüfen\n#im wide format\nchi_sq <- chisq.test(df$am, df$vs)\n\n#fisher exakter test\nfisher.test(df$am, df$vs)\n\n\n\n    Fisher's Exact Test for Count Data\n\ndata:  df$am and df$vs\np-value = 0.4727\nalternative hypothesis: true odds ratio is not equal to 1\n95 percent confidence interval:\n  0.3825342 10.5916087\nsample estimates:\nodds ratio \n  1.956055 \n\ntitlke\njsldkfjsldkfj sdjfsldkfj 0.5555115.\n\n\n\n# t-test zwischen getriebe (v- vs. s-motor) und ps (pferdestärke)\n# visualisierung\nggplot(df, aes(y = hp, x = vs)) +\n  # stat_boxplot(geom ='errorbar', width = .25) +\n  # geom_boxplot() +\n  geom_violin()\n\n\n\n  labs(x = \"\\nBauform Motor\", y = \"Pferdestärke (PS)\\n\") +\n  mytheme\n\n\nNULL\n\n       \nboxplot(df$hp~df$vs) # sieht ganz ok aus\n\n\n\n\n# t-test oder auch anova möglich\nttest <- t.test(df$hp ~ df$vs)\naov.1 <- aov(df$hp ~ df$vs)\n\n#zeige resultate\nttest\n\n\n\n    Welch Two Sample t-test\n\ndata:  df$hp by df$vs\nt = 6.2908, df = 23.561, p-value = 1.82e-06\nalternative hypothesis: true difference in means between group normal and group v-type is not equal to 0\n95 percent confidence interval:\n  66.06161 130.66854\nsample estimates:\nmean in group normal mean in group v-type \n           189.72222             91.35714 \n\nsummary.lm(aov.1)\n\n\n\nCall:\naov(formula = df$hp ~ df$vs)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-98.72 -25.61  -4.04  22.55 145.28 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   189.72      11.35  16.720  < 2e-16 ***\ndf$vsv-type   -98.37      17.16  -5.734 2.94e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 48.14 on 30 degrees of freedom\nMultiple R-squared:  0.5229,    Adjusted R-squared:  0.507 \nF-statistic: 32.88 on 1 and 30 DF,  p-value: 2.941e-06\n\n\n\n# für mehr infos here: https://cran.r-project.org/web/packages/datasauRus/vignettes/Datasaurus.html\n\n\nlibrary(datasauRus)\nif(requireNamespace(\"dplyr\")){\n  suppressPackageStartupMessages(library(dplyr))\n  dt <- datasaurus_dozen %>% \n    group_by(dataset) %>% \n    summarize(\n      mean_x    = mean(x),\n      mean_y    = mean(y),\n      std_dev_x = sd(x),\n      std_dev_y = sd(y),\n      corr_x_y  = cor(x, y)\n    )\n}\n\n# check data structure\nglimpse(dt)\n\n\n# plot two examples  \nif(requireNamespace(\"ggplot2\")){\n  library(ggplot2)\n  \n  dt = filter(datasaurus_dozen, dataset == \"dino\" | dataset == \"slant_up\")\n  \n  ggplot(dt, aes(x=x, y=y, colour=dataset))+\n    geom_point()+\n    theme_bw() +\n    theme(legend.position = \"none\") +\n    facet_wrap(~dataset) +\n    geom_smooth(method = \"lm\", se = FALSE)\n  \n}\n\n\n\n\n\n\n\n\n\n",
    "preview": "statistik/Statistik_Konsolidierung1_demoskript_assozationen/distill-preview.png",
    "last_modified": "2021-08-18T11:12:41+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik_Konsolidierung1_overview_konsolidierung/",
    "title": "Konsolidierung",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik_Konsolidierung1",
      "Statistik"
    ],
    "contents": "\n\n\n\nKonsolidierung Statistik 1 (09.11.2020)\nIn den vier Blöcken “Konsolidierung Statistik” repetieren die Studierenden wichtige Verfahren der Inferenz-Statistik. Beginnend mit den beiden einfachsten Fällen, dem Chi-Quadrat-Test für die Assoziation zwischen zwei kategorialen Variablen und dem t-Test auf Unterschiede in Mittelwerten zwischen zwei Gruppen, wiederholen die Studierende auch die Varianzanalyse (ANOVA) als Verallgemeinerung des t-Tests, einschliesslich post-hoc-Tests und mehrfaktorieller ANOVA. Weiter geht es mit der Repetition von komplexere Versionen linearer Regressionen und generalized linear models (GLMs), die einige wesentliche Limitierungen von linearen Modellen überwinden. Abschliessend bekommen die Studierenden eine Einführung in die Welt der Ordinationen z.B. PCA.\nFür die nächsten vier gemeinsamen Sitzungen werden wir nochmals folgende Themen aufgreifen:\nStatistik Konsolidierung 1: Grundlagen der Statistik\nWarum Statistik? Warum mit R?\nGenereller Ablauf einer statistischen Analyse\nChi-Quadrat- bzw. Fishers Test (für kategoriale Daten\nt-Test (für metrische Daten)\nStatistik Konsolidierung 2: Einführung in «multivariate» Methoden\nEinführung in «multivariate» Methoden\nIdee von Ordinationen\nHauptkomponentenanalyse (PCA)\nStatistik Konsolidierung 3: Lineare Modelle I\nParametrische vs. nicht-parametrische Verfahren\nVarianzanalyse (ANOVA vs. MANOVA vs. ANCOVA)\nLineare Modelle allgemein\nPolynomische Regressionen\nMultiple lineare Regressionen\nNicht-lineare Regressionen\nStatistik Konsolidierung 4: Lineare Modelle II\nVon linearen Modellen zu GLMs\nPoisson-Regressionen für Zähldaten\nLogistische Regressionen für Binärdaten\nGlättungsfunktionen und GAMs\nGesamtüberblick und Wiederholung\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:12:46+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik_Konsolidierung1_suggest_datasets/",
    "title": "Vorgeschlagene",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik_Konsolidierung1",
      "Statistik"
    ],
    "contents": "\n\n\n\nVorgeschlagene Datensaetze zur Repetition der Uebungen\nR data sets\nchickwts\niris\nmtcars\nTitanic (achtung hat das table Datenformat)\nstarwars (dplyr package)\nResearch Methods data sets\nNOVANIMAL (Kassendaten oder Gästebefragung)\nUkraine (Demoskript 3)\nIpomopsis (Demoskript 3)\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:12:48+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik_Konsolidierung2_demoskript_ordinationen_v2/",
    "title": "Statistik",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik_Konsolidierung2",
      "Statistik"
    ],
    "contents": "\n\n\n\nStatistik Konsolidierung 2 (10.11.2020)\nIn Statistik Konsolidierung 2 bekommen die Studierenden eine Einführung in das Thema der Ordinationen, eine Technik der deskriptiven Statistik. Diese Methoden visualisiert die Strukturen in multivariaten Datensätzen via Dimensionsreduktion. Das Prinzip und die praktische Implementierung wird detailliert am Beispiel der Hauptkomponentenanalyse (PCA) erklärt. Danach folgen kurze Einführungen in weitere Ordinationstechniken für besondere Fälle, welche bestimmte Limitierungen der PCA überwinden, namentlich NMDS.\nDemo: Statistik Konsolidierung 2\n\nDownload R-Skript\n\n\n\n\n# Research Methods Statistik-Vorlesung 2020\n# Ordinationen \n# Gian-Andrea Egeler & J?rgen Dengler \n\n#einfaches beispiel: angelehnt an diesem post: https://www.datacamp.com/community/tutorials/pca-analysis-r\n\n#ausgangslage: viel zusammenh?ngende variablen\n#ziel: reduktion der variablen\n#WICHTIG: mit wide-format arbeiten => das ist mit matrizen gemeint\n\n# lade datei\nd <- mtcars\n\n# korrelationen\ncor<- cor(mtcars[,c(1:7,10,11)])\ncor[abs(cor)<.7] <- 0\ncor\n\n\n            mpg        cyl       disp         hp       drat\nmpg   1.0000000 -0.8521620 -0.8475514 -0.7761684  0.0000000\ncyl  -0.8521620  1.0000000  0.9020329  0.8324475  0.0000000\ndisp -0.8475514  0.9020329  1.0000000  0.7909486 -0.7102139\nhp   -0.7761684  0.8324475  0.7909486  1.0000000  0.0000000\ndrat  0.0000000  0.0000000 -0.7102139  0.0000000  1.0000000\nwt   -0.8676594  0.7824958  0.8879799  0.0000000 -0.7124406\nqsec  0.0000000  0.0000000  0.0000000 -0.7082234  0.0000000\ngear  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000\ncarb  0.0000000  0.0000000  0.0000000  0.7498125  0.0000000\n             wt       qsec gear      carb\nmpg  -0.8676594  0.0000000    0 0.0000000\ncyl   0.7824958  0.0000000    0 0.0000000\ndisp  0.8879799  0.0000000    0 0.0000000\nhp    0.0000000 -0.7082234    0 0.7498125\ndrat -0.7124406  0.0000000    0 0.0000000\nwt    1.0000000  0.0000000    0 0.0000000\nqsec  0.0000000  1.0000000    0 0.0000000\ngear  0.0000000  0.0000000    1 0.0000000\ncarb  0.0000000  0.0000000    0 1.0000000\n\n\n# pca\n# achtung unterschiedliche messeinheiten, wichtig es muss noch einheitlich transfomiert werden\nlibrary(FactoMineR)\n\n\nError in library(FactoMineR): there is no package called 'FactoMineR'\n\no.pca <- PCA(mtcars[,c(1:7,10,11)], scale.unit = TRUE) # entweder korrelations oder covarianzmatrix\n\n\nError in PCA(mtcars[, c(1:7, 10, 11)], scale.unit = TRUE): could not find function \"PCA\"\n\n\n# schaue output an\nsummary(o.pca) # generiert auch automatische plots\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': object 'o.pca' not found\n\n\n\n# plote das ganze\nlibrary(ggbiplot)\n\n\nError in library(ggbiplot): there is no package called 'ggbiplot'\n\nggbiplot(o.pca,choices = c(1,2))\n\n\nError in is.data.frame(x): object 'o.pca' not found\n\n\n# nehme noch die autonamen hinzu\nggbiplot(o.pca, labels=rownames(mtcars), choices = c(1,2)) # + mytheme # choice gibt die axen an\n\n\nError in is.data.frame(x): object 'o.pca' not found\n\n\n\n#-------------------------\n\n#Mit Beispieldaten aus Wildi (2013, 2017)\n# library(dave)\nlibrary(labdsv)\nlibrary(dave) # lade package f?r Datensatz sveg\nhead(sveg)\n\n\n    Vaccinium.myrtillus Vaccinium.uliginosum Vaccinium.oxycoccos\n501                   0                    0                   2\n502                   1                    2                   1\n503                   1                    1                   1\n504                   1                    0                   1\n505                   1                    1                   1\n506                   1                    1                   2\n    Calluna.vulgaris Carex.rostrata Carex.lasiocarpa Carex.nigra\n501                1              0                0           2\n502                3              0                2           1\n503                0              0                2           0\n504                0              1                1           0\n505                1              0                2           1\n506                1              0                2           1\n    Carex.davalliana Carex.hostiana Carex.pauciflora Carex.echinata\n501                0              0                0              2\n502                0              0                0              0\n503                0              0                0              1\n504                0              0                1              2\n505                0              0                0              1\n506                0              0                0              2\n    Carex.panicea Trichophorum.caespitosum Trichophorum.alpinum\n501             0                        2                    1\n502             0                        2                    0\n503             1                        1                    1\n504             0                        0                    0\n505             1                        0                    0\n506             0                        1                    0\n    Eriophorum.vaginatum Eriophorum.latifolium\n501                    0                     0\n502                    1                     0\n503                    0                     0\n504                    1                     0\n505                    0                     0\n506                    0                     0\n    Eriophorum.angustifolium Tofieldia.calyculata Pinguicula.vulgaris\n501                        1                    0                   0\n502                        2                    0                   0\n503                        1                    0                   0\n504                        1                    0                   0\n505                        1                    0                   0\n506                        1                    1                   0\n    Parnassia.palustris Rhynchospora.alba Drosera.rotundifolia\n501                   0                 0                    1\n502                   0                 0                    0\n503                   0                 0                    0\n504                   0                 0                    1\n505                   0                 0                    1\n506                   0                 0                    1\n    Arnica.montana Dactylorhiza.maculata Polytrichum.strictum\n501              1                     1                    1\n502              0                     1                    1\n503              2                     1                    1\n504              1                     1                    1\n505              1                     0                    1\n506              1                     1                    1\n    Succisa.pratensis Anthoxanthum.odoratum Molinia.caerulea\n501                 0                     1                1\n502                 1                     1                2\n503                 1                     1                2\n504                 0                     1                1\n505                 1                     1                1\n506                 1                     1                2\n    Gentiana.asclepiadea Luzula.multiflora Festuca.rubra\n501                    1                 0             0\n502                    1                 1             0\n503                    1                 1             0\n504                    1                 0             0\n505                    1                 0             0\n506                    1                 0             0\n    Potentilla.erecta Sphagnum.magellanicum Sphagnum.papillosum\n501                 2                     2                   1\n502                 1                     0                   1\n503                 1                     1                   1\n504                 2                     1                   1\n505                 1                     3                   1\n506                 2                     3                   0\n    Equisetum.palustre Aulacomnium.palustre Euphrasia.rostkoviana\n501                  1                    2                     0\n502                  1                    1                     0\n503                  2                    1                     0\n504                  2                    1                     0\n505                  1                    1                     0\n506                  1                    1                     0\n    Nardus.stricta Carex.pulicaris Climacium.dendroides\n501              0               0                    0\n502              1               0                    0\n503              1               0                    0\n504              0               0                    0\n505              1               0                    0\n506              1               0                    0\n    Carex.pallescens Carex.lepidocarpa Briza.media\n501                0                 0           0\n502                0                 0           0\n503                1                 0           1\n504                0                 0           0\n505                0                 0           1\n506                0                 0           0\n    Sphagnum.platyphyllum Sphagnum.tenellum Sphagnum.recurvum\n501                     0                 0                 5\n502                     0                 0                 2\n503                     0                 0                 6\n504                     0                 0                 6\n505                     0                 0                 2\n506                     0                 0                 3\n    Sphagnum.rubellum Sphagnum.centrale Sphagnum.subsecundum\n501                 1                 0                    0\n502                 1                 0                    0\n503                 2                 0                    0\n504                 1                 0                    0\n505                 2                 0                    0\n506                 1                 0                    0\n    Juncus.alpinoarticulatus Solidago.virgaurea Agrostis.canina\n501                        0                  2               1\n502                        0                  1               0\n503                        0                  1               1\n504                        0                  1               1\n505                        0                  0               1\n506                        0                  1               0\n    Juncus.effusus Frangula.alnus Anemone.nemorosa Holcus.lanatus\n501              1              0                0              0\n502              0              0                0              0\n503              1              1                0              1\n504              1              1                0              0\n505              1              0                2              1\n506              0              0                1              1\n    Drepanocladus.exannulatus Homogyne.alpina Polygala.vulgaris\n501                         0               0                 0\n502                         0               1                 0\n503                         0               0                 0\n504                         0               0                 0\n505                         0               0                 0\n506                         0               0                 0\n    Trollius.europaeus Polygonum.bistorta Lotus.pedunculatus\n501                  0                  0                  0\n502                  0                  0                  0\n503                  0                  0                  0\n504                  0                  0                  0\n505                  0                  0                  1\n506                  0                  0                  0\n    Trifolium.pratense Taraxacum.palustre Campylium.stellatum\n501                  0                  0                   0\n502                  0                  0                   0\n503                  0                  1                   0\n504                  0                  0                   0\n505                  0                  0                   0\n506                  0                  0                   0\n    Cirsium.palustre Lysimachia.vulgaris Maianthemum.bifolium\n501                0                   0                    1\n502                0                   1                    1\n503                1                   1                    1\n504                0                   1                    1\n505                0                   0                    1\n506                0                   0                    1\n    Equisetum.sylvaticum Centaurea.jacea Prunella.grandiflora\n501                    0               0                    0\n502                    1               0                    0\n503                    1               0                    0\n504                    1               0                    0\n505                    0               0                    0\n506                    0               0                    0\n    Viola.palustris Angelica.sylvestris Filipendula.ulmaria\n501               0                   0                   0\n502               0                   0                   0\n503               1                   0                   0\n504               0                   0                   0\n505               0                   0                   0\n506               0                   0                   0\n    Thuidium.delicatulum Sanguisorba.officinalis Galium.uliginosum\n501                    0                       0                 0\n502                    1                       0                 0\n503                    0                       0                 1\n504                    0                       0                 0\n505                    0                       0                 0\n506                    1                       0                 0\n    Epipactis.palustris Pleurozium.schreberi Calliergon.stramineum\n501                   0                    1                     1\n502                   0                    2                     0\n503                   0                    1                     1\n504                   0                    1                     1\n505                   0                    1                     1\n506                   0                    0                     0\n    Aster.bellidiastrum Hypnum.bambergeri Drepanocladus.revolvens\n501                   0                 0                       0\n502                   0                 0                       0\n503                   0                 0                       0\n504                   0                 0                       0\n505                   0                 0                       0\n506                   0                 0                       0\n    Dicranum.bonjeanii Dicranum.scoparium Hylocomium.splendens\n501                  1                  0                    1\n502                  0                  1                    1\n503                  0                  0                    0\n504                  0                  0                    1\n505                  0                  0                    1\n506                  1                  0                    1\n    Rhytidiadelphus.squarrosus Calliergonella.cuspidata\n501                          1                        0\n502                          1                        0\n503                          1                        0\n504                          1                        0\n505                          1                        0\n506                          1                        0\n    Fissidens.adianthoides Primula.veris Primula.farinosa\n501                      0             0                0\n502                      0             0                0\n503                      0             0                0\n504                      0             0                0\n505                      0             0                0\n506                      0             0                0\n    Hieracium.lachenalii Crepis.paludosa Leontodon.hispidus\n501                    0               0                  0\n502                    1               0                  0\n503                    0               0                  0\n504                    0               0                  0\n505                    1               1                  0\n506                    1               0                  0\n    Lotus.corniculatus Stachys.officinalis Carex.flacca\n501                  0                   0            0\n502                  0                   0            0\n503                  0                   0            0\n504                  0                   0            0\n505                  0                   0            0\n506                  0                   0            0\n    Gentiana.verna Geranium.sylvaticum Ranunculus.nemorosus\n501              0                   0                    0\n502              0                   0                    0\n503              0                   0                    0\n504              0                   0                    0\n505              0                   0                    1\n506              0                   0                    0\n    Linum.catharticum Cirsium.oleraceum Colchicum.autumnale\n501                 0                 0                   0\n502                 0                 0                   0\n503                 0                 0                   0\n504                 0                 0                   0\n505                 0                 0                   0\n506                 0                 0                   0\n    Polygala.amarella Polygala.serpyllifolia Equisetum.arvense\n501                 0                      0                 0\n502                 0                      0                 0\n503                 0                      0                 0\n504                 0                      0                 0\n505                 0                      0                 0\n506                 0                      0                 0\n    Deschampsia.cespitosa Rhinanthus.minor Gymnadenia.conopsea\n501                     0                0                   0\n502                     0                0                   0\n503                     1                0                   0\n504                     0                0                   0\n505                     0                0                   0\n506                     0                0                   0\n    Melampyrum.pratense Salix.spec. Caltha.palustris\n501                   0           1                0\n502                   0           0                0\n503                   0           0                0\n504                   0           0                1\n505                   0           0                0\n506                   1           0                0\n    Dactylorhiza.fistulosa Platanthera.bifolia Acer.pseudoplatanus\n501                      0                   0                   0\n502                      0                   0                   0\n503                      0                   0                   0\n504                      0                   0                   0\n505                      0                   0                   0\n506                      0                   0                   0\n    Danthonia.decumbens Drepanocladus.spec. Tomentypnum.nitens\n501                   0                   0                  0\n502                   0                   0                  0\n503                   0                   0                  0\n504                   0                   0                  0\n505                   0                   0                  0\n506                   0                   0                  0\n    Ctenidium.molluscum\n501                   0\n502                   0\n503                   0\n504                   0\n505                   0\n506                   1\n\n\n\n#PCA-----------\n#Deckungen Wurzeltransformiert, cor=T erzwingt Nutzung der Korrelationsmatrix\no.pca <- labdsv::pca(sveg^0.25,cor=T)\no.pca2 <- stats::prcomp(sveg^0.25)\n\n#Koordinaten im Ordinationsraum => Y\nhead(o.pca$scores)\n\n\n          PC1       PC2         PC3       PC4         PC5         PC6\n501 -4.763857 -1.222657  0.16137299 -1.639204  0.65672134 -0.98134023\n502 -4.428913 -4.530150  0.05301732  2.188902 -2.21261157  0.12642795\n503 -3.636202 -2.596393  3.97897752  2.096885 -0.09579661  0.58518527\n504 -5.691480 -3.260462  0.80834375  1.818017 -0.52158742 -0.02931188\n505 -4.355361 -1.601297  1.94546115  0.792097  3.31334690 -0.67452566\n506 -4.543401 -2.532399 -0.19595841  3.896722  0.89933087 -4.37421402\n           PC7         PC8        PC9        PC10       PC11\n501  1.6317688 -0.08113303  0.7247082 -1.31077242  1.2813149\n502 -0.8457528 -1.20851040 -3.6289703  0.35305198 -1.7183924\n503  0.9899570  1.03762358 -0.5077893  0.30487295  2.0066795\n504  2.7860029  0.85368103 -3.4692578 -0.02980661  1.8870663\n505  0.3938673 -0.67389240 -0.9296371  0.67314263 -2.0246695\n506 -1.7659766 -1.95037552  3.2707920  2.78339933 -0.3195434\n          PC12       PC13       PC14        PC15        PC16\n501 -1.3711114  1.8457122 -0.6278653 -1.43321305  1.50881397\n502  1.2571226 -0.3174354  0.7325661 -1.18309122 -2.37940718\n503  0.4414931  1.1545367  1.8283306 -3.53165604  0.04104297\n504 -3.5035161 -0.4537659  1.2233405 -1.93651516  4.07720273\n505 -0.6512055  0.8548114 -1.7589601  0.06661396 -0.13227858\n506  1.2138961  0.3456507  0.3408879  1.01176445 -1.26546293\n           PC17       PC18       PC19       PC20        PC21\n501 -2.97736577  0.8268822 -1.4453855 -0.1466078 -0.09662186\n502 -0.09059082 -0.8010082  0.6524424 -2.7430949 -0.42033618\n503 -0.06246434  0.2358944 -0.4180836 -2.2532345  3.98293021\n504  0.99732426  0.2175479 -0.5612100  3.1866275 -1.08040907\n505 -2.00293250 -0.9938806 -0.6971091  0.4844586  1.20475090\n506 -1.59936308 -1.7153444 -0.1439464  0.4493517 -0.08429808\n           PC22       PC23       PC24        PC25        PC26\n501 -3.77272246  0.7844698  1.8045245 -0.17853680 -0.06771589\n502 -0.63096914 -1.3455060  1.7754579  2.11489161  0.95357058\n503  0.55413053  1.7799689 -0.1802338 -0.09241462 -1.01954614\n504 -1.42278226  0.3219374 -2.7614029 -1.31218367  0.94758022\n505  0.08857863  0.3231857  0.2284481 -0.65611221 -1.21526666\n506 -1.30034843  1.0227733  0.8883096  0.51654537  0.52150779\n          PC27        PC28       PC29         PC30       PC31\n501 -1.6742280  0.41931363  0.1888973  1.585374077  1.1905613\n502 -0.6430976 -0.42685089  2.2153698 -0.098912454  0.9765902\n503  2.0463947 -2.22747881 -0.8036757 -0.205866378 -0.5029180\n504 -0.1429144  0.47581310  1.0425006  0.005072091 -1.0063439\n505  2.3728747 -0.73710523 -0.1025163  2.137277875  1.3289432\n506 -1.0102607  0.01490339 -0.2223891  0.347475808 -1.5674217\n           PC32         PC33       PC34        PC35       PC36\n501 -1.82627628  0.094504732  0.7849617  0.77302790  1.9213342\n502 -0.80299992  0.329659993  0.9447764  0.09057868  0.5669687\n503  0.95959407  0.035188541  0.1507044 -1.02885202  1.4662350\n504  0.90042231 -0.004404674  0.2432332  0.40372882 -0.8424062\n505  0.89537818 -1.294468299 -0.5352318 -2.86676436 -2.5367287\n506  0.09384257  0.357308694 -1.1097031  1.84201089 -1.6376362\n          PC37       PC38       PC39       PC40       PC41\n501 -0.6029523 -0.3363889 -0.2573222  0.8941553  1.2367489\n502  0.3794446  0.7151658 -0.9791670 -0.9660533 -1.2251368\n503  0.2181247  0.6265748 -0.5432419 -0.3165250  0.9358497\n504  1.1887693  0.7235536 -0.3817996 -1.1581197 -0.5454398\n505 -0.4340339 -0.5619216  0.4455299 -1.1279520  0.2279502\n506 -0.4127164  1.7396579  0.3714079  0.6389748  0.6424064\n           PC42       PC43       PC44        PC45       PC46\n501 -1.11966178 -0.2601246 -0.2078813 -0.03111594 -1.3454016\n502  0.05666915 -1.4628362  0.5582156  1.67389733  0.6930452\n503  0.17245765  1.5758212  0.6070225  0.20790120 -0.2992309\n504  0.08696793 -0.3849897 -0.7411590  0.03263069 -0.4206263\n505 -0.72554838 -0.3803438 -0.2958748 -0.26462426  0.9303062\n506  0.20864020  0.0693735 -1.1683050 -0.62209530 -0.0167067\n           PC47        PC48       PC49        PC50        PC51\n501  0.18543488 0.165077319  0.4271259  0.03344741 -0.67251783\n502 -0.04876455 0.034295659  0.2504650  0.92249523 -0.37202041\n503 -0.92285018 0.086435271 -0.1776794  0.63368844 -0.05032204\n504  0.17608597 0.140309516 -0.2349212 -0.47357248 -0.69832492\n505  1.00396458 0.008074208 -0.2109950 -0.11433249 -0.19274533\n506 -0.24875279 1.355867225 -1.2441710  0.48557964  0.40520049\n           PC52        PC53       PC54        PC55        PC56\n501 -0.18856021 -0.04447414 -0.2147439  0.63262162  0.61468552\n502 -0.11059513  0.33447990  0.3620933  0.61488898 -0.50812421\n503  0.15187670  0.48944764 -0.7366031 -0.43981938  0.27624600\n504  0.30788753 -0.18965809  0.1066951 -0.04189938 -0.88859476\n505 -1.01402219  0.25215164  0.3886028  0.39890287  0.05752107\n506  0.08264158  0.29293929  0.2325230  0.01392773 -0.03280751\n         PC57        PC58        PC59        PC60        PC61\n501 0.2043527 -0.37547576 -0.31258845  0.35104886 -0.20734396\n502 0.3184280  0.29655200 -0.02416142  0.17817629  0.05382574\n503 0.5416561  0.07794917  0.27317234 -0.10707815  0.24562753\n504 0.6385988  0.12049186  0.06138318  0.01892385  0.06958372\n505 0.1036377 -0.18643677 -0.04735095  0.40986224 -0.27316372\n506 0.5269515  0.23278357  0.01371267 -0.04665975  0.34323912\n            PC62          PC63\n501 -0.017256846 -6.418477e-16\n502  0.020853834 -1.630640e-16\n503 -0.010160828 -2.810252e-16\n504  0.126692198 -9.089951e-16\n505 -0.111435213  1.557782e-15\n506  0.005704567 -1.221245e-15\n\nhead(o.pca2$x)\n\n\n          PC1        PC2        PC3         PC4        PC5\n501 -2.301951 -0.7285971  0.4220042  0.39554152 -0.1866936\n502 -1.855876 -1.9787386  0.4511816 -0.64145311  0.8364961\n503 -1.828945 -1.0153413  1.7009344 -1.21212359 -0.1892581\n504 -2.506304 -1.0940710  0.6870227 -0.44917418 -0.6766723\n505 -2.070627 -0.6887734  1.0483553 -0.04445413  0.9787535\n506 -2.031475 -0.9858521 -0.1701317 -0.05759162  1.6009600\n            PC6          PC7         PC8         PC9        PC10\n501  0.25930815 -1.178714149  0.35571620 -0.75755080  0.39547870\n502 -0.77652451 -0.128010254  0.19360111  0.48043641 -1.11401520\n503 -0.29972888 -0.003689882  0.47237990 -1.09848185 -0.49124840\n504 -0.60113846 -0.831446199  0.23197449 -1.40012783 -0.49586585\n505 -0.18625906 -0.890907216 -0.54394667 -0.44840683  0.41924991\n506  0.09397864 -0.284472933  0.08169635 -0.06670026  0.03383194\n           PC11        PC12        PC13        PC14       PC15\n501 -0.01889785  0.02997603  1.13627974 -0.56145671  0.3081056\n502 -0.14916072  0.26702574 -0.70288554  0.21847810 -0.6385397\n503 -0.35303567 -0.33469963  0.03971433  0.81130706  1.2379008\n504 -0.34303298 -0.24495751  0.77564367 -0.46881797  0.2755110\n505  0.38357297  0.59007035 -0.23524652 -0.35398193 -0.5372558\n506  0.33486805 -0.44730017 -1.15386938 -0.09486003 -0.7014656\n          PC16        PC17       PC18        PC19       PC20\n501 -0.3438803  0.26149298 -0.7003956 -0.18063812  1.2357177\n502  0.4327727 -0.10950106 -0.1706952 -0.19753031  0.2868787\n503  0.2363881  0.84311486 -0.1095281 -0.01123475 -0.9607593\n504  0.7390411  0.53029646  0.3616813  0.30262075  0.3419333\n505 -1.0626008  0.08496754  0.7387086  0.42215795 -0.4882253\n506 -0.4608699  0.10502897 -0.4190009 -0.42575282  1.0824507\n           PC21       PC22        PC23        PC24        PC25\n501  0.03281837 -0.2052502 -0.45087314  0.67610825  0.37114794\n502 -0.55127997  1.1261946  0.03235329  0.14386737  1.04943465\n503 -1.37742132 -0.8687225  0.38010872  0.38865965  0.77500611\n504  0.34379191  0.1990443  0.22918634  0.27610642 -0.96655208\n505 -0.68601528 -1.2524417 -0.11966479 -0.11687698  0.07399043\n506 -0.53558483 -0.4819116 -0.57744514  0.02281304 -0.05840168\n            PC26       PC27         PC28       PC29        PC30\n501 -0.316878179 -0.1791558 -0.140278932 -0.2060548  0.28670250\n502 -0.564581956 -1.0522815  0.302815497  0.1080903  0.07870389\n503  0.311008231  0.6070280 -0.103592297 -0.0697092  0.45135912\n504 -0.009810018  0.3081339 -0.108149685  0.9031111 -0.43010551\n505 -0.144594260  0.2316675 -0.178144581  0.7730416 -0.32692207\n506  0.420433280  0.1237216 -0.006770651 -0.5319472 -0.14602698\n           PC31        PC32       PC33        PC34        PC35\n501  0.02440796  0.08204056 -0.1157604 -0.42173185  0.01074645\n502  0.53899992  0.09304015 -0.5950221  0.01827107  0.30661836\n503 -0.13773047 -0.40491898 -0.4344469  0.28864057 -0.28212223\n504  0.58553198 -0.29506799 -0.1953271 -0.56433432  0.25174762\n505 -0.04777037  0.30341567  0.4967408  0.34706522 -0.45408530\n506  0.10539217 -0.08311172  0.5333188 -0.43638597  0.05104183\n           PC36        PC37        PC38        PC39       PC40\n501  0.09857481  0.20508395  0.33693569  0.14485516 -0.3194573\n502  0.12904895 -0.26519890 -0.15144361 -0.15098438  0.2452216\n503 -0.23778829 -0.01598126 -0.02320992 -0.01852496  0.1936536\n504 -0.11711453  0.00748805 -0.25946125 -0.07262684  0.5213928\n505  0.44927820 -0.35215172  0.06765867  0.26469550  0.3437712\n506 -0.33711891 -0.57756423 -0.09833645 -0.27550452 -0.3361641\n            PC41         PC42       PC43        PC44        PC45\n501 -0.377644648 -0.074183548 -0.3488313  0.67088293  0.38746722\n502 -0.171861342 -0.416859471  0.4557468  0.06365805 -0.10671400\n503  0.298128080 -0.008004305 -0.4343870  0.02612201 -0.05980013\n504 -0.001307457  0.120925361  0.3468438 -0.09293276  0.18039431\n505 -0.781638002  0.054628086  0.1242505 -0.15204210 -0.20142841\n506  0.143336198  0.598965141  0.1477751 -0.13315066  0.29671222\n            PC46        PC47        PC48        PC49        PC50\n501 -0.491067975 -0.09661141 -0.03061993 -0.14860680 -0.27597453\n502 -0.240076495 -0.41252141 -0.14844458 -0.14823661 -0.07185035\n503  0.058077711 -0.22112298 -0.19986386 -0.03666501  0.17146994\n504 -0.007859853 -0.09708200 -0.08027980 -0.15238261  0.08846743\n505  0.126088236  0.26866551  0.16794886  0.02699226 -0.19694087\n506  0.515969280 -0.11288640  0.14702394 -0.38333823  0.30378107\n           PC51        PC52        PC53        PC54        PC55\n501  0.25515562  0.10555663  0.21913326 -0.23423721 -0.13351349\n502 -0.11879796  0.18287561 -0.36510717  0.15779472 -0.26443306\n503  0.18751313  0.09255186 -0.18280167 -0.26942078  0.06839124\n504  0.01537010  0.01477055  0.28828727 -0.07784734  0.10762649\n505 -0.12355127  0.36910059 -0.05201568  0.08778969 -0.24346256\n506 -0.02883506 -0.30510161  0.01542938 -0.19129417 -0.17480501\n           PC56        PC57        PC58          PC59        PC60\n501 -0.04954824 -0.23163389  0.12830250  0.1427302439 -0.11280360\n502 -0.07850719  0.05677377 -0.02045951 -0.0441878352 -0.05658538\n503  0.09664049 -0.13872643 -0.11142716 -0.0714597768  0.01589154\n504  0.14871464  0.52467227 -0.07120782  0.0006149144  0.01356044\n505  0.04920732  0.01968619  0.02039326 -0.0756883495 -0.07476566\n506 -0.01015433  0.08219220 -0.09020740 -0.0165807334 -0.12970108\n           PC61         PC62          PC63\n501 -0.11794978  0.038018007 -3.747003e-16\n502  0.01660207  0.004168290  7.216450e-16\n503  0.11356295 -0.007266709 -4.579670e-16\n504 -0.05342258 -0.080572215  1.804112e-16\n505 -0.13403519  0.052749436  4.718448e-16\n506  0.15488706  0.030721579  2.775558e-17\n\n\n#Korrelationen der Variablen mit den Ordinationsachsen\nhead(o.pca$loadings)\n\n\n                             PC1         PC2         PC3        PC4\nVaccinium.myrtillus  -0.07362416 -0.14246559  0.03748841 0.22588381\nVaccinium.uliginosum -0.08762110 -0.12591604 -0.02824599 0.19774029\nVaccinium.oxycoccos  -0.14961043 -0.11686298 -0.06269564 0.06507888\nCalluna.vulgaris     -0.10802248 -0.08471278 -0.07407743 0.00821262\nCarex.rostrata       -0.05266692 -0.06531141 -0.06404195 0.05818957\nCarex.lasiocarpa     -0.11790509  0.08453324  0.04401149 0.14018775\n                             PC5         PC6         PC7         PC8\nVaccinium.myrtillus  -0.04301368 -0.07742918 -0.00103681 -0.06618748\nVaccinium.uliginosum -0.02360498 -0.06285625 -0.07942063 -0.04021258\nVaccinium.oxycoccos  -0.02855490 -0.03513044 -0.02083072 -0.07498423\nCalluna.vulgaris     -0.04757344 -0.01415487 -0.07048495 -0.11563882\nCarex.rostrata       -0.06541545  0.05856810  0.03160672  0.02147834\nCarex.lasiocarpa      0.01735476  0.01773576 -0.16470933 -0.02704170\n                             PC9        PC10        PC11        PC12\nVaccinium.myrtillus  -0.17429219  0.14372971  0.01231853 -0.03209045\nVaccinium.uliginosum -0.04122156  0.05388445 -0.01945887  0.01885666\nVaccinium.oxycoccos  -0.00668725 -0.02777278 -0.05602721 -0.02553424\nCalluna.vulgaris     -0.11463073 -0.04515413 -0.12732079  0.06513696\nCarex.rostrata       -0.11261171 -0.01252269  0.03696981 -0.05757125\nCarex.lasiocarpa     -0.10039622  0.02739011 -0.02153635  0.11439379\n                             PC13         PC14        PC15\nVaccinium.myrtillus   0.019454456  0.068222610 -0.06919849\nVaccinium.uliginosum -0.045993167 -0.004243337  0.03542118\nVaccinium.oxycoccos   0.009516728  0.038336970  0.03115819\nCalluna.vulgaris      0.021365488 -0.009070545  0.07942060\nCarex.rostrata       -0.012887335 -0.028040101  0.09243047\nCarex.lasiocarpa      0.018177064  0.023700162 -0.02678790\n                            PC16        PC17        PC18         PC19\nVaccinium.myrtillus  -0.06745128 -0.02083768 -0.02699264  0.003404283\nVaccinium.uliginosum -0.05012019 -0.03722798 -0.10345191  0.045312367\nVaccinium.oxycoccos   0.02737073 -0.06007651 -0.01020011 -0.170416568\nCalluna.vulgaris     -0.12867231 -0.14278640 -0.13347859  0.050169321\nCarex.rostrata        0.21007064  0.12043625  0.07037412 -0.133904475\nCarex.lasiocarpa     -0.08775198  0.13702395  0.08556821  0.118542041\n                            PC20        PC21         PC22\nVaccinium.myrtillus  -0.05316994  0.03590970  0.004816111\nVaccinium.uliginosum -0.12681810  0.11717828 -0.058077465\nVaccinium.oxycoccos   0.02449887  0.06634774  0.008384145\nCalluna.vulgaris      0.02837278  0.09088110 -0.048419695\nCarex.rostrata        0.06573622 -0.21109826 -0.020827527\nCarex.lasiocarpa      0.08362957  0.05290577  0.137817049\n                             PC23        PC24        PC25        PC26\nVaccinium.myrtillus   0.004946086 -0.02383914 -0.02462757 -0.03391669\nVaccinium.uliginosum  0.016677772  0.04858525  0.18777563 -0.06935440\nVaccinium.oxycoccos   0.071287305 -0.01293119  0.07171624  0.04232825\nCalluna.vulgaris     -0.021663432  0.20673327 -0.16810591 -0.07966015\nCarex.rostrata        0.162463451 -0.19224593 -0.16275451  0.07340331\nCarex.lasiocarpa      0.040207120 -0.10223727 -0.01840477 -0.07364657\n                             PC27         PC28        PC29\nVaccinium.myrtillus  -0.005064568  0.006121834 -0.07926673\nVaccinium.uliginosum  0.058540072 -0.173051992 -0.04751230\nVaccinium.oxycoccos   0.040528133  0.030533977  0.08562342\nCalluna.vulgaris     -0.047254806 -0.026911954  0.08354271\nCarex.rostrata        0.058014488 -0.079947993 -0.16771274\nCarex.lasiocarpa      0.006840362  0.005702815 -0.06761412\n                            PC30        PC31         PC32\nVaccinium.myrtillus  -0.03530309  0.02392079  0.031145345\nVaccinium.uliginosum -0.01638189 -0.08301482 -0.089778870\nVaccinium.oxycoccos   0.02423737 -0.08290340 -0.011243027\nCalluna.vulgaris      0.10130463  0.19117835  0.004792272\nCarex.rostrata       -0.03830845 -0.20698616 -0.297440295\nCarex.lasiocarpa      0.13136821 -0.04161502  0.093303228\n                             PC33        PC34        PC35        PC36\nVaccinium.myrtillus  -0.164900963  0.02313634 -0.15928243 -0.15120213\nVaccinium.uliginosum -0.073543135  0.07851734 -0.26167670 -0.13692051\nVaccinium.oxycoccos  -0.062630003 -0.12445469 -0.07324958  0.07046792\nCalluna.vulgaris      0.147852531  0.05362048  0.08426303 -0.01955114\nCarex.rostrata       -0.003412854  0.21965889 -0.02809930 -0.13637888\nCarex.lasiocarpa     -0.006686999  0.11856645 -0.04994070 -0.14410268\n                             PC37        PC38         PC39\nVaccinium.myrtillus   0.144171715  0.01248985  0.102418063\nVaccinium.uliginosum -0.157495430 -0.03215669 -0.113239448\nVaccinium.oxycoccos   0.003655144  0.05735387 -0.046647996\nCalluna.vulgaris     -0.010180289 -0.09290930  0.095452595\nCarex.rostrata       -0.074850004  0.10933126 -0.080161135\nCarex.lasiocarpa     -0.006402816  0.05189270  0.005416167\n                            PC40         PC41        PC42        PC43\nVaccinium.myrtillus   0.09234536 -0.009030722 -0.18068575  0.10424056\nVaccinium.uliginosum -0.00966071  0.019839524  0.21204887 -0.01709597\nVaccinium.oxycoccos   0.10000057  0.188328476 -0.08979774  0.05756731\nCalluna.vulgaris      0.01061023  0.060198709  0.02502361 -0.03901571\nCarex.rostrata       -0.14370338 -0.049713755  0.16826301  0.01537001\nCarex.lasiocarpa      0.02715963  0.026046819  0.03324122 -0.25557595\n                            PC44        PC45          PC46\nVaccinium.myrtillus   0.04187925 -0.12629237 -0.0253871606\nVaccinium.uliginosum  0.07140154 -0.03260854  0.0003201818\nVaccinium.oxycoccos   0.13139482 -0.01752273 -0.0583329446\nCalluna.vulgaris     -0.09075622 -0.03202233 -0.0188172753\nCarex.rostrata       -0.03607349  0.08341652  0.1077409453\nCarex.lasiocarpa      0.03604210  0.03601529  0.0140567316\n                            PC47        PC48        PC49        PC50\nVaccinium.myrtillus   0.05074294  0.14897796 -0.03367894 -0.02016129\nVaccinium.uliginosum  0.05830908  0.07022035  0.08723036 -0.10887151\nVaccinium.oxycoccos  -0.04939924 -0.22370061 -0.03339017  0.03479938\nCalluna.vulgaris     -0.02148936  0.10115389 -0.08074657 -0.03098390\nCarex.rostrata       -0.04063225  0.01138514 -0.12304633  0.09866865\nCarex.lasiocarpa     -0.21410867  0.05629144  0.02934003 -0.02567209\n                            PC51         PC52         PC53\nVaccinium.myrtillus  -0.10805310  0.111433192  0.113654973\nVaccinium.uliginosum -0.05738286  0.123490836  0.259478458\nVaccinium.oxycoccos  -0.03497256 -0.006679043 -0.146148364\nCalluna.vulgaris     -0.19799203 -0.013235911 -0.204268031\nCarex.rostrata       -0.10047400 -0.114459720  0.102237401\nCarex.lasiocarpa      0.10295340 -0.003113176 -0.001162812\n                            PC54         PC55        PC56\nVaccinium.myrtillus   0.03739631  0.017423658 -0.15324773\nVaccinium.uliginosum  0.07788824 -0.040591890  0.11294968\nVaccinium.oxycoccos   0.13549709  0.087827223 -0.04366120\nCalluna.vulgaris     -0.09936385 -0.066390419 -0.07108513\nCarex.rostrata       -0.03244147 -0.006058506 -0.01598447\nCarex.lasiocarpa     -0.05977409 -0.003595348 -0.09539947\n                             PC57        PC58        PC59        PC60\nVaccinium.myrtillus   0.009742625  0.32706773 -0.06142993  0.15455501\nVaccinium.uliginosum  0.116275742 -0.13184036  0.06532725 -0.14072582\nVaccinium.oxycoccos  -0.089609604 -0.05114823 -0.10695247  0.02522695\nCalluna.vulgaris      0.031559428 -0.02765588 -0.05456407 -0.01498940\nCarex.rostrata       -0.028165296 -0.07615320 -0.08896563  0.01133796\nCarex.lasiocarpa     -0.015120026  0.01200302  0.06543931 -0.03894678\n                            PC61        PC62          PC63\nVaccinium.myrtillus   0.02540804 -0.10259657  0.2198960642\nVaccinium.uliginosum -0.20227920  0.01963619  0.0993232993\nVaccinium.oxycoccos   0.04712633 -0.10678490 -0.0622644321\nCalluna.vulgaris     -0.22131322  0.05431396  0.0120825053\nCarex.rostrata        0.02404471 -0.01846416 -0.1344862787\nCarex.lasiocarpa      0.16378810  0.07127092  0.0008100307\n\nhead(o.pca2$rotation)\n\n\n                             PC1         PC2         PC3         PC4\nVaccinium.myrtillus  -0.06044165 -0.12047858  0.05638760 -0.13699603\nVaccinium.uliginosum -0.07411873 -0.11233493 -0.01951483 -0.11313221\nVaccinium.oxycoccos  -0.17172640 -0.13764424 -0.05913471 -0.03757043\nCalluna.vulgaris     -0.11087522 -0.09199122 -0.06602185  0.02783561\nCarex.rostrata       -0.02826136 -0.03484548 -0.03469690 -0.04470115\nCarex.lasiocarpa     -0.09701632  0.09195281  0.02795903 -0.09349416\n                            PC5         PC6          PC7          PC8\nVaccinium.myrtillus   0.1228031 -0.19713340 -0.113362266  0.043186934\nVaccinium.uliginosum  0.1670638 -0.08334667  0.006058627  0.060834265\nVaccinium.oxycoccos   0.1027756 -0.06260189 -0.058338519  0.039827220\nCalluna.vulgaris      0.1068851 -0.10645280 -0.102357151  0.094746471\nCarex.rostrata       -0.0184876 -0.05132226 -0.020259867 -0.010896081\nCarex.lasiocarpa      0.1736162 -0.15491008  0.124904138  0.009253213\n                              PC9        PC10        PC11\nVaccinium.myrtillus  -0.076769446 -0.07742970 -0.05930712\nVaccinium.uliginosum  0.006761336  0.04878158 -0.02678077\nVaccinium.oxycoccos   0.062282820 -0.02755130 -0.03686212\nCalluna.vulgaris      0.149267700 -0.19427507 -0.05407969\nCarex.rostrata        0.024479360  0.04972668 -0.04423548\nCarex.lasiocarpa      0.074302988 -0.05886395 -0.03542141\n                             PC12        PC13        PC14        PC15\nVaccinium.myrtillus  -0.029174396 -0.14128564  0.04090607 -0.10164365\nVaccinium.uliginosum  0.013459695 -0.07755705 -0.01150538 -0.13269680\nVaccinium.oxycoccos  -0.062624873  0.06569774 -0.04156403 -0.05242040\nCalluna.vulgaris      0.140603303 -0.03387758 -0.01091092 -0.13109972\nCarex.rostrata       -0.040669430  0.05868232 -0.07898219  0.02147995\nCarex.lasiocarpa      0.006357581 -0.14681613  0.03923688  0.08866112\n                             PC16        PC17         PC18\nVaccinium.myrtillus   0.052620940  0.01400872  0.049130865\nVaccinium.uliginosum  0.004417387  0.08919063  0.007854379\nVaccinium.oxycoccos   0.105326203  0.05910460 -0.059751686\nCalluna.vulgaris     -0.252793885  0.08561246  0.104163056\nCarex.rostrata        0.026123955  0.06167127  0.016803860\nCarex.lasiocarpa     -0.072158090 -0.11080163  0.022279826\n                            PC19         PC20        PC21        PC22\nVaccinium.myrtillus  -0.03894145 -0.014698540 -0.07039736  0.02739192\nVaccinium.uliginosum -0.17741579 -0.020231484 -0.24228412  0.02805935\nVaccinium.oxycoccos   0.18392169  0.116226711 -0.19299345 -0.09940226\nCalluna.vulgaris     -0.14891935  0.001194914  0.05496431 -0.06104103\nCarex.rostrata        0.06083532  0.012414485  0.06792186  0.13934432\nCarex.lasiocarpa     -0.04562264 -0.103210183  0.02614362 -0.02460748\n                            PC23        PC24        PC25        PC26\nVaccinium.myrtillus   0.06114259 -0.07976295  0.04195838  0.12207657\nVaccinium.uliginosum  0.09501592 -0.06016363  0.17440688  0.11261168\nVaccinium.oxycoccos  -0.09440900 -0.07797920 -0.07105010  0.09994652\nCalluna.vulgaris     -0.14628923  0.06971562  0.06862762 -0.08536321\nCarex.rostrata       -0.02429066  0.01259993 -0.08688281 -0.02008697\nCarex.lasiocarpa      0.16329340  0.05169285 -0.09279154  0.01612305\n                             PC27        PC28         PC29\nVaccinium.myrtillus   0.194448743 -0.14359653  0.067899700\nVaccinium.uliginosum  0.089431224  0.11739480  0.009731619\nVaccinium.oxycoccos   0.007276026  0.12244626  0.111817958\nCalluna.vulgaris     -0.256488953 -0.02721319 -0.098403571\nCarex.rostrata        0.181212443 -0.07229815  0.065702104\nCarex.lasiocarpa      0.074745513 -0.04886840  0.137268243\n                            PC30         PC31        PC32        PC33\nVaccinium.myrtillus  -0.06242018  0.043745904 -0.04639827 0.038122966\nVaccinium.uliginosum -0.02313754  0.092016903 -0.04212399 0.183180421\nVaccinium.oxycoccos   0.09803208 -0.016797655 -0.06412165 0.030307275\nCalluna.vulgaris      0.02921983 -0.111875080  0.14093034 0.004892295\nCarex.rostrata       -0.05175204  0.163055897 -0.21768751 0.123683058\nCarex.lasiocarpa     -0.05756962 -0.002859956 -0.01857165 0.169661842\n                             PC34         PC35         PC36\nVaccinium.myrtillus  -0.045154358 -0.134500223  0.173182128\nVaccinium.uliginosum  0.198087467 -0.017055857  0.016171461\nVaccinium.oxycoccos   0.005351793  0.009346025  0.046947190\nCalluna.vulgaris     -0.043906162 -0.063744285 -0.005224897\nCarex.rostrata       -0.051452828  0.072640236 -0.109761969\nCarex.lasiocarpa     -0.069497651  0.035641780 -0.192223622\n                             PC37        PC38        PC39\nVaccinium.myrtillus  -0.077871492 -0.05407774  0.12941163\nVaccinium.uliginosum -0.008321876 -0.04397948 -0.08360086\nVaccinium.oxycoccos   0.020509979 -0.05333888  0.04404623\nCalluna.vulgaris      0.022454297  0.10572038  0.05263868\nCarex.rostrata        0.095715559  0.10464894 -0.16016450\nCarex.lasiocarpa     -0.055826452 -0.13942968  0.06004430\n                             PC40        PC41         PC42\nVaccinium.myrtillus  -0.048308138 -0.03645446  0.072630005\nVaccinium.uliginosum  0.065952028 -0.06272183 -0.118034453\nVaccinium.oxycoccos  -0.114981771 -0.02127672  0.040676235\nCalluna.vulgaris     -0.112637254 -0.16201991  0.009997371\nCarex.rostrata        0.214554976  0.03103185 -0.113167615\nCarex.lasiocarpa      0.006789247 -0.03014723 -0.170278554\n                            PC43         PC44        PC45\nVaccinium.myrtillus   0.03512599  0.056016152 -0.07239741\nVaccinium.uliginosum  0.03605073 -0.136947752 -0.14619430\nVaccinium.oxycoccos  -0.28158722  0.031336866  0.02142834\nCalluna.vulgaris     -0.06133311 -0.005394637  0.03574743\nCarex.rostrata        0.01794495 -0.074059025  0.04141605\nCarex.lasiocarpa      0.01530310 -0.120789530  0.01289771\n                             PC46         PC47         PC48\nVaccinium.myrtillus   0.006168311 -0.030513604 -0.083285503\nVaccinium.uliginosum  0.041778106 -0.013051974 -0.012134511\nVaccinium.oxycoccos  -0.178934688  0.001390248 -0.005338745\nCalluna.vulgaris      0.020055051 -0.118521594 -0.014573546\nCarex.rostrata        0.112052638  0.078238497 -0.064480915\nCarex.lasiocarpa      0.026234903 -0.221682991  0.022322334\n                             PC49        PC50         PC51\nVaccinium.myrtillus  -0.064072330  0.10458185  0.082337552\nVaccinium.uliginosum -0.002237333  0.02170379  0.255937057\nVaccinium.oxycoccos   0.106576192  0.03747910 -0.252283837\nCalluna.vulgaris     -0.116414955 -0.04099940 -0.005405623\nCarex.rostrata       -0.051335500  0.15404766 -0.092239705\nCarex.lasiocarpa      0.046897686  0.01764995 -0.035231829\n                            PC52        PC53        PC54        PC55\nVaccinium.myrtillus  -0.06123744  0.02171419  0.14411406  0.00332804\nVaccinium.uliginosum -0.01880318  0.05801788 -0.05699083 -0.27112470\nVaccinium.oxycoccos  -0.04579199 -0.01315534  0.03395313  0.01463785\nCalluna.vulgaris      0.06655778  0.01407216 -0.03274701  0.14187200\nCarex.rostrata        0.26175407  0.05947144  0.02639262 -0.06030997\nCarex.lasiocarpa      0.02070680 -0.16979986  0.07054023  0.05534779\n                             PC56          PC57        PC58\nVaccinium.myrtillus  -0.176465369  0.2510703032 -0.29227710\nVaccinium.uliginosum  0.028639023 -0.1749990419  0.07550450\nVaccinium.oxycoccos  -0.066240230  0.0002792521  0.08310185\nCalluna.vulgaris      0.029594871  0.0250762446 -0.04701718\nCarex.rostrata        0.119432735  0.0194000088  0.03939742\nCarex.lasiocarpa      0.009008353  0.1129636479  0.07897847\n                            PC59         PC60        PC61\nVaccinium.myrtillus   0.04797703 -0.164529747 -0.01037061\nVaccinium.uliginosum -0.03917549  0.204167656 -0.10445665\nVaccinium.oxycoccos   0.08031351 -0.058099456  0.02822838\nCalluna.vulgaris      0.09861205  0.118341839 -0.21528428\nCarex.rostrata        0.03985654  0.006068704 -0.03736568\nCarex.lasiocarpa     -0.08204992  0.015283835  0.17630629\n                             PC62        PC63\nVaccinium.myrtillus   0.081250479  0.39976049\nVaccinium.uliginosum  0.026424058  0.02116621\nVaccinium.oxycoccos   0.136334609  0.09430813\nCalluna.vulgaris     -0.030399136 -0.04117364\nCarex.rostrata       -0.008872512  0.18155482\nCarex.lasiocarpa     -0.075238271 -0.12703851\n\n\n#Erklaerte Varianz der Achsen (sdev ist die Wurzel daraus)\n# früher gabs den Befehl summary()\n# jetzt von hand: standardabweichung im quadrat/totale varianz * 100 (um prozentwerte zu bekommen)\nE<-o.pca$sdev^2/o.pca$totdev*100\nE[1:5] # erste fünf PCA\n\n\n[1] 20.618848  8.098205  6.070537  3.666650  3.322363\n\n\n\n#PCA-Plot der Lage der Beobachtungen im Ordinationsraum\nplot(o.pca$scores[,1],o.pca$scores[,2],type=\"n\", asp=1, xlab=\"PC1\", ylab=\"PC2\")\npoints(o.pca$scores[,1],o.pca$scores[,2],pch=18)\n\n\n\n\nplot(o.pca$scores[,1],o.pca$scores[,3],type=\"n\", asp=1, xlab=\"PC1\", ylab=\"PC3\")\npoints(o.pca$scores[,1],o.pca$scores[,3],pch=18)\n\n\n\n\n#Subjektive Auswahl von Arten zur Darstellung\nsel.sp <- c(3,11,23,39,46,72,77,96, 101, 119)\nsnames <- names(sveg[ , sel.sp])\nsnames\n\n\n [1] \"Vaccinium.oxycoccos\" \"Carex.echinata\"      \"Arnica.montana\"     \n [4] \"Carex.pulicaris\"     \"Sphagnum.recurvum\"   \"Viola.palustris\"    \n [7] \"Galium.uliginosum\"   \"Stachys.officinalis\" \"Linum.catharticum\"  \n[10] \"Ctenidium.molluscum\"\n\n\n#PCA-Plot der Korrelationen der Variablen (hier Arten) mit den Achsen (h)\nx <- o.pca$loadings[,1]\ny <- o.pca$loadings[,2]\nplot(x,y,type=\"n\",asp=1)\narrows(0,0,x[sel.sp],y[sel.sp],length=0.08)\ntext(x[sel.sp],y[sel.sp],snames,pos=1,cex=0.6)\n\n\n\n\n# hier gehts noch zu weiteren Beispielen zu PCA's:\n# https://stats.stackexchange.com/questions/102882/steps-done-in-factor-analysis-compared-to-steps-done-in-pca/102999#102999\n# https://stats.stackexchange.com/questions/222/what-are-principal-component-scores\n# https://stats.stackexchange.com/questions/102882/steps-done-in-factor-analysis-compared-to-steps-done-in-pca/102999#102999\n\n\n\n\n\n# PCA ---------------------------------------------------------------------\n# Beispiel1: Daten aus Wildi (2013)\n#Idee von Ordinationen aus Wildi p. 73-74\n\nif(!require(labdsv)){install.packages(\"labdsv\")}\nlibrary(labdsv)\n\n#Für Ordinationen benötigen wir Matrizen, nicht Data.frames\n#Generieren von Daten\nraw <- matrix(c(1,2,2.5,2.5,1,0.5,0,1,2,4,3,1), nrow=6)\ncolnames(raw) <- c(\"spec.1\", \"spec.2\")\nrownames(raw) <- c(\"r1\",\"r2\",\"r3\",\"r4\",\"r5\",\"r6\")\nraw\n\n\n   spec.1 spec.2\nr1    1.0      0\nr2    2.0      1\nr3    2.5      2\nr4    2.5      4\nr5    1.0      3\nr6    0.5      1\n\n\n#originale Daten im zweidimensionalen Raum\nx1 <- raw[,1]\ny1 <- raw[,2]\nz <- c(rep(1:6))\n\n\n#Plot Abhängigkeit der Arten vom Umweltgradienten\nplot(c(x1, y1)~c(z,z), type=\"n\", axes=T, bty=\"l\", las=1, xlim=c(1,6), ylim=c(0,5),\n     xlab=\"Umweltgradient\",ylab=\"Deckung der Arten\")\npoints(x1~z, pch=21, type=\"b\")\npoints(y1~z, pch=16, type=\"b\")\n\n\n\n\n#zentrierte Daten\ncent <- scale(raw, scale=F)\nx2 <- cent[,1]\ny2 <- cent[,2]\n\n#rotierte Daten\no.pca <- pca(raw)\nx3 <- o.pca$scores[,1]\ny3 <- o.pca$scores[,2]\n\n\n#Visualisierung der Schritte im Ordinationsraum\nplot(c(y1,y2,y3)~c(x1,x2,x3), type=\"n\", axes=T, bty=\"l\", las=1, xlim=c(-4,4), \n     ylim=c(-4,4), xlab=\"Art 1\", ylab=\"Art 2\")\npoints(y1~x1, pch=21, type=\"b\", col=\"green\", lwd=2)\npoints(y2~x2, pch=16, type=\"b\",col=\"red\", lwd=2)\npoints(y3~x3, pch=17, type=\"b\", col=\"blue\", lwd=2)\n\n\n\n\n#Durchführung der PCA\npca <- pca(raw)\n\n#Koordinaten im Ordinationsraum\npca$scores\n\n\n          PC1         PC2\nr1 -1.9216223 -0.09357697\nr2 -0.6353776 -0.68143293\nr3  0.4762699 -0.80076373\nr4  2.3503705 -0.10237502\nr5  0.8895287  0.95400610\nr6 -1.1591692  0.72414255\n\n\n#Korrelationen der Variablen mit den Ordinationsachsen\npca$loadings\n\n\n             PC1        PC2\nspec.1 0.3491944 -0.9370503\nspec.2 0.9370503  0.3491944\n\n\n#Erklärte Varianz der Achsen in Prozent\nE <- pca$sdev^2/pca$totdev*100\nE\n\n\n[1] 82.40009 17.59991\n\n\n#mit prcomp\npca.2 <- prcomp(raw, scale=F)\nsummary(pca.2)\n\n\nImportance of components:\n                         PC1    PC2\nStandard deviation     1.548 0.7154\nProportion of Variance 0.824 0.1760\nCumulative Proportion  0.824 1.0000\n\nplot(pca.2)\n\n\n\nbiplot(pca.2)\n\n\n\n\n#mit vegan\nif(!require(vegan)){install.packages(\"vegan\")}\nlibrary(\"vegan\")\npca.3 <- rda(raw, scale=FALSE) #Die Funktion rda führt ein PCA aus an wenn nicht Umwelt und Artdaten definiert werden\n#scores(pca.3,display=c(\"sites\"))\n#scores(pca.3,display=c(\"species\"))\nsummary(pca.3, axes=0)\n\n\n\nCall:\nrda(X = raw, scale = FALSE) \n\nPartitioning of variance:\n              Inertia Proportion\nTotal           2.908          1\nUnconstrained   2.908          1\n\nEigenvalues, and their contribution to the variance \n\nImportance of components:\n                        PC1    PC2\nEigenvalue            2.396 0.5119\nProportion Explained  0.824 0.1760\nCumulative Proportion 0.824 1.0000\n\nScaling 2 for species and site scores\n* Species are scaled proportional to eigenvalues\n* Sites are unscaled: weighted dispersion equal on all dimensions\n* General scaling constant of scores:  \n\nbiplot(pca.3, scaling=2)\nbiplot(pca.3, scaling=\"species\")#scaling=species macht das selbe wie scaling=2\n\n\n\n\n\n####Beispiel2: Daten aus Wildi 2013\nif(!require(dave)){install.packages(\"dave\")}\nlibrary(dave)\ndata(sveg)\nstr(sveg)\n\n\n'data.frame':   63 obs. of  119 variables:\n $ Vaccinium.myrtillus       : int  0 1 1 1 1 1 1 0 0 1 ...\n $ Vaccinium.uliginosum      : int  0 2 1 0 1 1 1 1 0 0 ...\n $ Vaccinium.oxycoccos       : int  2 1 1 1 1 2 1 1 1 1 ...\n $ Calluna.vulgaris          : int  1 3 0 0 1 1 0 0 0 0 ...\n $ Carex.rostrata            : int  0 0 0 1 0 0 0 2 0 0 ...\n $ Carex.lasiocarpa          : int  0 2 2 1 2 2 1 1 1 1 ...\n $ Carex.nigra               : int  2 1 0 0 1 1 1 2 1 1 ...\n $ Carex.davalliana          : int  0 0 0 0 0 0 0 0 0 1 ...\n $ Carex.hostiana            : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Carex.pauciflora          : int  0 0 0 1 0 0 0 0 0 0 ...\n $ Carex.echinata            : int  2 0 1 2 1 2 1 1 3 2 ...\n $ Carex.panicea             : int  0 0 1 0 1 0 1 0 0 0 ...\n $ Trichophorum.caespitosum  : int  2 2 1 0 0 1 0 1 1 1 ...\n $ Trichophorum.alpinum      : int  1 0 1 0 0 0 0 0 0 1 ...\n $ Eriophorum.vaginatum      : int  0 1 0 1 0 0 0 0 0 0 ...\n $ Eriophorum.latifolium     : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Eriophorum.angustifolium  : int  1 2 1 1 1 1 0 1 1 1 ...\n $ Tofieldia.calyculata      : int  0 0 0 0 0 1 0 0 0 0 ...\n $ Pinguicula.vulgaris       : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Parnassia.palustris       : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Rhynchospora.alba         : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Drosera.rotundifolia      : int  1 0 0 1 1 1 0 1 0 2 ...\n $ Arnica.montana            : int  1 0 2 1 1 1 0 1 2 1 ...\n $ Dactylorhiza.maculata     : int  1 1 1 1 0 1 1 1 1 1 ...\n $ Polytrichum.strictum      : int  1 1 1 1 1 1 2 0 1 0 ...\n $ Succisa.pratensis         : int  0 1 1 0 1 1 1 0 0 1 ...\n $ Anthoxanthum.odoratum     : int  1 1 1 1 1 1 1 0 1 1 ...\n $ Molinia.caerulea          : int  1 2 2 1 1 2 1 1 1 1 ...\n $ Gentiana.asclepiadea      : int  1 1 1 1 1 1 0 0 1 1 ...\n $ Luzula.multiflora         : int  0 1 1 0 0 0 1 0 0 0 ...\n $ Festuca.rubra             : int  0 0 0 0 0 0 1 0 0 1 ...\n $ Potentilla.erecta         : int  2 1 1 2 1 2 2 1 1 2 ...\n $ Sphagnum.magellanicum     : int  2 0 1 1 3 3 2 1 1 2 ...\n $ Sphagnum.papillosum       : int  1 1 1 1 1 0 0 0 0 1 ...\n $ Equisetum.palustre        : int  1 1 2 2 1 1 1 3 1 1 ...\n $ Aulacomnium.palustre      : int  2 1 1 1 1 1 2 1 1 1 ...\n $ Euphrasia.rostkoviana     : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Nardus.stricta            : int  0 1 1 0 1 1 1 1 1 1 ...\n $ Carex.pulicaris           : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Climacium.dendroides      : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Carex.pallescens          : int  0 0 1 0 0 0 0 0 0 0 ...\n $ Carex.lepidocarpa         : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Briza.media               : int  0 0 1 0 1 0 1 0 0 0 ...\n $ Sphagnum.platyphyllum     : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Sphagnum.tenellum         : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Sphagnum.recurvum         : int  5 2 6 6 2 3 5 6 6 3 ...\n $ Sphagnum.rubellum         : int  1 1 2 1 2 1 0 0 1 4 ...\n $ Sphagnum.centrale         : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Sphagnum.subsecundum      : int  0 0 0 0 0 0 0 0 0 1 ...\n $ Juncus.alpinoarticulatus  : int  0 0 0 0 0 0 0 0 0 1 ...\n $ Solidago.virgaurea        : int  2 1 1 1 0 1 1 1 0 1 ...\n $ Agrostis.canina           : int  1 0 1 1 1 0 0 0 1 1 ...\n $ Juncus.effusus            : int  1 0 1 1 1 0 0 0 1 0 ...\n $ Frangula.alnus            : int  0 0 1 1 0 0 1 0 0 0 ...\n $ Anemone.nemorosa          : int  0 0 0 0 2 1 0 0 0 0 ...\n $ Holcus.lanatus            : int  0 0 1 0 1 1 0 0 0 0 ...\n $ Drepanocladus.exannulatus : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Homogyne.alpina           : int  0 1 0 0 0 0 0 0 0 0 ...\n $ Polygala.vulgaris         : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Trollius.europaeus        : int  0 0 0 0 0 0 1 0 0 0 ...\n $ Polygonum.bistorta        : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Lotus.pedunculatus        : int  0 0 0 0 1 0 0 0 0 0 ...\n $ Trifolium.pratense        : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Taraxacum.palustre        : int  0 0 1 0 0 0 0 0 0 0 ...\n $ Campylium.stellatum       : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Cirsium.palustre          : int  0 0 1 0 0 0 0 0 0 0 ...\n $ Lysimachia.vulgaris       : int  0 1 1 1 0 0 0 0 1 1 ...\n $ Maianthemum.bifolium      : int  1 1 1 1 1 1 1 1 0 0 ...\n $ Equisetum.sylvaticum      : int  0 1 1 1 0 0 0 1 0 0 ...\n $ Centaurea.jacea           : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Prunella.grandiflora      : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Viola.palustris           : int  0 0 1 0 0 0 0 0 0 1 ...\n $ Angelica.sylvestris       : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Filipendula.ulmaria       : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Thuidium.delicatulum      : int  0 1 0 0 0 1 0 0 0 1 ...\n $ Sanguisorba.officinalis   : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Galium.uliginosum         : int  0 0 1 0 0 0 0 0 0 0 ...\n $ Epipactis.palustris       : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Pleurozium.schreberi      : int  1 2 1 1 1 0 1 0 0 1 ...\n $ Calliergon.stramineum     : int  1 0 1 1 1 0 0 0 1 0 ...\n $ Aster.bellidiastrum       : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Hypnum.bambergeri         : int  0 0 0 0 0 0 0 0 0 1 ...\n $ Drepanocladus.revolvens   : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Dicranum.bonjeanii        : int  1 0 0 0 0 1 1 0 0 0 ...\n $ Dicranum.scoparium        : int  0 1 0 0 0 0 0 0 0 0 ...\n $ Hylocomium.splendens      : int  1 1 0 1 1 1 1 0 0 1 ...\n $ Rhytidiadelphus.squarrosus: int  1 1 1 1 1 1 1 0 0 1 ...\n $ Calliergonella.cuspidata  : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Fissidens.adianthoides    : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Primula.veris             : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Primula.farinosa          : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Hieracium.lachenalii      : int  0 1 0 0 1 1 1 1 1 1 ...\n $ Crepis.paludosa           : int  0 0 0 0 1 0 1 0 0 1 ...\n $ Leontodon.hispidus        : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Lotus.corniculatus        : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Stachys.officinalis       : int  0 0 0 0 0 0 0 0 0 1 ...\n $ Carex.flacca              : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Gentiana.verna            : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Geranium.sylvaticum       : int  0 0 0 0 0 0 0 0 0 0 ...\n  [list output truncated]\n\nsummary(sveg)\n\n\n Vaccinium.myrtillus Vaccinium.uliginosum Vaccinium.oxycoccos\n Min.   :0.0000      Min.   :0.0000       Min.   :0.0000     \n 1st Qu.:0.0000      1st Qu.:0.0000       1st Qu.:0.0000     \n Median :0.0000      Median :0.0000       Median :0.0000     \n Mean   :0.1905      Mean   :0.2063       Mean   :0.5079     \n 3rd Qu.:0.0000      3rd Qu.:0.0000       3rd Qu.:1.0000     \n Max.   :1.0000      Max.   :2.0000       Max.   :2.0000     \n Calluna.vulgaris Carex.rostrata    Carex.lasiocarpa  Carex.nigra    \n Min.   :0.0000   Min.   :0.00000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.00000   Median :1.0000   Median :1.0000  \n Mean   :0.3333   Mean   :0.07937   Mean   :0.9365   Mean   :0.6667  \n 3rd Qu.:1.0000   3rd Qu.:0.00000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :3.0000   Max.   :2.00000   Max.   :2.0000   Max.   :2.0000  \n Carex.davalliana Carex.hostiana   Carex.pauciflora  Carex.echinata \n Min.   :0.0000   Min.   :0.0000   Min.   :0.00000   Min.   :0.000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:0.500  \n Median :0.0000   Median :0.0000   Median :0.00000   Median :1.000  \n Mean   :0.4444   Mean   :0.2698   Mean   :0.03175   Mean   :1.317  \n 3rd Qu.:1.0000   3rd Qu.:0.0000   3rd Qu.:0.00000   3rd Qu.:2.000  \n Max.   :2.0000   Max.   :2.0000   Max.   :1.00000   Max.   :3.000  \n Carex.panicea    Trichophorum.caespitosum Trichophorum.alpinum\n Min.   :0.0000   Min.   :0.000            Min.   :0.0000      \n 1st Qu.:0.0000   1st Qu.:1.000            1st Qu.:0.0000      \n Median :1.0000   Median :1.000            Median :0.0000      \n Mean   :0.6349   Mean   :1.413            Mean   :0.4762      \n 3rd Qu.:1.0000   3rd Qu.:2.000            3rd Qu.:1.0000      \n Max.   :2.0000   Max.   :3.000            Max.   :2.0000      \n Eriophorum.vaginatum Eriophorum.latifolium Eriophorum.angustifolium\n Min.   :0.0000       Min.   :0.000         Min.   :0.0000          \n 1st Qu.:0.0000       1st Qu.:0.000         1st Qu.:1.0000          \n Median :0.0000       Median :0.000         Median :1.0000          \n Mean   :0.1587       Mean   :0.254         Mean   :0.8413          \n 3rd Qu.:0.0000       3rd Qu.:0.000         3rd Qu.:1.0000          \n Max.   :2.0000       Max.   :2.000         Max.   :2.0000          \n Tofieldia.calyculata Pinguicula.vulgaris Parnassia.palustris\n Min.   :0.0000       Min.   :0.000       Min.   :0.0000     \n 1st Qu.:0.0000       1st Qu.:0.000       1st Qu.:0.0000     \n Median :0.0000       Median :0.000       Median :0.0000     \n Mean   :0.3968       Mean   :0.381       Mean   :0.3968     \n 3rd Qu.:1.0000       3rd Qu.:1.000       3rd Qu.:1.0000     \n Max.   :1.0000       Max.   :2.000       Max.   :1.0000     \n Rhynchospora.alba Drosera.rotundifolia Arnica.montana  \n Min.   :0.00000   Min.   :0.0000       Min.   :0.0000  \n 1st Qu.:0.00000   1st Qu.:0.0000       1st Qu.:0.0000  \n Median :0.00000   Median :1.0000       Median :0.0000  \n Mean   :0.03175   Mean   :0.8095       Mean   :0.6984  \n 3rd Qu.:0.00000   3rd Qu.:1.0000       3rd Qu.:1.0000  \n Max.   :1.00000   Max.   :2.0000       Max.   :3.0000  \n Dactylorhiza.maculata Polytrichum.strictum Succisa.pratensis\n Min.   :0.000         Min.   :0.0000       Min.   :0.0000   \n 1st Qu.:0.000         1st Qu.:0.0000       1st Qu.:0.0000   \n Median :1.000         Median :0.0000       Median :1.0000   \n Mean   :0.746         Mean   :0.4127       Mean   :0.7143   \n 3rd Qu.:1.000         3rd Qu.:1.0000       3rd Qu.:1.0000   \n Max.   :2.000         Max.   :3.0000       Max.   :1.0000   \n Anthoxanthum.odoratum Molinia.caerulea Gentiana.asclepiadea\n Min.   :0.0000        Min.   :0.00     Min.   :0.0000      \n 1st Qu.:0.0000        1st Qu.:1.00     1st Qu.:1.0000      \n Median :1.0000        Median :1.00     Median :1.0000      \n Mean   :0.6349        Mean   :1.19     Mean   :0.7937      \n 3rd Qu.:1.0000        3rd Qu.:1.00     3rd Qu.:1.0000      \n Max.   :1.0000        Max.   :2.00     Max.   :2.0000      \n Luzula.multiflora Festuca.rubra    Potentilla.erecta\n Min.   :0.0000    Min.   :0.0000   Min.   :0.000    \n 1st Qu.:0.0000    1st Qu.:0.0000   1st Qu.:1.000    \n Median :0.0000    Median :1.0000   Median :1.000    \n Mean   :0.1905    Mean   :0.5397   Mean   :1.286    \n 3rd Qu.:0.0000    3rd Qu.:1.0000   3rd Qu.:2.000    \n Max.   :1.0000    Max.   :1.0000   Max.   :2.000    \n Sphagnum.magellanicum Sphagnum.papillosum Equisetum.palustre\n Min.   :0.000         Min.   :0.0000      Min.   :0.000     \n 1st Qu.:0.000         1st Qu.:0.0000      1st Qu.:1.000     \n Median :1.000         Median :1.0000      Median :1.000     \n Mean   :1.016         Mean   :0.9206      Mean   :1.079     \n 3rd Qu.:1.000         3rd Qu.:1.0000      3rd Qu.:1.000     \n Max.   :5.000         Max.   :5.0000      Max.   :3.000     \n Aulacomnium.palustre Euphrasia.rostkoviana Nardus.stricta  \n Min.   :0.000        Min.   :0.0000        Min.   :0.0000  \n 1st Qu.:1.000        1st Qu.:0.0000        1st Qu.:0.0000  \n Median :1.000        Median :0.0000        Median :1.0000  \n Mean   :1.095        Mean   :0.3968        Mean   :0.6349  \n 3rd Qu.:1.000        3rd Qu.:1.0000        3rd Qu.:1.0000  \n Max.   :3.000        Max.   :2.0000        Max.   :2.0000  \n Carex.pulicaris Climacium.dendroides Carex.pallescens\n Min.   :0.000   Min.   :0.0000       Min.   :0.0000  \n 1st Qu.:0.000   1st Qu.:0.0000       1st Qu.:0.0000  \n Median :0.000   Median :0.0000       Median :0.0000  \n Mean   :0.381   Mean   :0.5397       Mean   :0.1746  \n 3rd Qu.:1.000   3rd Qu.:1.0000       3rd Qu.:0.0000  \n Max.   :2.000   Max.   :3.0000       Max.   :1.0000  \n Carex.lepidocarpa  Briza.media    Sphagnum.platyphyllum\n Min.   :0.000     Min.   :0.000   Min.   :0.0000       \n 1st Qu.:0.000     1st Qu.:0.000   1st Qu.:0.0000       \n Median :0.000     Median :0.000   Median :0.0000       \n Mean   :0.127     Mean   :0.381   Mean   :0.2381       \n 3rd Qu.:0.000     3rd Qu.:1.000   3rd Qu.:0.0000       \n Max.   :1.000     Max.   :1.000   Max.   :3.0000       \n Sphagnum.tenellum Sphagnum.recurvum Sphagnum.rubellum\n Min.   :0.00000   Min.   :0.000     Min.   :0.000    \n 1st Qu.:0.00000   1st Qu.:0.000     1st Qu.:0.000    \n Median :0.00000   Median :1.000     Median :1.000    \n Mean   :0.06349   Mean   :1.571     Mean   :1.222    \n 3rd Qu.:0.00000   3rd Qu.:2.500     3rd Qu.:2.000    \n Max.   :1.00000   Max.   :6.000     Max.   :6.000    \n Sphagnum.centrale Sphagnum.subsecundum Juncus.alpinoarticulatus\n Min.   :0.00000   Min.   :0.0000       Min.   :0.0000          \n 1st Qu.:0.00000   1st Qu.:0.0000       1st Qu.:0.0000          \n Median :0.00000   Median :0.0000       Median :0.0000          \n Mean   :0.03175   Mean   :0.8254       Mean   :0.2857          \n 3rd Qu.:0.00000   3rd Qu.:1.0000       3rd Qu.:1.0000          \n Max.   :1.00000   Max.   :6.0000       Max.   :1.0000          \n Solidago.virgaurea Agrostis.canina  Juncus.effusus  \n Min.   :0.0000     Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000     1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000     Median :0.0000   Median :0.0000  \n Mean   :0.2381     Mean   :0.3968   Mean   :0.1429  \n 3rd Qu.:0.0000     3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :2.0000     Max.   :1.0000   Max.   :1.0000  \n Frangula.alnus   Anemone.nemorosa Holcus.lanatus  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :1.0000   Median :0.0000  \n Mean   :0.4921   Mean   :0.6032   Mean   :0.2063  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :2.0000   Max.   :2.0000   Max.   :1.0000  \n Drepanocladus.exannulatus Homogyne.alpina   Polygala.vulgaris\n Min.   :0.00000           Min.   :0.00000   Min.   :0.0000   \n 1st Qu.:0.00000           1st Qu.:0.00000   1st Qu.:0.0000   \n Median :0.00000           Median :0.00000   Median :0.0000   \n Mean   :0.04762           Mean   :0.04762   Mean   :0.1905   \n 3rd Qu.:0.00000           3rd Qu.:0.00000   3rd Qu.:0.0000   \n Max.   :1.00000           Max.   :2.00000   Max.   :1.0000   \n Trollius.europaeus Polygonum.bistorta Lotus.pedunculatus\n Min.   :0.0000     Min.   :0.00000    Min.   :0.00000   \n 1st Qu.:0.0000     1st Qu.:0.00000    1st Qu.:0.00000   \n Median :0.0000     Median :0.00000    Median :0.00000   \n Mean   :0.3333     Mean   :0.06349    Mean   :0.06349   \n 3rd Qu.:1.0000     3rd Qu.:0.00000    3rd Qu.:0.00000   \n Max.   :1.0000     Max.   :2.00000    Max.   :2.00000   \n Trifolium.pratense Taraxacum.palustre Campylium.stellatum\n Min.   :0.0000     Min.   :0.0000     Min.   :0.0000     \n 1st Qu.:0.0000     1st Qu.:0.0000     1st Qu.:0.0000     \n Median :0.0000     Median :0.0000     Median :0.0000     \n Mean   :0.2063     Mean   :0.3333     Mean   :0.5079     \n 3rd Qu.:0.0000     3rd Qu.:1.0000     3rd Qu.:1.0000     \n Max.   :1.0000     Max.   :1.0000     Max.   :5.0000     \n Cirsium.palustre Lysimachia.vulgaris Maianthemum.bifolium\n Min.   :0.0000   Min.   :0.0000      Min.   :0.000       \n 1st Qu.:0.0000   1st Qu.:0.0000      1st Qu.:0.000       \n Median :0.0000   Median :0.0000      Median :1.000       \n Mean   :0.1429   Mean   :0.4603      Mean   :0.619       \n 3rd Qu.:0.0000   3rd Qu.:1.0000      3rd Qu.:1.000       \n Max.   :1.0000   Max.   :1.0000      Max.   :2.000       \n Equisetum.sylvaticum Centaurea.jacea  Prunella.grandiflora\n Min.   :0.0000       Min.   :0.0000   Min.   :0.0000      \n 1st Qu.:0.0000       1st Qu.:0.0000   1st Qu.:0.0000      \n Median :0.0000       Median :0.0000   Median :0.0000      \n Mean   :0.1587       Mean   :0.2857   Mean   :0.2063      \n 3rd Qu.:0.0000       3rd Qu.:0.5000   3rd Qu.:0.0000      \n Max.   :1.0000       Max.   :2.0000   Max.   :1.0000      \n Viola.palustris  Angelica.sylvestris Filipendula.ulmaria\n Min.   :0.0000   Min.   :0.00000     Min.   :0.0000     \n 1st Qu.:0.0000   1st Qu.:0.00000     1st Qu.:0.0000     \n Median :0.0000   Median :0.00000     Median :0.0000     \n Mean   :0.3333   Mean   :0.03175     Mean   :0.1111     \n 3rd Qu.:1.0000   3rd Qu.:0.00000     3rd Qu.:0.0000     \n Max.   :2.0000   Max.   :1.00000     Max.   :2.0000     \n Thuidium.delicatulum Sanguisorba.officinalis Galium.uliginosum\n Min.   :0.0000       Min.   :0.00000         Min.   :0.0000   \n 1st Qu.:0.0000       1st Qu.:0.00000         1st Qu.:0.0000   \n Median :1.0000       Median :0.00000         Median :0.0000   \n Mean   :0.6508       Mean   :0.04762         Mean   :0.2857   \n 3rd Qu.:1.0000       3rd Qu.:0.00000         3rd Qu.:1.0000   \n Max.   :4.0000       Max.   :1.00000         Max.   :1.0000   \n Epipactis.palustris Pleurozium.schreberi Calliergon.stramineum\n Min.   :0.0000      Min.   :0.000        Min.   :0.000        \n 1st Qu.:0.0000      1st Qu.:0.000        1st Qu.:0.000        \n Median :0.0000      Median :0.000        Median :1.000        \n Mean   :0.1905      Mean   :0.619        Mean   :0.619        \n 3rd Qu.:0.0000      3rd Qu.:1.000        3rd Qu.:1.000        \n Max.   :1.0000      Max.   :6.000        Max.   :2.000        \n Aster.bellidiastrum Hypnum.bambergeri Drepanocladus.revolvens\n Min.   :0.0000      Min.   :0.0000    Min.   :0.0000         \n 1st Qu.:0.0000      1st Qu.:0.0000    1st Qu.:0.0000         \n Median :0.0000      Median :0.0000    Median :0.0000         \n Mean   :0.2698      Mean   :0.4762    Mean   :0.1587         \n 3rd Qu.:0.0000      3rd Qu.:1.0000    3rd Qu.:0.0000         \n Max.   :2.0000      Max.   :5.0000    Max.   :3.0000         \n Dicranum.bonjeanii Dicranum.scoparium Hylocomium.splendens\n Min.   :0.0000     Min.   :0.00000    Min.   :0.000       \n 1st Qu.:0.0000     1st Qu.:0.00000    1st Qu.:0.000       \n Median :0.0000     Median :0.00000    Median :1.000       \n Mean   :0.4127     Mean   :0.07937    Mean   :1.063       \n 3rd Qu.:1.0000     3rd Qu.:0.00000    3rd Qu.:1.000       \n Max.   :1.0000     Max.   :1.00000    Max.   :5.000       \n Rhytidiadelphus.squarrosus Calliergonella.cuspidata\n Min.   :0.0000             Min.   :0.000           \n 1st Qu.:0.0000             1st Qu.:0.000           \n Median :0.0000             Median :0.000           \n Mean   :0.4444             Mean   :0.127           \n 3rd Qu.:1.0000             3rd Qu.:0.000           \n Max.   :2.0000             Max.   :1.000           \n Fissidens.adianthoides Primula.veris   Primula.farinosa \n Min.   :0.000          Min.   :0.000   Min.   :0.00000  \n 1st Qu.:0.000          1st Qu.:0.000   1st Qu.:0.00000  \n Median :0.000          Median :0.000   Median :0.00000  \n Mean   :0.127          Mean   :0.127   Mean   :0.09524  \n 3rd Qu.:0.000          3rd Qu.:0.000   3rd Qu.:0.00000  \n Max.   :1.000          Max.   :1.000   Max.   :1.00000  \n Hieracium.lachenalii Crepis.paludosa  Leontodon.hispidus\n Min.   :0.0000       Min.   :0.0000   Min.   :0.0000    \n 1st Qu.:0.0000       1st Qu.:0.0000   1st Qu.:0.0000    \n Median :1.0000       Median :0.0000   Median :0.0000    \n Mean   :0.6508       Mean   :0.2381   Mean   :0.2063    \n 3rd Qu.:1.0000       3rd Qu.:0.0000   3rd Qu.:0.0000    \n Max.   :1.0000       Max.   :1.0000   Max.   :1.0000    \n Lotus.corniculatus Stachys.officinalis  Carex.flacca   \n Min.   :0.0000     Min.   :0.0000      Min.   :0.0000  \n 1st Qu.:0.0000     1st Qu.:0.0000      1st Qu.:0.0000  \n Median :0.0000     Median :0.0000      Median :0.0000  \n Mean   :0.1905     Mean   :0.1587      Mean   :0.1111  \n 3rd Qu.:0.0000     3rd Qu.:0.0000      3rd Qu.:0.0000  \n Max.   :1.0000     Max.   :1.0000      Max.   :1.0000  \n Gentiana.verna    Geranium.sylvaticum Ranunculus.nemorosus\n Min.   :0.00000   Min.   :0.00000     Min.   :0.000       \n 1st Qu.:0.00000   1st Qu.:0.00000     1st Qu.:0.000       \n Median :0.00000   Median :0.00000     Median :0.000       \n Mean   :0.03175   Mean   :0.04762     Mean   :0.381       \n 3rd Qu.:0.00000   3rd Qu.:0.00000     3rd Qu.:1.000       \n Max.   :1.00000   Max.   :1.00000     Max.   :1.000       \n Linum.catharticum Cirsium.oleraceum Colchicum.autumnale\n Min.   :0.000     Min.   :0.00000   Min.   :0.00000    \n 1st Qu.:0.000     1st Qu.:0.00000   1st Qu.:0.00000    \n Median :0.000     Median :0.00000   Median :0.00000    \n Mean   :0.127     Mean   :0.03175   Mean   :0.03175    \n 3rd Qu.:0.000     3rd Qu.:0.00000   3rd Qu.:0.00000    \n Max.   :1.000     Max.   :1.00000   Max.   :1.00000    \n Polygala.amarella Polygala.serpyllifolia Equisetum.arvense\n Min.   :0.00000   Min.   :0.00000        Min.   :0.0000   \n 1st Qu.:0.00000   1st Qu.:0.00000        1st Qu.:0.0000   \n Median :0.00000   Median :0.00000        Median :0.0000   \n Mean   :0.04762   Mean   :0.03175        Mean   :0.2063   \n 3rd Qu.:0.00000   3rd Qu.:0.00000        3rd Qu.:0.0000   \n Max.   :1.00000   Max.   :1.00000        Max.   :1.0000   \n Deschampsia.cespitosa Rhinanthus.minor  Gymnadenia.conopsea\n Min.   :0.00000       Min.   :0.00000   Min.   :0.0000     \n 1st Qu.:0.00000       1st Qu.:0.00000   1st Qu.:0.0000     \n Median :0.00000       Median :0.00000   Median :0.0000     \n Mean   :0.06349       Mean   :0.06349   Mean   :0.1429     \n 3rd Qu.:0.00000       3rd Qu.:0.00000   3rd Qu.:0.0000     \n Max.   :1.00000       Max.   :1.00000   Max.   :1.0000     \n Melampyrum.pratense  Salix.spec.      Caltha.palustris \n Min.   :0.00000     Min.   :0.00000   Min.   :0.00000  \n 1st Qu.:0.00000     1st Qu.:0.00000   1st Qu.:0.00000  \n Median :0.00000     Median :0.00000   Median :0.00000  \n Mean   :0.03175     Mean   :0.03175   Mean   :0.04762  \n 3rd Qu.:0.00000     3rd Qu.:0.00000   3rd Qu.:0.00000  \n Max.   :1.00000     Max.   :1.00000   Max.   :1.00000  \n Dactylorhiza.fistulosa Platanthera.bifolia Acer.pseudoplatanus\n Min.   :0.00000        Min.   :0.00000     Min.   :0.00000    \n 1st Qu.:0.00000        1st Qu.:0.00000     1st Qu.:0.00000    \n Median :0.00000        Median :0.00000     Median :0.00000    \n Mean   :0.06349        Mean   :0.09524     Mean   :0.06349    \n 3rd Qu.:0.00000        3rd Qu.:0.00000     3rd Qu.:0.00000    \n Max.   :1.00000        Max.   :1.00000     Max.   :1.00000    \n Danthonia.decumbens Drepanocladus.spec. Tomentypnum.nitens\n Min.   :0.00000     Min.   :0.00000     Min.   :0.00000   \n 1st Qu.:0.00000     1st Qu.:0.00000     1st Qu.:0.00000   \n Median :0.00000     Median :0.00000     Median :0.00000   \n Mean   :0.06349     Mean   :0.03175     Mean   :0.03175   \n 3rd Qu.:0.00000     3rd Qu.:0.00000     3rd Qu.:0.00000   \n Max.   :1.00000     Max.   :1.00000     Max.   :1.00000   \n Ctenidium.molluscum\n Min.   :0.00000    \n 1st Qu.:0.00000    \n Median :0.00000    \n Mean   :0.03175    \n 3rd Qu.:0.00000    \n Max.   :1.00000    \n\nnames(sveg)\n\n\n  [1] \"Vaccinium.myrtillus\"        \"Vaccinium.uliginosum\"      \n  [3] \"Vaccinium.oxycoccos\"        \"Calluna.vulgaris\"          \n  [5] \"Carex.rostrata\"             \"Carex.lasiocarpa\"          \n  [7] \"Carex.nigra\"                \"Carex.davalliana\"          \n  [9] \"Carex.hostiana\"             \"Carex.pauciflora\"          \n [11] \"Carex.echinata\"             \"Carex.panicea\"             \n [13] \"Trichophorum.caespitosum\"   \"Trichophorum.alpinum\"      \n [15] \"Eriophorum.vaginatum\"       \"Eriophorum.latifolium\"     \n [17] \"Eriophorum.angustifolium\"   \"Tofieldia.calyculata\"      \n [19] \"Pinguicula.vulgaris\"        \"Parnassia.palustris\"       \n [21] \"Rhynchospora.alba\"          \"Drosera.rotundifolia\"      \n [23] \"Arnica.montana\"             \"Dactylorhiza.maculata\"     \n [25] \"Polytrichum.strictum\"       \"Succisa.pratensis\"         \n [27] \"Anthoxanthum.odoratum\"      \"Molinia.caerulea\"          \n [29] \"Gentiana.asclepiadea\"       \"Luzula.multiflora\"         \n [31] \"Festuca.rubra\"              \"Potentilla.erecta\"         \n [33] \"Sphagnum.magellanicum\"      \"Sphagnum.papillosum\"       \n [35] \"Equisetum.palustre\"         \"Aulacomnium.palustre\"      \n [37] \"Euphrasia.rostkoviana\"      \"Nardus.stricta\"            \n [39] \"Carex.pulicaris\"            \"Climacium.dendroides\"      \n [41] \"Carex.pallescens\"           \"Carex.lepidocarpa\"         \n [43] \"Briza.media\"                \"Sphagnum.platyphyllum\"     \n [45] \"Sphagnum.tenellum\"          \"Sphagnum.recurvum\"         \n [47] \"Sphagnum.rubellum\"          \"Sphagnum.centrale\"         \n [49] \"Sphagnum.subsecundum\"       \"Juncus.alpinoarticulatus\"  \n [51] \"Solidago.virgaurea\"         \"Agrostis.canina\"           \n [53] \"Juncus.effusus\"             \"Frangula.alnus\"            \n [55] \"Anemone.nemorosa\"           \"Holcus.lanatus\"            \n [57] \"Drepanocladus.exannulatus\"  \"Homogyne.alpina\"           \n [59] \"Polygala.vulgaris\"          \"Trollius.europaeus\"        \n [61] \"Polygonum.bistorta\"         \"Lotus.pedunculatus\"        \n [63] \"Trifolium.pratense\"         \"Taraxacum.palustre\"        \n [65] \"Campylium.stellatum\"        \"Cirsium.palustre\"          \n [67] \"Lysimachia.vulgaris\"        \"Maianthemum.bifolium\"      \n [69] \"Equisetum.sylvaticum\"       \"Centaurea.jacea\"           \n [71] \"Prunella.grandiflora\"       \"Viola.palustris\"           \n [73] \"Angelica.sylvestris\"        \"Filipendula.ulmaria\"       \n [75] \"Thuidium.delicatulum\"       \"Sanguisorba.officinalis\"   \n [77] \"Galium.uliginosum\"          \"Epipactis.palustris\"       \n [79] \"Pleurozium.schreberi\"       \"Calliergon.stramineum\"     \n [81] \"Aster.bellidiastrum\"        \"Hypnum.bambergeri\"         \n [83] \"Drepanocladus.revolvens\"    \"Dicranum.bonjeanii\"        \n [85] \"Dicranum.scoparium\"         \"Hylocomium.splendens\"      \n [87] \"Rhytidiadelphus.squarrosus\" \"Calliergonella.cuspidata\"  \n [89] \"Fissidens.adianthoides\"     \"Primula.veris\"             \n [91] \"Primula.farinosa\"           \"Hieracium.lachenalii\"      \n [93] \"Crepis.paludosa\"            \"Leontodon.hispidus\"        \n [95] \"Lotus.corniculatus\"         \"Stachys.officinalis\"       \n [97] \"Carex.flacca\"               \"Gentiana.verna\"            \n [99] \"Geranium.sylvaticum\"        \"Ranunculus.nemorosus\"      \n[101] \"Linum.catharticum\"          \"Cirsium.oleraceum\"         \n[103] \"Colchicum.autumnale\"        \"Polygala.amarella\"         \n[105] \"Polygala.serpyllifolia\"     \"Equisetum.arvense\"         \n[107] \"Deschampsia.cespitosa\"      \"Rhinanthus.minor\"          \n[109] \"Gymnadenia.conopsea\"        \"Melampyrum.pratense\"       \n[111] \"Salix.spec.\"                \"Caltha.palustris\"          \n[113] \"Dactylorhiza.fistulosa\"     \"Platanthera.bifolia\"       \n[115] \"Acer.pseudoplatanus\"        \"Danthonia.decumbens\"       \n[117] \"Drepanocladus.spec.\"        \"Tomentypnum.nitens\"        \n[119] \"Ctenidium.molluscum\"       \n\n\n#PCA: Deckungen Wurzeltransformiert, cor=T erzwingt Nutzung der Korrelationsmatrix\npca.5 <- pca(sveg^0.25,cor=T)\n\n#Koordinaten im Ordinationsraum\npca.5$scores\n\n\n           PC1         PC2         PC3         PC4         PC5\n501 -4.7638570 -1.22265671  0.16137299 -1.63920359  0.65672134\n502 -4.4289132 -4.53015025  0.05301732  2.18890243 -2.21261157\n503 -3.6362019 -2.59639328  3.97897752  2.09688467 -0.09579661\n504 -5.6914797 -3.26046194  0.80834375  1.81801745 -0.52158742\n505 -4.3553610 -1.60129727  1.94546115  0.79209703  3.31334690\n506 -4.5434014 -2.53239910 -0.19595841  3.89672184  0.89933087\n507 -2.7510067 -4.38973257  3.11879261  7.35482724  1.46441429\n508 -4.4528534 -1.88821949 -2.29019663  1.21803970 -0.34230091\n509 -4.4047864 -1.19992243 -0.95156719 -1.13051033  0.90807730\n510 -2.6046003  0.17152845  2.37978247 -0.14490340  0.38732099\n511 -1.1119383  0.29189285  3.96073621 -1.11763815  0.86300052\n512 -5.5023999 -3.17897861 -2.60019946  1.11777806 -1.69758276\n513 -4.2034506 -1.39349844 -2.89271921 -0.31865334 -1.51511546\n514 -6.4019606 -3.23864132 -3.19362787  1.90282534 -2.99770702\n515 -4.3767552 -2.76392570  0.35959587  1.33033684 -0.81130447\n            PC6         PC7         PC8          PC9         PC10\n501 -0.98134023  1.63176882 -0.08113303  0.724708179 -1.310772420\n502  0.12642795 -0.84575282 -1.20851040 -3.628970252  0.353051978\n503  0.58518527  0.98995698  1.03762358 -0.507789348  0.304872946\n504 -0.02931188  2.78600286  0.85368103 -3.469257843 -0.029806614\n505 -0.67452566  0.39386734 -0.67389240 -0.929637139  0.673142631\n506 -4.37421402 -1.76597657 -1.95037552  3.270791999  2.783399326\n507 -4.94332334 -1.26079817  0.09715957  4.479681402  2.847051704\n508  1.07774413  0.46779730  0.94809443  1.121101700 -0.233148521\n509  0.59428297  0.62521234  0.18650868  1.307048583 -1.300619022\n510 -0.38313461  0.22462146 -1.65019189 -0.859351858  0.308357898\n511 -0.20928750  1.45753941 -3.59142144 -0.028842245  0.198696232\n512  0.07130652 -1.86024887 -0.68541949 -2.896890278 -0.205938252\n513  2.16833721  0.32709429 -0.21745095 -0.558197390 -0.071532897\n514  1.41612056 -0.15179606  0.35767860 -4.210689925 -0.573003211\n515  0.33834573  0.86307327 -0.98706400 -3.512279316  1.491679888\n           PC11        PC12        PC13         PC14        PC15\n501  1.28131494 -1.37111140  1.84571221 -0.627865275 -1.43321305\n502 -1.71839240  1.25712258 -0.31743535  0.732566149 -1.18309122\n503  2.00667954  0.44149311  1.15453673  1.828330593 -3.53165604\n504  1.88706629 -3.50351614 -0.45376588  1.223340476 -1.93651516\n505 -2.02466947 -0.65120553  0.85481138 -1.758960081  0.06661396\n506 -0.31954337  1.21389609  0.34565069  0.340887934  1.01176445\n507  1.95699136 -2.42171964 -0.81332760 -0.171217674  1.62644867\n508  0.62991281  0.56066979 -0.63570763 -0.855610399  0.68013035\n509  0.18898106  0.58233257 -0.66556870 -0.640205159 -0.97084790\n510 -1.48989291 -0.31332004  2.49904296  0.257561239  1.13149010\n511  2.14560613  3.08232308  1.57096816 -1.941684993 -0.52228407\n512 -0.96652975  0.29698716  0.08209394 -0.705332635  2.07950805\n513 -0.02163756  0.05452054  0.60791698 -0.594019752  2.51777016\n514  0.81103519 -1.55392547 -1.80536497  1.486021735  0.22453791\n515 -1.69561195  0.11672051  1.61621350 -0.186645222 -1.44630971\n           PC16        PC17        PC18        PC19         PC20\n501  1.50881397 -2.97736577  0.82688219 -1.44538550 -0.146607758\n502 -2.37940718 -0.09059082 -0.80100819  0.65244238 -2.743094922\n503  0.04104297 -0.06246434  0.23589437 -0.41808358 -2.253234547\n504  4.07720273  0.99732426  0.21754792 -0.56121000  3.186627528\n505 -0.13227858 -2.00293250 -0.99388062 -0.69710914  0.484458644\n506 -1.26546293 -1.59936308 -1.71534436 -0.14394645  0.449351675\n507 -0.76851780  1.00410332 -0.33108512  0.14734992  0.249281606\n508  0.95582278  1.77741844  0.77786018 -2.00173077  0.046121627\n509  0.78663620  0.22390667  1.39174254 -0.69645815  0.184412560\n510 -0.14275360  0.52024687  2.05085221  0.05838372 -1.076045877\n511  0.73997226  3.60297604 -0.38021440  0.56051130  0.075543297\n512  0.38930006 -0.13293814 -0.19374837  0.29901815 -1.138342831\n513  1.88642504  1.10015316  1.32211860 -1.24598693 -0.220028630\n514  0.50138474  0.54318255 -2.25282387  3.22186508  0.397566283\n515 -0.83833226 -0.46474742  0.04604596 -1.60154138 -0.511176615\n           PC21        PC22         PC23        PC24        PC25\n501 -0.09662186 -3.77272246  0.784469812  1.80452448 -0.17853680\n502 -0.42033618 -0.63096914 -1.345506034  1.77545792  2.11489161\n503  3.98293021  0.55413053  1.779968911 -0.18023384 -0.09241462\n504 -1.08040907 -1.42278226  0.321937413 -2.76140294 -1.31218367\n505  1.20475090  0.08857863  0.323185692  0.22844806 -0.65611221\n506 -0.08429808 -1.30034843  1.022773311  0.88830964  0.51654537\n507 -0.86137377 -0.49695162 -1.407074047 -0.66100223 -0.78300660\n508 -1.15903943 -0.05092893  1.407520172 -0.45708861  0.86399609\n509  1.19143387 -0.38545499  0.934134139  0.33871688  0.24202893\n510 -0.69903675 -0.01806483  0.969959478  0.03701492  0.61776972\n511 -3.47478197  1.10940915  0.261366054  1.13715265  1.65412935\n512 -2.15978272 -0.12664634  1.080990979 -0.12729967 -2.61948654\n513 -1.15076442  1.06299378  1.038784828 -1.29827078 -0.97833871\n514  1.29602872 -1.15354057 -2.878411179 -0.46899779  3.26175123\n515 -1.35729535  1.28299083  0.534215919  0.49597850 -2.01705427\n           PC26        PC27         PC28       PC29         PC30\n501 -0.06771589 -1.67422797  0.419313626  0.1888973  1.585374077\n502  0.95357058 -0.64309757 -0.426850886  2.2153698 -0.098912454\n503 -1.01954614  2.04639473 -2.227478807 -0.8036757 -0.205866378\n504  0.94758022 -0.14291444  0.475813095  1.0425006  0.005072091\n505 -1.21526666  2.37287475 -0.737105231 -0.1025163  2.137277875\n506  0.52150779 -1.01026068  0.014903391 -0.2223891  0.347475808\n507 -0.38439776  0.26140625  0.314409873 -0.7940030 -0.536659637\n508  0.44023625 -0.75422878 -2.205988970  0.7428370 -0.562990091\n509 -0.23253946  0.76279565  1.131842105  0.5566373  0.031063439\n510  0.78606225 -2.91946647  1.962510602 -0.2663234 -1.377963235\n511  0.11602574 -0.40157503 -2.442421305 -0.2437115  0.122197531\n512 -0.16524327  0.94585766 -0.936327283 -2.5794839 -1.006938014\n513  0.35323128  1.32034488  1.455862425 -2.6840584  0.949317023\n514 -1.04690997 -1.13179393  0.220018980 -1.7946498  1.168387311\n515  1.58338721  0.09892233 -0.194505287  0.8269987 -1.056392788\n           PC31        PC32         PC33        PC34        PC35\n501  1.19056129 -1.82627628  0.094504732  0.78496169  0.77302790\n502  0.97659024 -0.80299992  0.329659993  0.94477644  0.09057868\n503 -0.50291799  0.95959407  0.035188541  0.15070443 -1.02885202\n504 -1.00634390  0.90042231 -0.004404674  0.24323322  0.40372882\n505  1.32894322  0.89537818 -1.294468299 -0.53523184 -2.86676436\n506 -1.56742171  0.09384257  0.357308694 -1.10970308  1.84201089\n507  0.05704988  0.66774607  0.467203490 -0.06221202 -0.10636031\n508 -2.29126713 -2.37381624  0.044914485  2.00796544 -1.41796610\n509 -0.92273903  1.13341843 -0.951191926 -0.31299794  0.16713860\n510 -1.69126500  1.20759440 -2.972388384 -0.29260530 -1.45362804\n511  1.58872617  0.41789631 -0.603226398 -0.61840595  1.06028822\n512  0.25111159 -2.27135732  0.368777502  1.56913970 -1.48422311\n513 -0.37129895 -0.83330139 -0.472746045 -0.83109199  2.35964216\n514  0.11014962 -0.27285359 -0.341019425 -1.88204041 -0.23618582\n515  1.27258093  1.96457133  0.301107647 -0.33217736  0.66348161\n             PC36        PC37         PC38         PC39        PC40\n501  1.9213342186 -0.60295226 -0.336388942 -0.257322226  0.89415530\n502  0.5669686995  0.37944457  0.715165778 -0.979166972 -0.96605330\n503  1.4662349710  0.21812469  0.626574836 -0.543241944 -0.31652501\n504 -0.8424061801  1.18876929  0.723553628 -0.381799569 -1.15811974\n505 -2.5367287144 -0.43403391 -0.561921641  0.445529873 -1.12795197\n506 -1.6376362132 -0.41271637  1.739657894  0.371407882  0.63897485\n507  1.2103144429  0.30533585 -1.075503695 -0.078493965 -0.40503326\n508 -0.9240505882 -0.35899057 -0.484780388 -0.674912638 -0.43102213\n509  0.8533873843 -0.50140244 -0.346365479  0.216352030 -0.98679172\n510  0.0427959925  1.51074514 -1.017548235  0.760177384  1.78598149\n511 -0.3088810451 -0.70850545 -1.251464065 -0.719761749 -0.49349983\n512  0.0589022732 -0.59543421  0.214323490  0.356166081  0.62287215\n513 -0.0176142609 -1.15709477  0.959266364 -0.097956110 -0.45893719\n514 -0.3424959160 -0.48577653 -0.448522314  0.007732813  0.57560457\n515  0.9600900219  0.67911029  0.268790248  1.098015199  1.02392907\n             PC41         PC42         PC43        PC44        PC45\n501  1.2367489291 -1.119661783 -0.260124551 -0.20788130 -0.03111594\n502 -1.2251367533  0.056669153 -1.462836231  0.55821563  1.67389733\n503  0.9358496944  0.172457652  1.575821217  0.60702252  0.20790120\n504 -0.5454398482  0.086967932 -0.384989668 -0.74115896  0.03263069\n505  0.2279501527 -0.725548378 -0.380343813 -0.29587484 -0.26462426\n506  0.6424063872  0.208640200  0.069373505 -1.16830503 -0.62209530\n507 -0.6706201818  0.017209118 -0.058544114  1.20068506  0.84319000\n508  0.0978655832  1.701118483 -0.410544468 -1.43211471 -0.22552080\n509 -0.1366584927 -0.228011672 -1.441098460 -0.68278732 -0.15029312\n510 -0.2552902497 -0.946003104  0.914213462  0.07074874  0.11871571\n511  0.5858123290 -0.462241770  0.468034341 -0.72248352  0.05831388\n512 -0.1183903956  0.072261480  0.848444359  0.89682697 -0.16815721\n513  0.0348536863 -0.592873479  0.165208948  1.23112826  1.02938162\n514  0.3704685136 -0.738087716  0.405516383 -0.79053786 -0.51453302\n515  0.1793141458 -0.605637456 -0.410784676 -0.34494024 -0.93208568\n            PC46         PC47         PC48          PC49        PC50\n501 -1.345401569  0.185434884  0.165077319  0.4271259028  0.03344741\n502  0.693045182 -0.048764548  0.034295659  0.2504650032  0.92249523\n503 -0.299230948 -0.922850183  0.086435271 -0.1776794071  0.63368844\n504 -0.420626301  0.176085970  0.140309516 -0.2349212088 -0.47357248\n505  0.930306199  1.003964580  0.008074208 -0.2109950411 -0.11433249\n506 -0.016706702 -0.248752789  1.355867225 -1.2441710420  0.48557964\n507 -0.225121393  0.262078728 -1.131726390  0.9359156723 -0.20846796\n508  0.324934359 -0.602790245 -0.487440113 -0.0907159957  0.60159436\n509 -0.281816779  0.291102003 -0.701225813 -0.9729884860  0.52285464\n510  0.824708378 -0.500143925 -0.346366653 -0.5009721663  0.49641228\n511 -0.059510343  0.044660300 -1.024152957 -0.2840234512 -1.07234303\n512 -0.963910425  0.438594426  0.679066652 -0.6769921864 -0.39430733\n513  1.712090979 -0.161250355 -0.171024248  0.3276781159  0.66553188\n514 -0.010602666 -0.111952393 -0.192454393 -0.0880770554 -0.17492914\n515 -0.551231239  0.244782096 -0.344532419  0.5165301513  0.08308179\n            PC51        PC52         PC53        PC54         PC55\n501 -0.672517830 -0.18856021 -0.044474139 -0.21474389  0.632621618\n502 -0.372020411 -0.11059513  0.334479902  0.36209334  0.614888980\n503 -0.050322037  0.15187670  0.489447643 -0.73660308 -0.439819377\n504 -0.698324918  0.30788753 -0.189658092  0.10669505 -0.041899380\n505 -0.192745328 -1.01402219  0.252151637  0.38860284  0.398902866\n506  0.405200486  0.08264158  0.292939290  0.23252302  0.013927734\n507  0.079706110  0.07918867 -0.293566412 -0.28108618  0.032379851\n508 -0.104732920 -0.73743349 -0.037599455 -0.13680203 -0.438038136\n509  1.416830017  1.35448215  0.670623299 -0.26241378  0.938198512\n510 -1.150696793 -0.10218478 -0.028150791 -0.35874517  0.177060953\n511  0.470951830  0.05299519  0.105873182 -0.59685363  0.243296089\n512  0.502409627 -0.13095219 -0.258120924 -0.19575897  0.780687391\n513 -0.184160235  0.21288624  0.906582063  0.12876604 -0.237286311\n514  0.454584785 -0.10171729 -0.096930172 -0.47074111 -0.312652434\n515  0.840985824 -0.60067980  0.510758988  0.75730356 -1.171915686\n           PC56         PC57        PC58         PC59         PC60\n501  0.61468552  0.204352704 -0.37547576 -0.312588450  0.351048863\n502 -0.50812421  0.318427962  0.29655200 -0.024161416  0.178176290\n503  0.27624600  0.541656059  0.07794917  0.273172336 -0.107078151\n504 -0.88859476  0.638598841  0.12049186  0.061383185  0.018923852\n505  0.05752107  0.103637734 -0.18643677 -0.047350953  0.409862245\n506 -0.03280751  0.526951538  0.23278357  0.013712666 -0.046659746\n507  0.13228411 -0.438806675 -0.17734159 -0.066105653  0.074630093\n508  0.66530503 -0.621244811 -0.05569300 -0.432343834 -0.043355855\n509 -0.07697214 -1.472451301  0.56144923  0.330799242  0.234652386\n510 -0.11256437 -0.045912911  0.21993698  0.385232772 -0.018889566\n511 -0.08619763  0.703191236  0.21469859 -0.081303819 -0.009677883\n512 -0.51556225 -0.255946225  0.24397127  0.465272736 -0.456797490\n513  0.56559070  0.276420644 -0.48268119 -0.167873843  0.506457527\n514  0.58384948 -0.582645669 -0.30421148  0.008237852 -0.190749321\n515  0.31444882 -0.775090117 -0.11761287 -0.745859118 -0.301942344\n            PC61         PC62          PC63\n501 -0.207343963 -0.017256846 -6.418477e-16\n502  0.053825743  0.020853834 -1.630640e-16\n503  0.245627529 -0.010160828 -2.810252e-16\n504  0.069583720  0.126692198 -9.089951e-16\n505 -0.273163715 -0.111435213  1.557782e-15\n506  0.343239116  0.005704567 -1.221245e-15\n507 -0.280594683 -0.072200235 -4.996004e-16\n508 -0.088016993 -0.513313137 -6.071532e-16\n509  0.112900183  0.204236248 -1.384309e-15\n510 -0.109019210 -0.133022391 -3.469447e-17\n511  0.154419148  0.183745169 -5.620504e-16\n512 -0.077718461  0.442911056 -1.994932e-15\n513  0.139898647  0.022841246  5.030698e-16\n514 -0.035223387 -0.064846445 -9.679757e-16\n515  0.105218278  0.111716249 -4.406198e-16\n [ reached getOption(\"max.print\") -- omitted 48 rows ]\n\n\n#Korrelationen der Variablen mit den Ordinationsachsen\npca.5$loadings\n\n\n                                    PC1           PC2          PC3\nVaccinium.myrtillus        -0.073624159 -0.1424655869  0.037488406\nVaccinium.uliginosum       -0.087621097 -0.1259160401 -0.028245994\nVaccinium.oxycoccos        -0.149610429 -0.1168629781 -0.062695644\nCalluna.vulgaris           -0.108022476 -0.0847127754 -0.074077433\nCarex.rostrata             -0.052666920 -0.0653114126 -0.064041955\nCarex.lasiocarpa           -0.117905090  0.0845332410  0.044011494\nCarex.nigra                -0.089773674  0.0410276694  0.018242500\nCarex.davalliana            0.168211588 -0.0162953738  0.001475764\nCarex.hostiana              0.144164246 -0.0588511238 -0.034879486\nCarex.pauciflora           -0.044981405 -0.0615477553 -0.030134262\nCarex.echinata             -0.135353502  0.1680531728  0.060154554\nCarex.panicea               0.135391230  0.0009148379  0.057897155\nTrichophorum.caespitosum   -0.002557446  0.1371754469 -0.053476086\nTrichophorum.alpinum        0.081822337  0.0992528478  0.126228985\nEriophorum.vaginatum       -0.086612982 -0.1057392737 -0.083996146\n                                     PC4           PC5           PC6\nVaccinium.myrtillus         2.258838e-01 -0.0430136798 -0.0774291758\nVaccinium.uliginosum        1.977403e-01 -0.0236049782 -0.0628562500\nVaccinium.oxycoccos         6.507888e-02 -0.0285549016 -0.0351304411\nCalluna.vulgaris            8.212620e-03 -0.0475734435 -0.0141548736\nCarex.rostrata              5.818957e-02 -0.0654154483  0.0585681013\nCarex.lasiocarpa            1.401877e-01  0.0173547596  0.0177357576\nCarex.nigra                 5.356037e-02  0.1546346584 -0.0192846959\nCarex.davalliana           -2.660455e-02 -0.0602922786 -0.0209863612\nCarex.hostiana             -2.502025e-02 -0.0519064078  0.0310501169\nCarex.pauciflora            7.782506e-02 -0.0812374035  0.0339912114\nCarex.echinata              4.703974e-03  0.0599233404 -0.0702488718\nCarex.panicea               6.442210e-02  0.0435292546  0.0456223874\nTrichophorum.caespitosum   -9.485161e-02 -0.2122992204  0.0463278337\nTrichophorum.alpinum        9.480973e-02 -0.0278865727  0.0432087986\nEriophorum.vaginatum        8.250553e-02 -0.1359964925  0.0788461893\n                                    PC7           PC8           PC9\nVaccinium.myrtillus        -0.001036810 -0.0661874829 -0.1742921894\nVaccinium.uliginosum       -0.079420634 -0.0402125816 -0.0412215579\nVaccinium.oxycoccos        -0.020830718 -0.0749842279 -0.0066872503\nCalluna.vulgaris           -0.070484951 -0.1156388208 -0.1146307282\nCarex.rostrata              0.031606724  0.0214783425 -0.1126117091\nCarex.lasiocarpa           -0.164709326 -0.0270417031 -0.1003962173\nCarex.nigra                -0.132015991  0.1047220231  0.1300974114\nCarex.davalliana           -0.021256368 -0.1092216647 -0.0072086357\nCarex.hostiana             -0.136202937  0.0439606338  0.0100009207\nCarex.pauciflora            0.067253608  0.0352614427 -0.2260502686\nCarex.echinata              0.030124819 -0.0036417506  0.0687955384\nCarex.panicea              -0.065395189  0.0430747970 -0.1001934886\nTrichophorum.caespitosum   -0.084564905 -0.0660156135  0.0981492392\nTrichophorum.alpinum        0.113037989  0.0299668465 -0.1037506417\nEriophorum.vaginatum        0.015521959 -0.0333878117 -0.2728928524\n                                    PC10         PC11          PC12\nVaccinium.myrtillus         0.1437297102  0.012318527 -0.0320904516\nVaccinium.uliginosum        0.0538844482 -0.019458868  0.0188566570\nVaccinium.oxycoccos        -0.0277727755 -0.056027210 -0.0255342432\nCalluna.vulgaris           -0.0451541327 -0.127320794  0.0651369650\nCarex.rostrata             -0.0125226878  0.036969810 -0.0575712509\nCarex.lasiocarpa            0.0273901094 -0.021536350  0.1143937909\nCarex.nigra                -0.1475373825 -0.129958911  0.0914671498\nCarex.davalliana            0.0047211052 -0.008053352 -0.0404992702\nCarex.hostiana             -0.0814686318 -0.044227136  0.0131318980\nCarex.pauciflora           -0.0188723591  0.088452823 -0.1712094418\nCarex.echinata             -0.0758264650 -0.008322013  0.0379022573\nCarex.panicea               0.1441582963 -0.014711918  0.0529896499\nTrichophorum.caespitosum   -0.1168918732  0.172069432  0.2442897753\nTrichophorum.alpinum        0.0024847988  0.155553578  0.0723262824\nEriophorum.vaginatum       -0.0240197939 -0.046165547 -0.0208213283\n                                   PC13          PC14         PC15\nVaccinium.myrtillus         0.019454456  0.0682226102 -0.069198494\nVaccinium.uliginosum       -0.045993167 -0.0042433371  0.035421179\nVaccinium.oxycoccos         0.009516728  0.0383369701  0.031158190\nCalluna.vulgaris            0.021365488 -0.0090705450  0.079420599\nCarex.rostrata             -0.012887335 -0.0280401015  0.092430465\nCarex.lasiocarpa            0.018177064  0.0237001624 -0.026787902\nCarex.nigra                -0.045535244 -0.0183846963  0.065959235\nCarex.davalliana            0.066584639  0.0195616126  0.070660300\nCarex.hostiana              0.093743883 -0.1488150272 -0.026596274\nCarex.pauciflora           -0.081861209  0.1015280920 -0.066649769\nCarex.echinata             -0.027313957 -0.0072748199  0.033575799\nCarex.panicea               0.089085584  0.0049159915  0.047976907\nTrichophorum.caespitosum    0.025612163  0.0061939259  0.011435510\nTrichophorum.alpinum        0.247274129 -0.1317239135 -0.075549847\nEriophorum.vaginatum       -0.012515521  0.0257077909  0.032830586\n                                    PC16          PC17         PC18\nVaccinium.myrtillus        -0.0674512821 -0.0208376780 -0.026992644\nVaccinium.uliginosum       -0.0501201944 -0.0372279809 -0.103451915\nVaccinium.oxycoccos         0.0273707311 -0.0600765083 -0.010200111\nCalluna.vulgaris           -0.1286723097 -0.1427864027 -0.133478586\nCarex.rostrata              0.2100706366  0.1204362523  0.070374118\nCarex.lasiocarpa           -0.0877519822  0.1370239466  0.085568210\nCarex.nigra                -0.1015390231 -0.0070697283  0.071745101\nCarex.davalliana            0.0083294889  0.0097245125  0.080155057\nCarex.hostiana             -0.0277948454  0.0202239110 -0.132306740\nCarex.pauciflora            0.1876724761  0.0664826702 -0.092170093\nCarex.echinata              0.1039876919 -0.0502816131  0.002530325\nCarex.panicea              -0.0572176303  0.0051874660 -0.035338609\nTrichophorum.caespitosum   -0.0607953835 -0.0434104115  0.075324385\nTrichophorum.alpinum        0.0052038924 -0.0840377627  0.047192777\nEriophorum.vaginatum        0.0643290994  0.0573915603 -0.008928709\n                                    PC19         PC20         PC21\nVaccinium.myrtillus         0.0034042834 -0.053169941  0.035909698\nVaccinium.uliginosum        0.0453123674 -0.126818099  0.117178279\nVaccinium.oxycoccos        -0.1704165684  0.024498874  0.066347738\nCalluna.vulgaris            0.0501693208  0.028372779  0.090881102\nCarex.rostrata             -0.1339044755  0.065736225 -0.211098259\nCarex.lasiocarpa            0.1185420411  0.083629568  0.052905766\nCarex.nigra                 0.0010855103  0.000436258  0.007730226\nCarex.davalliana            0.0830736428 -0.042663223  0.028085728\nCarex.hostiana             -0.0425416469  0.073298676  0.116930402\nCarex.pauciflora            0.1338896362  0.182845457  0.011529556\nCarex.echinata             -0.0716573666  0.017744869 -0.048830531\nCarex.panicea               0.0481629994 -0.010113527 -0.034176241\nTrichophorum.caespitosum    0.0496637250 -0.187486599  0.007551709\nTrichophorum.alpinum        0.0292068972  0.021045443  0.048344941\nEriophorum.vaginatum       -0.0318673540 -0.031472225 -0.105329701\n                                    PC22         PC23          PC24\nVaccinium.myrtillus         0.0048161115  0.004946086 -0.0238391401\nVaccinium.uliginosum       -0.0580774653  0.016677772  0.0485852465\nVaccinium.oxycoccos         0.0083841453  0.071287305 -0.0129311863\nCalluna.vulgaris           -0.0484196946 -0.021663432  0.2067332691\nCarex.rostrata             -0.0208275274  0.162463451 -0.1922459326\nCarex.lasiocarpa            0.1378170491  0.040207120 -0.1022372744\nCarex.nigra                -0.1631809690  0.051841468  0.1076065038\nCarex.davalliana            0.0125766569  0.044100092 -0.1150871002\nCarex.hostiana             -0.1235955736  0.031385015 -0.1509522025\nCarex.pauciflora           -0.1433550731 -0.147479555 -0.1918512092\nCarex.echinata              0.0570233729  0.149852087 -0.0222587586\nCarex.panicea               0.0450658216  0.007885138  0.0848852233\nTrichophorum.caespitosum   -0.0915450153 -0.018714578 -0.0461499042\nTrichophorum.alpinum        0.0042283147  0.017641861  0.0646859084\nEriophorum.vaginatum        0.0318224103  0.006352311 -0.0384768806\n                                    PC25         PC26          PC27\nVaccinium.myrtillus        -0.0246275654 -0.033916693 -0.0050645681\nVaccinium.uliginosum        0.1877756294 -0.069354404  0.0585400717\nVaccinium.oxycoccos         0.0717162409  0.042328254  0.0405281333\nCalluna.vulgaris           -0.1681059122 -0.079660146 -0.0472548057\nCarex.rostrata             -0.1627545056  0.073403306  0.0580144884\nCarex.lasiocarpa           -0.0184047728 -0.073646568  0.0068403623\nCarex.nigra                 0.0084136846 -0.034627118 -0.0532803498\nCarex.davalliana           -0.0007601722 -0.066013202 -0.0640715454\nCarex.hostiana             -0.0481696686  0.050024777 -0.0578812638\nCarex.pauciflora            0.1194312044 -0.006422212 -0.0881239152\nCarex.echinata             -0.1648710793 -0.015459732 -0.0223495858\nCarex.panicea              -0.2375680472 -0.081383251  0.1128651698\nTrichophorum.caespitosum    0.1411258676  0.004728985 -0.0064046560\nTrichophorum.alpinum       -0.0139279639  0.062903049 -0.1037785772\nEriophorum.vaginatum       -0.0713477412  0.065705240  0.0331906483\n                                   PC28         PC29         PC30\nVaccinium.myrtillus         0.006121834 -0.079266731 -0.035303091\nVaccinium.uliginosum       -0.173051992 -0.047512302 -0.016381890\nVaccinium.oxycoccos         0.030533977  0.085623424  0.024237368\nCalluna.vulgaris           -0.026911954  0.083542712  0.101304629\nCarex.rostrata             -0.079947993 -0.167712745 -0.038308446\nCarex.lasiocarpa            0.005702815 -0.067614124  0.131368210\nCarex.nigra                 0.021642273  0.087435074 -0.032225597\nCarex.davalliana            0.145047707  0.062090235 -0.019075712\nCarex.hostiana             -0.136314735 -0.016318602  0.075477903\nCarex.pauciflora            0.049935800 -0.055232020  0.090981097\nCarex.echinata             -0.024958973 -0.048598710 -0.030491210\nCarex.panicea              -0.107832067 -0.207422632  0.006784399\nTrichophorum.caespitosum   -0.018990654 -0.053778370  0.020972584\nTrichophorum.alpinum        0.003370689 -0.047138457 -0.061456098\nEriophorum.vaginatum        0.047132525 -0.035220374  0.072770624\n                                    PC31          PC32         PC33\nVaccinium.myrtillus         0.0239207901  0.0311453449 -0.164900963\nVaccinium.uliginosum       -0.0830148154 -0.0897788699 -0.073543135\nVaccinium.oxycoccos        -0.0829034019 -0.0112430269 -0.062630003\nCalluna.vulgaris            0.1911783477  0.0047922719  0.147852531\nCarex.rostrata             -0.2069861647 -0.2974402952 -0.003412854\nCarex.lasiocarpa           -0.0416150164  0.0933032283 -0.006686999\nCarex.nigra                -0.0779823985 -0.1681440188  0.014535390\nCarex.davalliana            0.0218526021 -0.0257595444 -0.059365238\nCarex.hostiana             -0.0222402653  0.0921067703  0.034319152\nCarex.pauciflora           -0.0703875575  0.0542622256 -0.031345932\nCarex.echinata             -0.0689257785  0.0395273810  0.082894696\nCarex.panicea               0.0850775919  0.0852670353  0.032234925\nTrichophorum.caespitosum   -0.0389690338 -0.0984645523 -0.001917903\nTrichophorum.alpinum        0.0676567039  0.0128610505  0.106157219\nEriophorum.vaginatum        0.0551266043  0.0499565337  0.016120490\n                                    PC34          PC35         PC36\nVaccinium.myrtillus         0.0231363416 -0.1592824310 -0.151202128\nVaccinium.uliginosum        0.0785173401 -0.2616767032 -0.136920514\nVaccinium.oxycoccos        -0.1244546892 -0.0732495826  0.070467922\nCalluna.vulgaris            0.0536204767  0.0842630277 -0.019551137\nCarex.rostrata              0.2196588920 -0.0280993018 -0.136378879\nCarex.lasiocarpa            0.1185664526 -0.0499406966 -0.144102680\nCarex.nigra                 0.2466204425 -0.1069402758 -0.041980073\nCarex.davalliana            0.0133167797 -0.1113037344  0.036589868\nCarex.hostiana              0.0164785230  0.0998645839 -0.027133883\nCarex.pauciflora           -0.1561407660  0.0168995446 -0.124290223\nCarex.echinata             -0.0189291618  0.0266462121 -0.022066277\nCarex.panicea              -0.0199762480 -0.1227897633  0.078269698\nTrichophorum.caespitosum   -0.0058888668  0.0716781547  0.095685419\nTrichophorum.alpinum        0.0239655280 -0.0306769925  0.103298393\nEriophorum.vaginatum       -0.0590396509  0.2235548710  0.013005524\n                                    PC37          PC38         PC39\nVaccinium.myrtillus         0.1441717146  1.248985e-02  0.102418063\nVaccinium.uliginosum       -0.1574954297 -3.215669e-02 -0.113239448\nVaccinium.oxycoccos         0.0036551436  5.735387e-02 -0.046647996\nCalluna.vulgaris           -0.0101802885 -9.290930e-02  0.095452595\nCarex.rostrata             -0.0748500041  1.093313e-01 -0.080161135\nCarex.lasiocarpa           -0.0064028165  5.189270e-02  0.005416167\nCarex.nigra                 0.1297821566 -1.121929e-02 -0.126602235\nCarex.davalliana            0.1411882070  1.310256e-02 -0.062752523\nCarex.hostiana              0.0915196183 -9.903429e-02 -0.097289010\nCarex.pauciflora            0.0776201139  3.327397e-02 -0.047311884\nCarex.echinata              0.0492062696  1.365246e-02 -0.015732965\nCarex.panicea               0.0365348989 -6.584060e-02 -0.116146630\nTrichophorum.caespitosum   -0.0219762215  3.023859e-02 -0.085013088\nTrichophorum.alpinum       -0.0914352166 -6.738317e-02 -0.021860961\nEriophorum.vaginatum        0.0753132009  3.364748e-02  0.036080527\n                                    PC40          PC41          PC42\nVaccinium.myrtillus         0.0923453634 -9.030722e-03 -0.1806857515\nVaccinium.uliginosum       -0.0096607098  1.983952e-02  0.2120488743\nVaccinium.oxycoccos         0.1000005662  1.883285e-01 -0.0897977390\nCalluna.vulgaris            0.0106102285  6.019871e-02  0.0250236083\nCarex.rostrata             -0.1437033837 -4.971376e-02  0.1682630146\nCarex.lasiocarpa            0.0271596306  2.604682e-02  0.0332412174\nCarex.nigra                 0.0967051125 -1.724928e-01 -0.2805021823\nCarex.davalliana           -0.0201997444  9.428617e-02 -0.0072499030\nCarex.hostiana              0.1003490715 -1.346586e-01 -0.0736933737\nCarex.pauciflora           -0.0811881462 -2.479888e-02 -0.1007385140\nCarex.echinata              0.0498946246  6.937258e-03 -0.0256803055\nCarex.panicea              -0.1252792541  5.150592e-02  0.0132945555\nTrichophorum.caespitosum    0.0525132282  2.018547e-02  0.0358060487\nTrichophorum.alpinum        0.2784293180  8.680913e-02 -0.0800906068\nEriophorum.vaginatum       -0.0307783067 -6.363600e-02  0.0365278689\n                                    PC43         PC44          PC45\nVaccinium.myrtillus         0.1042405617  0.041879248 -0.1262923690\nVaccinium.uliginosum       -0.0170959683  0.071401540 -0.0326085360\nVaccinium.oxycoccos         0.0575673059  0.131394821 -0.0175227320\nCalluna.vulgaris           -0.0390157125 -0.090756215 -0.0320223329\nCarex.rostrata              0.0153700129 -0.036073492  0.0834165188\nCarex.lasiocarpa           -0.2555759469  0.036042104  0.0360152852\nCarex.nigra                -0.1544419133  0.025440380 -0.0216780650\nCarex.davalliana            0.1024237533 -0.146084614 -0.2025748737\nCarex.hostiana              0.0744500779 -0.001388643  0.0798111602\nCarex.pauciflora            0.0032829278 -0.255296615 -0.0938927581\nCarex.echinata              0.0470032571  0.014189093  0.0116151628\nCarex.panicea              -0.0171521994 -0.113567634 -0.1136907116\nTrichophorum.caespitosum    0.0376126307 -0.062683883  0.0351252748\nTrichophorum.alpinum       -0.0406752816  0.044743459 -0.0693564111\nEriophorum.vaginatum       -0.0311011421  0.235906533  0.0411977455\n                                    PC46          PC47          PC48\nVaccinium.myrtillus        -0.0253871606  0.0507429421  0.1489779608\nVaccinium.uliginosum        0.0003201818  0.0583090770  0.0702203483\nVaccinium.oxycoccos        -0.0583329446 -0.0493992429 -0.2237006093\nCalluna.vulgaris           -0.0188172753 -0.0214893553  0.1011538930\nCarex.rostrata              0.1077409453 -0.0406322474  0.0113851357\nCarex.lasiocarpa            0.0140567316 -0.2141086652  0.0562914407\nCarex.nigra                 0.0249338939  0.1105898977  0.0082742694\nCarex.davalliana            0.0818506171 -0.0320464562  0.0677789930\nCarex.hostiana             -0.0018016536  0.0489281129 -0.0260899971\nCarex.pauciflora           -0.0950981223  0.0144571393 -0.0126314246\nCarex.echinata             -0.0138860223 -0.0668398422 -0.0379916783\nCarex.panicea              -0.2945579671  0.0663021352 -0.1920475895\nTrichophorum.caespitosum    0.0946269431  0.0185721032  0.1300637794\nTrichophorum.alpinum        0.1218006856 -0.2058418431  0.0661114468\nEriophorum.vaginatum        0.1689679975  0.0057033967  0.3538037897\n                                    PC49         PC50         PC51\nVaccinium.myrtillus        -3.367894e-02 -0.020161293 -0.108053097\nVaccinium.uliginosum        8.723036e-02 -0.108871508 -0.057382864\nVaccinium.oxycoccos        -3.339017e-02  0.034799378 -0.034972563\nCalluna.vulgaris           -8.074657e-02 -0.030983904 -0.197992029\nCarex.rostrata             -1.230463e-01  0.098668653 -0.100473997\nCarex.lasiocarpa            2.934003e-02 -0.025672088  0.102953399\nCarex.nigra                -8.236233e-02 -0.145570321  0.077667730\nCarex.davalliana            1.571931e-01  0.210531550  0.023160386\nCarex.hostiana             -7.690599e-03  0.003770844 -0.029192317\nCarex.pauciflora           -8.391752e-02 -0.182252688 -0.070920950\nCarex.echinata              7.397663e-02 -0.012457295 -0.015856354\nCarex.panicea               4.154570e-02 -0.039116406  0.060111283\nTrichophorum.caespitosum   -1.351418e-01  0.022116998 -0.121627234\nTrichophorum.alpinum       -1.052742e-01 -0.008345384 -0.034418348\nEriophorum.vaginatum        2.499966e-01 -0.178502538  0.153464413\n                                    PC52          PC53          PC54\nVaccinium.myrtillus         0.1114331917  1.136550e-01  0.0373963136\nVaccinium.uliginosum        0.1234908361  2.594785e-01  0.0778882399\nVaccinium.oxycoccos        -0.0066790428 -1.461484e-01  0.1354970932\nCalluna.vulgaris           -0.0132359112 -2.042680e-01 -0.0993638524\nCarex.rostrata             -0.1144597197  1.022374e-01 -0.0324414673\nCarex.lasiocarpa           -0.0031131756 -1.162812e-03 -0.0597740868\nCarex.nigra                 0.0295179296 -1.788552e-01  0.0830836778\nCarex.davalliana            0.0288581381 -8.221796e-02  0.0983714215\nCarex.hostiana              0.0300710935  8.577656e-02  0.0240126980\nCarex.pauciflora            0.0707925454 -1.034037e-01 -0.1403366446\nCarex.echinata              0.1270110093  5.258492e-02  0.1322384195\nCarex.panicea               0.0112216488  5.849519e-03 -0.0353223989\nTrichophorum.caespitosum    0.0772438972 -5.703219e-02 -0.0466222883\nTrichophorum.alpinum        0.0407849961  2.642303e-02  0.0277377488\nEriophorum.vaginatum        0.0469368299 -1.609368e-01  0.0408756592\n                                   PC55          PC56         PC57\nVaccinium.myrtillus         0.017423658 -1.532477e-01  0.009742625\nVaccinium.uliginosum       -0.040591890  1.129497e-01  0.116275742\nVaccinium.oxycoccos         0.087827223 -4.366120e-02 -0.089609604\nCalluna.vulgaris           -0.066390419 -7.108513e-02  0.031559428\nCarex.rostrata             -0.006058506 -1.598447e-02 -0.028165296\nCarex.lasiocarpa           -0.003595348 -9.539947e-02 -0.015120026\nCarex.nigra                -0.092395712  2.284782e-03 -0.006971671\nCarex.davalliana            0.132888378 -8.877504e-02 -0.018000591\nCarex.hostiana              0.055844270 -6.193210e-02 -0.094431478\nCarex.pauciflora           -0.161673767 -1.502432e-01  0.028890736\nCarex.echinata              0.071891749  2.558102e-02 -0.098703500\nCarex.panicea               0.001178924 -4.023880e-02  0.091781453\nTrichophorum.caespitosum    0.180879820  3.287443e-04  0.148258540\nTrichophorum.alpinum       -0.102586732 -1.247185e-03 -0.150190948\nEriophorum.vaginatum        0.052741322  1.073123e-01 -0.023093566\n                                   PC58         PC59          PC60\nVaccinium.myrtillus         0.327067731 -0.061429933  0.1545550110\nVaccinium.uliginosum       -0.131840358  0.065327249 -0.1407258240\nVaccinium.oxycoccos        -0.051148229 -0.106952472  0.0252269533\nCalluna.vulgaris           -0.027655884 -0.054564068 -0.0149894016\nCarex.rostrata             -0.076153198 -0.088965627  0.0113379562\nCarex.lasiocarpa            0.012003016  0.065439315 -0.0389467846\nCarex.nigra                -0.111626418  0.239871133  0.2456745643\nCarex.davalliana           -0.078491789  0.061217509 -0.0025398159\nCarex.hostiana              0.007993081 -0.009676957 -0.0627435371\nCarex.pauciflora           -0.110848716  0.058260449 -0.1672255513\nCarex.echinata              0.136820955  0.121906949 -0.0330891694\nCarex.panicea              -0.086600290 -0.076735769  0.0116541621\nTrichophorum.caespitosum    0.083599932  0.121342317  0.0543541124\nTrichophorum.alpinum        0.048218088 -0.176518359 -0.0658064697\nEriophorum.vaginatum        0.205264346 -0.059533978  0.0327251357\n                                   PC61          PC62          PC63\nVaccinium.myrtillus         0.025408044 -0.1025965656  0.2198960642\nVaccinium.uliginosum       -0.202279198  0.0196361944  0.0993232993\nVaccinium.oxycoccos         0.047126328 -0.1067848991 -0.0622644321\nCalluna.vulgaris           -0.221313217  0.0543139569  0.0120825053\nCarex.rostrata              0.024044713 -0.0184641625 -0.1344862787\nCarex.lasiocarpa            0.163788098  0.0712709227  0.0008100307\nCarex.nigra                 0.004331635 -0.0207420103 -0.0461111117\nCarex.davalliana            0.013058076 -0.0662820104 -0.1446691747\nCarex.hostiana              0.054160729 -0.1127247145  0.1343680247\nCarex.pauciflora            0.044563018  0.0927562584 -0.0184775892\nCarex.echinata             -0.113585311  0.1575695236 -0.0644964171\nCarex.panicea              -0.025026306 -0.2286475339 -0.0375179203\nTrichophorum.caespitosum   -0.032152039 -0.0038564515  0.0109039100\nTrichophorum.alpinum       -0.121305090  0.0557083967 -0.1835740271\nEriophorum.vaginatum       -0.036089399 -0.1041503671 -0.0100037313\n [ reached getOption(\"max.print\") -- omitted 104 rows ]\n\n\n#Erklärte Varianz der Achsen in Prozent (sdev ist die Wurzel daraus)\nE<-pca.5$sdev^2/pca.5$totdev*100\nE\n\n\n [1] 2.061885e+01 8.098205e+00 6.070537e+00 3.666650e+00 3.322363e+00\n [6] 3.128942e+00 3.003875e+00 2.634636e+00 2.605558e+00 2.449637e+00\n[11] 2.339344e+00 2.265430e+00 2.116464e+00 2.046578e+00 1.969912e+00\n[16] 1.871020e+00 1.777063e+00 1.693483e+00 1.524015e+00 1.503332e+00\n[21] 1.434245e+00 1.378271e+00 1.329404e+00 1.291336e+00 1.251895e+00\n[26] 1.186157e+00 1.109340e+00 1.068661e+00 1.044385e+00 9.891552e-01\n[31] 9.764586e-01 8.869747e-01 8.451212e-01 8.049318e-01 7.603242e-01\n[36] 7.311274e-01 6.945830e-01 6.339064e-01 6.063542e-01 5.502527e-01\n[41] 5.411059e-01 4.956931e-01 4.795188e-01 4.601244e-01 3.936176e-01\n[46] 3.477631e-01 3.402128e-01 3.165971e-01 2.951856e-01 2.728882e-01\n[51] 2.635725e-01 2.233500e-01 2.125542e-01 1.989449e-01 1.681852e-01\n[56] 1.555571e-01 1.485298e-01 1.271079e-01 9.164615e-02 7.880113e-02\n[61] 5.913306e-02 5.113452e-02 4.066351e-30\n\nE[1:5]\n\n\n[1] 20.618848  8.098205  6.070537  3.666650  3.322363\n\n\n#PCA-Plot der Lage der Beobachtungen im Ordinationsraum\nplot(pca.5$scores[,1], pca.5$scores[,2], type=\"n\", asp=1, xlab=\"PC1\", ylab=\"PC2\")\npoints(pca.5$scores[,1], pca.5$scores[,2], pch=18)\n\n\n\n\n#Subjektive Auswahl von Arten zur Darstellung\nsel.sp <- c(3,11,23,39,46,72,77,96)\nsnames <- names(sveg[,sel.sp])\nsnames\n\n\n[1] \"Vaccinium.oxycoccos\" \"Carex.echinata\"      \"Arnica.montana\"     \n[4] \"Carex.pulicaris\"     \"Sphagnum.recurvum\"   \"Viola.palustris\"    \n[7] \"Galium.uliginosum\"   \"Stachys.officinalis\"\n\n\n#PCA-Plot der Korrelationen der Variablen (hier Arten) mit den Achsen (h)\nx <- pca.5$loadings[,1]\ny <- pca.5$loadings[,2]\nplot(x,y,type=\"n\", asp=1)\narrows(0,0, x[sel.sp], y[sel.sp], length=0.08)\ntext(x[sel.sp], y[sel.sp], snames,pos=1, cex=0.6)\n\n\n\n\n\n# Mit vegan\npca.6 <- rda(sveg^0.25, scale=TRUE)\n#Erklärte Varianz der Achsen\nsummary(pca.6, axes=0)\n\n\n\nCall:\nrda(X = sveg^0.25, scale = TRUE) \n\nPartitioning of correlations:\n              Inertia Proportion\nTotal             119          1\nUnconstrained     119          1\n\nEigenvalues, and their contribution to the correlations \n\nImportance of components:\n                          PC1     PC2     PC3     PC4     PC5     PC6\nEigenvalue            24.5364 9.63686 7.22394 4.36331 3.95361 3.72344\nProportion Explained   0.2062 0.08098 0.06071 0.03667 0.03322 0.03129\nCumulative Proportion  0.2062 0.28717 0.34788 0.38454 0.41777 0.44906\n                          PC7     PC8     PC9   PC10    PC11    PC12\nEigenvalue            3.57461 3.13522 3.10061 2.9151 2.78382 2.69586\nProportion Explained  0.03004 0.02635 0.02606 0.0245 0.02339 0.02265\nCumulative Proportion 0.47909 0.50544 0.53150 0.5560 0.57939 0.60204\n                         PC13    PC14   PC15    PC16    PC17    PC18\nEigenvalue            2.51859 2.43543 2.3442 2.22651 2.11470 2.01524\nProportion Explained  0.02116 0.02047 0.0197 0.01871 0.01777 0.01693\nCumulative Proportion 0.62320 0.64367 0.6634 0.68208 0.69985 0.71679\n                         PC19    PC20    PC21    PC22    PC23    PC24\nEigenvalue            1.81358 1.78896 1.70675 1.64014 1.58199 1.53669\nProportion Explained  0.01524 0.01503 0.01434 0.01378 0.01329 0.01291\nCumulative Proportion 0.73203 0.74706 0.76140 0.77518 0.78848 0.80139\n                         PC25    PC26    PC27    PC28    PC29\nEigenvalue            1.48976 1.41153 1.32011 1.27171 1.24282\nProportion Explained  0.01252 0.01186 0.01109 0.01069 0.01044\nCumulative Proportion 0.81391 0.82577 0.83687 0.84755 0.85800\n                          PC30     PC31    PC32     PC33     PC34\nEigenvalue            1.177095 1.161986 1.05550 1.005694 0.957869\nProportion Explained  0.009892 0.009765 0.00887 0.008451 0.008049\nCumulative Proportion 0.867887 0.877652 0.88652 0.894973 0.903022\n                          PC35     PC36     PC37     PC38     PC39\nEigenvalue            0.904786 0.870042 0.826554 0.754349 0.721562\nProportion Explained  0.007603 0.007311 0.006946 0.006339 0.006064\nCumulative Proportion 0.910626 0.917937 0.924883 0.931222 0.937285\n                          PC40     PC41     PC42     PC43     PC44\nEigenvalue            0.654801 0.643916 0.589875 0.570627 0.547548\nProportion Explained  0.005503 0.005411 0.004957 0.004795 0.004601\nCumulative Proportion 0.942788 0.948199 0.953156 0.957951 0.962552\n                          PC45     PC46     PC47     PC48     PC49\nEigenvalue            0.468405 0.413838 0.404853 0.376750 0.351271\nProportion Explained  0.003936 0.003478 0.003402 0.003166 0.002952\nCumulative Proportion 0.966488 0.969966 0.973368 0.976534 0.979486\n                          PC50     PC51     PC52     PC53     PC54\nEigenvalue            0.324737 0.313651 0.265787 0.252939 0.236744\nProportion Explained  0.002729 0.002636 0.002234 0.002126 0.001989\nCumulative Proportion 0.982215 0.984851 0.987084 0.989210 0.991199\n                          PC55     PC56     PC57     PC58      PC59\nEigenvalue            0.200140 0.185113 0.176750 0.151258 0.1090589\nProportion Explained  0.001682 0.001556 0.001485 0.001271 0.0009165\nCumulative Proportion 0.992881 0.994436 0.995922 0.997193 0.9981093\n                          PC60      PC61      PC62\nEigenvalue            0.093773 0.0703683 0.0608501\nProportion Explained  0.000788 0.0005913 0.0005113\nCumulative Proportion 0.998897 0.9994887 1.0000000\n\nScaling 2 for species and site scores\n* Species are scaled proportional to eigenvalues\n* Sites are unscaled: weighted dispersion equal on all dimensions\n* General scaling constant of scores:  \n\n#PCA-Plot der Lage der Beobachtungen im Ordinationsraum\nbiplot(pca.6, display = \"sites\", type = \"points\", scaling=1)\n\n\n\n#Subjektive Auswahl von Arten zur Darstellung\nsel.sp <- c(3,11,23,39,46,72,77,96)\nsnames <- names(sveg[,sel.sp])\nsnames\n\n\n[1] \"Vaccinium.oxycoccos\" \"Carex.echinata\"      \"Arnica.montana\"     \n[4] \"Carex.pulicaris\"     \"Sphagnum.recurvum\"   \"Viola.palustris\"    \n[7] \"Galium.uliginosum\"   \"Stachys.officinalis\"\n\n#PCA-Plot der Korrelationen der Variablen (hier Arten) mit den Achsen (h)\nscores <- scores(pca.6, display=\"species\")\nx <- scores[,1]\ny <- scores[,2]\nplot(x, y, type=\"n\", asp=1)\narrows(0,0, x[sel.sp], y[sel.sp], length=0.08)\ntext(x[sel.sp], y[sel.sp], snames,pos=1,cex=0.6)\n\n\n\nplot(x, y, type=\"n\", asp=1, xlim=c(-1, 1), ylim=c(-0.6, 0.6)) # angepasste Achsen\n\n\n\n\n\n\n#CA---------\n\nlibrary(vegan)\nlibrary(FactoMineR) # siehe Beispiel hier: https://www.youtube.com/watch?v=vP4korRby0Q\n\n\nError in library(FactoMineR): there is no package called 'FactoMineR'\n\n\n# ebenfalls mit transformierten daten\no.ca<-cca(sveg^0.5)\no.ca1 <- CA(sveg^0.5)\n\n\nError in CA(sveg^0.5): could not find function \"CA\"\n\n\n#Arten (o) und Communities (+) plotten\nplot(o.ca)\n\n\n\n\nsummary(o.ca1)\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': object 'o.ca1' not found\n\nplot(o.ca1)\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'plot': object 'o.ca1' not found\n\n\n#Nur Arten plotten\nx<-o.ca$CA$u[,1]\ny<-o.ca$CA$u[,2]\nplot(x,y)\n\n\n\n\n#Anteilige Varianz, die durch die ersten beiden Achsen erklaert wird\no.ca$CA$eig[1:63]/sum(o.ca$CA$eig)\n\n\n         CA1          CA2          CA3          CA4          CA5 \n0.1938717329 0.0784178031 0.0593093321 0.0415383211 0.0363023792 \n         CA6          CA7          CA8          CA9         CA10 \n0.0331956103 0.0306008864 0.0285023042 0.0265222367 0.0244056325 \n        CA11         CA12         CA13         CA14         CA15 \n0.0240109846 0.0234254840 0.0222150377 0.0219046309 0.0201785751 \n        CA16         CA17         CA18         CA19         CA20 \n0.0195310505 0.0178586274 0.0171244647 0.0168831111 0.0155729551 \n        CA21         CA22         CA23         CA24         CA25 \n0.0151022403 0.0148469763 0.0138429200 0.0135235644 0.0124064424 \n        CA26         CA27         CA28         CA29         CA30 \n0.0119596307 0.0113475260 0.0108276648 0.0103244438 0.0097653834 \n        CA31         CA32         CA33         CA34         CA35 \n0.0092529076 0.0085821525 0.0083135220 0.0080948102 0.0076925039 \n        CA36         CA37         CA38         CA39         CA40 \n0.0064896514 0.0064094466 0.0059339345 0.0051876435 0.0051049028 \n        CA41         CA42         CA43         CA44         CA45 \n0.0047539874 0.0046425594 0.0043415294 0.0041908723 0.0037248417 \n        CA46         CA47         CA48         CA49         CA50 \n0.0036479482 0.0031491912 0.0030505002 0.0027876360 0.0025070229 \n        CA51         CA52         CA53         CA54         CA55 \n0.0023504010 0.0022794896 0.0020197835 0.0018304314 0.0016049269 \n        CA56         CA57         CA58         CA59         CA60 \n0.0015768122 0.0013960805 0.0010402900 0.0008806568 0.0008116201 \n        CA61         CA62         <NA> \n0.0005432719 0.0004907204           NA \n\n\n\n#NMDS----------\n\n#Distanzmatrix als Start erzeugen\nlibrary(MASS)\nlibrary(vegan)\n\nmde <-vegdist(sveg,method=\"euclidean\")\nmdm <-vegdist(sveg,method=\"manhattan\")\n\n#Zwei verschiedene NMDS-Methoden\nset.seed(1) #macht man, wenn man bei einer Wiederholung exakt die gleichen Ergebnisse will\no.imds<-isoMDS(mde, k=2) # mit K = Dimensionen\nset.seed(1)\no.mmds<-metaMDS(mde,k=3) # scheint nicht mit 2 Dimensionen zu konvergieren\n\nplot(o.imds$points)\nplot(o.mmds$points)\n\n#Stress =  Abweichung der zweidimensionalen NMDS-Loesung von der originalen Distanzmatrix\nstressplot(o.imds,mde)\nstressplot(o.mmds,mde)\n\n\n\n\n\n\n\n",
    "preview": "statistik/Statistik_Konsolidierung2_demoskript_ordinationen_v2/distill-preview.png",
    "last_modified": "2021-08-18T11:12:58+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik1_Abstract/",
    "title": "Statistik",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik1",
      "Statistik"
    ],
    "contents": "\n\n\n\nStatistik 1 (26.10.2020)\nIn Statistik 1 lernen die Studierenden, was (Inferenz-) Statistik im Kern leistet und warum sie für wissenschaftliche Erkenntnis (in den meisten Disziplinen) unentbehrlich ist. Nach einer Wiederholung der Rolle von Hypothesen wird erläutert, wie Hypothesentests in der frequentist-Statistik umgesetzt werden, einschliesslich p-Werten und Signifikanz-Levels. Die praktische Statistik beginnt mit den beiden einfachsten Fällen, dem Chi-Quadrat-Test für die Assoziation zwischen zwei kategorialen Variablen und dem t-Test auf Unterschiede in Mittelwerten zwischen zwei Gruppen. Abschliessend beschäftigen wir uns damit, wie man Ergebnisse statistischer Analysen am besten in Abbildungen, Tabellen und Text darstellt.\n\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:13:04+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik1_assigment_stat1/",
    "title": "Uebungen",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik1",
      "Statistik"
    ],
    "contents": "\n\n\n\nUebungen 1\nUebung 1.1: Assoziationstest\nBitte führt einen Assoziationstest zweier kategorialer Variablen (mit je zwei Ausprägungen) mit Chi-Quadrat und Fishers exaktem Test durch. Ihr habt zwei Möglichkeiten: (1) Ihr erhebt dazu selbst die Daten (wozu ihr euch auch in Teams zusammenschliessen könnt). Dabei könnt ihr sowohl Befragungen/Datenerhebung unter Mitstudierenden durchführen (etwa Nutzung Mac/Windows vs. männlich/weiblich) oder Daten zu anderen Objekten erheben. (2) Ihr nehmt zwei kategoriale Variablen aus einem der Novanimal-Datensätze (Feldexperiment oder Gästebefragung).  Bitte formuliert in beiden Fällen vor der Datenerhebung/Datenextraktion eine Hypothese, d.h. eine Erwartungshaltung, ob und welche Assoziation vorliegt und wenn ja warum. Bitte beachtet, dass ihr für die Form des Assoziationstests aus dem Kurs zwei binäre Variablen benötigt; wenn ihr also kategoriale Variablen mit mehr als zwei Ausprägungen habt, könnt ihr entweder Ausprägungen sinnvoll zusammenfassen oder seltene Ausprägungen im Test unberücksichtigt lassen.\nUebung 1.2: t-Test\nWerden in den Basis- und Interventionswochen unterschiedlich viele Gerichte verkauft?\nDefiniere die Null- (\\(H_0\\)) und die Alternativhypothese (\\(H_1\\)).\nFühre einen t-Test durch.\nWelche Form von t-Test musst Du anwenden: einseitig/zweiseitig resp. gepaart/ungepaart?\nWie gut sind die Voraussetzungen für einen t-Test erfüllt (z.B. Normalverteilung der Residuen und Varianzhomogenität)?\nStelle deine Ergebnisse angemessen dar, d.h. Text mit Abbildung und/oder Tabelle\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:13:05+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik1_Demo_Statistik_1/",
    "title": "Demo",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik1",
      "Statistik"
    ],
    "contents": "\n\n\n\n\n\n\nDemo: Statistik 1\nDemoscript als Download\nBinomialtest\n\n\nbinom.test(43, 100) #In Klammern übergibt man die Anzahl der Erfolge und die Stichprobengrösse\n\n\n\n    Exact binomial test\n\ndata:  43 and 100\nnumber of successes = 43, number of trials = 100, p-value =\n0.1933\nalternative hypothesis: true probability of success is not equal to 0.5\n95 percent confidence interval:\n 0.3313910 0.5328663\nsample estimates:\nprobability of success \n                  0.43 \n\nbinom.test(57, 100)\n\n\n\n    Exact binomial test\n\ndata:  57 and 100\nnumber of successes = 57, number of trials = 100, p-value =\n0.1933\nalternative hypothesis: true probability of success is not equal to 0.5\n95 percent confidence interval:\n 0.4671337 0.6686090\nsample estimates:\nprobability of success \n                  0.57 \n\nChi-Quadrat-Test & Fishers Test\nErmitteln des kritischen Wertes\n\n\nqchisq(0.95, 1)\n\n\n[1] 3.841459\n\nDirekter Test in R (dazu Werte als Matrix nötig)\n\n\ncount<-matrix(c(38, 14, 11, 51), nrow = 2)\ncount\n\n\n     [,1] [,2]\n[1,]   38   11\n[2,]   14   51\n\nchisq.test(count)\n\n\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  count\nX-squared = 33.112, df = 1, p-value = 8.7e-09\n\nfisher.test(count)\n\n\n\n    Fisher's Exact Test for Count Data\n\ndata:  count\np-value = 2.099e-09\nalternative hypothesis: true odds ratio is not equal to 1\n95 percent confidence interval:\n  4.746351 34.118920\nsample estimates:\nodds ratio \n  12.22697 \n\nt-Test\n\n\na <- c(20, 19, 25, 10, 8, 15, 13, 18, 11, 14)\nb <- c(12, 15, 16,7, 8, 10, 12, 11, 13, 10)\nblume<-data.frame(a,b)\nblume\n\n\n    a  b\n1  20 12\n2  19 15\n3  25 16\n4  10  7\n5   8  8\n6  15 10\n7  13 12\n8  18 11\n9  11 13\n10 14 10\n\nsummary(blume)\n\n\n       a               b        \n Min.   : 8.00   Min.   : 7.00  \n 1st Qu.:11.50   1st Qu.:10.00  \n Median :14.50   Median :11.50  \n Mean   :15.30   Mean   :11.40  \n 3rd Qu.:18.75   3rd Qu.:12.75  \n Max.   :25.00   Max.   :16.00  \n\nboxplot(blume$a, blume$b)\n\n\n\nboxplot(blume)\n\n\n\nhist(blume$a)\n\n\n\nhist(blume$b)\n\n\n\n\nzweiseitiger t-Test\n\n\nt.test(blume$a, blume$b)\n\n\n\n    Welch Two Sample t-test\n\ndata:  blume$a and blume$b\nt = 2.0797, df = 13.907, p-value = 0.05654\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -0.1245926  7.9245926\nsample estimates:\nmean of x mean of y \n     15.3      11.4 \n\neinseitiger t-Test\n\n\nt.test(blume$a, blume$b, alternative = \"greater\") #einseitig\n\n\n\n    Welch Two Sample t-test\n\ndata:  blume$a and blume$b\nt = 2.0797, df = 13.907, p-value = 0.02827\nalternative hypothesis: true difference in means is greater than 0\n95 percent confidence interval:\n 0.5954947       Inf\nsample estimates:\nmean of x mean of y \n     15.3      11.4 \n\nt.test(blume$a, blume$b, alternative = \"less\") #einseitig\n\n\n\n    Welch Two Sample t-test\n\ndata:  blume$a and blume$b\nt = 2.0797, df = 13.907, p-value = 0.9717\nalternative hypothesis: true difference in means is less than 0\n95 percent confidence interval:\n     -Inf 7.204505\nsample estimates:\nmean of x mean of y \n     15.3      11.4 \n\nklassischer t-Test vs. Welch Test\n\n\nt.test(blume$a, blume$b, var.equal = T) #Varianzen gleich, klassischer t-Test\n\n\n\n    Two Sample t-test\n\ndata:  blume$a and blume$b\nt = 2.0797, df = 18, p-value = 0.05212\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -0.03981237  7.83981237\nsample estimates:\nmean of x mean of y \n     15.3      11.4 \n\nt.test(blume$a, blume$b, var.equal = F) #Varianzen ungleich, Welch's t-Test, ist auch default, d.h. wenn var.equal nicht                        # definiert wird, wird ein Welch's t-Test ausgeführt. \n\n\n\n    Welch Two Sample t-test\n\ndata:  blume$a and blume$b\nt = 2.0797, df = 13.907, p-value = 0.05654\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -0.1245926  7.9245926\nsample estimates:\nmean of x mean of y \n     15.3      11.4 \n\ngepaarter t-Test\n\n\nt.test(blume$a, blume$b, paired = T)\n\n\n\n    Paired t-test\n\ndata:  blume$a and blume$b\nt = 3.4821, df = 9, p-value = 0.006916\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 1.366339 6.433661\nsample estimates:\nmean of the differences \n                    3.9 \n\nt.test(blume$a, blume$b, paired = T, alternative=\"greater\")\n\n\n\n    Paired t-test\n\ndata:  blume$a and blume$b\nt = 3.4821, df = 9, p-value = 0.003458\nalternative hypothesis: true difference in means is greater than 0\n95 percent confidence interval:\n 1.846877      Inf\nsample estimates:\nmean of the differences \n                    3.9 \n\nWilcoxon-Vorzeichen-Rang-Test\n\n\nshapiro.test(blume$b)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  blume$b\nW = 0.97341, p-value = 0.9206\n\nvar.test(blume$a, blume$b)\n\n\n\n    F test to compare two variances\n\ndata:  blume$a and blume$b\nF = 3.3715, num df = 9, denom df = 9, p-value = 0.08467\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n  0.8374446 13.5738284\nsample estimates:\nratio of variances \n          3.371547 \n\nif(!require(car)){install.packages(\"car\")} # installiert das Zusatzpacket car (wenn nicht bereits installiert)\nlibrary(car)\nleveneTest(blume$a, blume$b, center=mean)\n\n\nLevene's Test for Homogeneity of Variance (center = mean)\n      Df    F value    Pr(>F)    \ngroup  7 2.2598e+30 < 2.2e-16 ***\n       2                         \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nwilcox.test(blume$a, blume$b)\n\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  blume$a and blume$b\nW = 73, p-value = 0.08789\nalternative hypothesis: true location shift is not equal to 0\n\nDas gleiche mit einem “long table”\n\n\ncultivar <- c(rep(\"a\", 10), rep(\"b\", 10))\nsize <- c(a,b)\nblume.long <- data.frame(cultivar, size)\n\nrm(size) #Befehl rm entfernt die nicht mehr benötitgten Objekte aus dem Workspace\nrm(cultivar)\n\n\nrm(size) #Befehl rm entfernt die nicht mehr benötitgten Objekte aus dem Workspace\nrm(cultivar)\n\n\n\nDas gleiche in einer Zeile\n\n\nblume.long <- data.frame(cultivar=c(rep(\"a\", 10), rep(\"b\", 10)), size=c(a, b))\nsummary(blume.long)             \n\n\n   cultivar              size      \n Length:20          Min.   : 7.00  \n Class :character   1st Qu.:10.00  \n Mode  :character   Median :12.50  \n                    Mean   :13.35  \n                    3rd Qu.:15.25  \n                    Max.   :25.00  \n\nhead(blume.long)\n\n\n  cultivar size\n1        a   20\n2        a   19\n3        a   25\n4        a   10\n5        a    8\n6        a   15\n\n\nboxplot(size~cultivar, data = blume.long)\n\n\n\n\nt.test(size~cultivar, blume.long, var.equal = T)\n\n\n\n    Two Sample t-test\n\ndata:  size by cultivar\nt = 2.0797, df = 18, p-value = 0.05212\nalternative hypothesis: true difference in means between group a and group b is not equal to 0\n95 percent confidence interval:\n -0.03981237  7.83981237\nsample estimates:\nmean in group a mean in group b \n           15.3            11.4 \n\nt.test(size~cultivar, blume.long, var.equal = F)\n\n\n\n    Welch Two Sample t-test\n\ndata:  size by cultivar\nt = 2.0797, df = 13.907, p-value = 0.05654\nalternative hypothesis: true difference in means between group a and group b is not equal to 0\n95 percent confidence interval:\n -0.1245926  7.9245926\nsample estimates:\nmean in group a mean in group b \n           15.3            11.4 \n\nBase R vs. ggplot2\n\n\n\nlibrary(tidyverse)\nggplot(blume.long, aes(cultivar,size)) + geom_boxplot()\n\n\n\nggplot(blume.long, aes(cultivar,size)) + geom_boxplot() + theme_classic()\n\n\n\nggplot(blume.long, aes(cultivar,size)) + geom_boxplot(size = 1) + theme_classic()+\ntheme(axis.line = element_line(size=1)) + theme(axis.title = element_text(size = 14))+\ntheme(axis.text = element_text(size=14))\n\n\n\nggplot(blume.long, aes(cultivar,size)) + geom_boxplot(size=1) + theme_classic()+\n  theme(axis.line = element_line(size=1), axis.ticks = element_line(size = 1), \n       axis.text = element_text(size = 20), axis.title = element_text(size = 20))\n\n\n\n\nDefinieren von mytheme mit allen gewünschten Settings, das man zu Beginn einer Sitzung einmal laden und dann immer wieder ausführen kann (statt des langen Codes)\n\n\nmytheme <- theme_classic() + \n  theme(axis.line = element_line(color = \"black\", size=1), \n        axis.text = element_text(size = 20, color = \"black\"), \n        axis.title = element_text(size = 20, color = \"black\"), \n        axis.ticks = element_line(size = 1, color = \"black\"), \n        axis.ticks.length = unit(.5, \"cm\"))\n\n\n\n\n\nggplot(blume.long, aes(cultivar, size)) + \n  geom_boxplot(size = 1) +\n  mytheme\n\n\n\n\nt_test <- t.test(size~cultivar, blume.long)\n\nggplot(blume.long, aes(cultivar, size)) + \n  geom_boxplot(size = 1) + \n  mytheme +\n  annotate(\"text\", x = \"b\", y = 24, label = paste0(\"italic(p) == \", round(t_test$p.value, 3)), parse = TRUE, size = 8)\n\n\n\n\nggplot (blume.long, aes(cultivar,size)) + \n  geom_boxplot(size = 1) + \n  mytheme +\n  labs(x=\"Cultivar\",y=\"Size (cm)\")\n\n\n\n\n\n\n\n",
    "preview": "statistik/Statistik1_Demo_Statistik_1/distill-preview.png",
    "last_modified": "2021-08-18T11:13:16+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik1_Intro_Daten_egel/",
    "title": "Beschreibung",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik1",
      "Statistik"
    ],
    "contents": "\n\n\n\nBeschreibung Forschungsprojekt NOVANIMAL (NFP69)\nIm Forschungsprojekt NOVANIMAL wird u.a. der Frage nachgegangen, was es braucht, damit Menschen freiwillig weniger tierische Produkte konsumieren? Ein interessanter Ansatzpunkt ist die Ausser-Haus-Verpflegung. Gemäss der ersten in den Jahren 2014/2015 durchgeführten nationalen Ernährungserhebung menuCH essen 70 % der Bevölkerung zwischen 18 und 75 Jahren am Mittag auswärts (Bochud et al. 2017). Daher rückt die Gastronomie als zentraler Akteur einer innovativen und nachhaltigen Ernährungswirtschaft ins Blickfeld. Welche Innovationen in der Gastronomie könnten dazu beitragen, den Pro-Kopf-Verbrauch an tierischen Nahrungsmitteln zu senken?\nDazu wurde u.a. ein Experiment in zwei Hochschulmensen durchgeführt. Forschungsleitend war die Frage, wie die Gäste dazu bewogen werden können, häufiger vegetarische oder vegane Gerichte zu wählen. Konkret wurde untersucht, wie die Gäste auf ein verändertes Menü-Angebot mit einem höheren Anteil an vegetarischen und veganen Gerichten reagieren. Das Experiment fand während 12 Wochen statt und bestand aus zwei Mensazyklen à 6 Wochen. Über den gesamten Untersuchungszeitraum werden insgesamt 90 verschiedene Gerichte angeboten. In den 6 Referenz- bzw. Basiswochen wurden zwei fleisch- oder fischhaltige Menüs und ein vegetarisches Menü angeboten. In den 6 Interventionswochen wurde das Verhältnis umgekehrt und es wurden ein veganes, ein vegetarisches und ein fleisch- oder fischhaltiges Gericht angeboten. Basis- und Interventionsangebote wechselten wöchentlich ab. Während der gesamten 12 Wochen konnten die Gäste jeweils auf ein Buffet ausweichen und ihre Mahlzeit aus warmen und kalten Komponenten selber zusammenstellen. Die Gerichte wurden über drei vorgegebene Menülinien (F, K, W) randomisiert angeboten.\nDie Abbildung zeigt das Versuchsdesign der ersten 6 Experimentwochen (Kalenderwoche 40 bis 45).Mehr Informationen über das Forschungsprojekt NOVANIMAL findet ihr auf der Webpage\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:13:19+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik2_Abstract/",
    "title": "Statistik",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik2",
      "Statistik"
    ],
    "contents": "\n\n\n\nStatistik 2 (27.10.2020)\nIn Statistik 2 lernen die Studierenden die Idee, die Voraussetzungen und die praktische Anwendung „einfacher“ linearer Modelle in R (sowie teilweise ihrer „nicht-parametrischen“ bzw. „robusten“ Äquivalente). Am Anfang steht die Varianzanalyse (ANOVA) als Verallgemeinerung des t-Tests, einschliesslich post-hoc-Tests und mehrfaktorieller ANOVA. Dann geht es um die Voraussetzungen parametrischer (und nicht-parametrischer) Tests und Optionen, wenn diese verletzt sind. Dann beschäftigen wir uns mit Korrelationen, die auf einen linearen Zusammenhang zwischen zwei metrischen Variablen testen, ohne Annahme einer Kausalität. Es folgen einfache lineare Regressionen, die im Prinzip das Gleiche bei klarer Kausalität leisten. Abschliessend besprechen wir, was die grosse Gruppe linearer Modelle (Befehl lm in R) auszeichnet.\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:13:24+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik2_assigment_stat2/",
    "title": "Uebungen",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik2",
      "Statistik"
    ],
    "contents": "\n\n\n\nUebungen 2\nAbzugeben sind am Ende\na. lauffähiges R-Skript\nb. begründeter Lösungsweg (Kombination aus R-Code, R Output \n   und dessen Interpretation)\nc. ausformulierter Methoden- und Ergebnisteil (für eine wiss.Arbeit).\nBitte erklärt und begründet die einzelnen Schritte, die ihr unternehmt, um zu eurem Ergebnis zu kommen. Dazu erstellt bitte ein Word-Dokument, in dem ihr Schritt für Schritt den verwendeten R-Code, die dazu gehörigen Ausgaben von R, eure Interpretation derselben und die sich ergebenden Schlussfolgerungen für das weitere Vorgehen dokumentiert.\nDieser Ablauf sollte insbesondere beinhalten:\nÜberprüfen der Datenstruktur nach dem Einlesen, welches sind die abhängige(n) und welches die unabängige(n) Variablen etc.\nExplorative Datenanalyse, um zu sehen, ob evtl. Dateneingabefehler vorliegen oder Datentransformationen vorgenommen werden sollten\nAuswahl und Begründung eines statistischen Verfahrens\nBestimmung des vollständigen/maximalen Models\nSelektion des/der besten Models/Modelle\nDurchführen der Modelldiagnostik für dieses\nGenerieren aller Zahlen, Statistiken und Tabellen, die für eine wiss. Ergebnisdarstellung benötigt werden\n\nFormuliert abschliessend einen Methoden- und Ergebnisteil (ggf. incl. adäquaten Abbildungen/Tabellen) zu dieser Untersuchung in der Form einer wissenschaftlichen Arbeit (je einen ausformulierten Absatz von ca. 60-100 Worten bzw. 3-8 Sätzen). Alle wichtigen Informationen sollten enthalten sein, unnötige Redundanz dagegen vermieden werden.\nUebung 2.1: Regression\nRegressionsanalyse mit SAR.csv\nDer Datensatz beschreibt die Zunahme der Artenzahlen (richness) von Pflanzen in Trockenrasen der Schweiz in Abhängigkeit von der Probeflächengrösse (area, hier in m²). Diese Beziehung bezeichnet man als Artenzahl-Areal-Kurve (Species-area relationship = SAR).\nLadet den Datensatz in R und macht eine explorative Datenanalyse.\nWählt unter den schon gelernten Methoden der Regressionsanalyse ein adäquates Vorgehen zur Analyse dieser Daten und führt diese dann durch.\nPrüft anhand der Residuen, ob die Modellvoraussetzungen erfüllt waren\nFalls die Modelldiagnostik negativ ausfällt, überlegt, welche Datentransformation helfen könnte, und rechnet neue Modelle mit einer oder ggf. mehreren Datentransformationen, bis ihr eine statistisch zufriedenstellende Lösung gefunden habt.\nStellt die erhaltenen Ergebnisse angemessen dar (Text, Abbildung und/oder Tabelle).\nKennt ihr ggf. noch eine andere geeignete Herangehensweise?\nUebung 2.2: Einfaktorielle ANOVA\nANOVA mit novanimal.csv\nFührt mit dem Datensatz novanimal.csv eine einfaktorielle ANOVA durch. Gibt es Unterschiede zwischen der Anzahl verkaufter Gerichte (Buffet, Fleisch oder Vegetarisch) pro Woche?\nHinweise für die Analysen:\nFasst die vier Inhalte der Gerichte zu drei Inhalten zusammen. Das heisst, dass die pflanzlichen Gerichte neu zu den vegetarischen Gerichten gezählt werden. Konkret könnt ihr das in R mit einer Umbenennung der Inhalte durchführen (z. B. mit stringr::str_replace()).\nDanach muss der Datensatz gruppiert und zusammengefasst werden.\nUnbekannte Menüinhalte können vernachlässigt werden.\nWie gut sind die Voraussetzungen für eine ANOVA erfüllt? Wären allenfalls auch nicht-parametrische Analysen zulässig?\nFührt anschliessend Post-hoc-Vergleiche durch.\nFasst die Ergebnisse in einem Satz zusammen.\nUebung 2.3N: Mehrfaktorielle ANOVA (NatWis)\nANOVA mit kormoran.csv\nDer Datensatz enthält 40 Beobachtungen zu Tauchzeiten zweier Kormoranunterarten (C = Phalocrocorax carbo carbo und S = Phalacrocorax carbo sinensis) aus vier Jahreszeiten (F = Frühling, S = Sommer, H = Herbst, W = Winter).\nLest den Datensatz nach R ein und führt eine adäquate Analyse durch, um beantworten zu können, wie Unterart und Jahreszeit die Tauchzeit beeinflussen.\nStellt eure Ergebnisse dann angemessen dar (Text mit Abbildung und/oder Tabelle).\nGibt es eine Interaktion?\nUebung 2.3S: Mehrfaktorielle ANOVA mit Interaktion (SozWis)\nANOVA mit novanimal.csv\nIn der Mensa gibt es zwei unterschiedliche Preisniveaus bzgl. den Gerichten: eine preisgünstigere Menülinie (“World” & “Favorite”) und eine teuere Menülinie (“Kitchen”). Gibt es Unterschiede zwischen dem Kauf von preisgünstigeren resp. teureren Menülinien betreffend Menüinhalt & Hochschulzugehörigkeit?\nHinweise für die Analysen:\nFasst die zwei günstigeren Menülinien “Favorite” & “World” zu einer Menülinie zusammen. Konkret könnt ihr das in R mit einer Umbenennung der Inhalte durchführen (z. B. mit str_replace() oder sub()).\nDanach muss der Datensatz gruppiert (nach Menülinie & Hochschulzugehörigkeit) und zusammengefasst werden.\nUnbekannte Menüinhalte können vernachlässigt werden.\nWie gut sind die Voraussetzungen für eine ANOVA erfüllt? Wären allenfalls auch nicht-parametrische Analysen zulässig?\nFührt anschliessend Post-hoc-Vergleiche durch.\nStellt eure Ergebnisse dann angemessen dar (Text mit Abbildung und/oder Tabelle).\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:13:26+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik2_Demo_Statistik_2/",
    "title": "Demo",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik2",
      "Statistik"
    ],
    "contents": "\n\n\n\nDemo: Statistik 2\nDemoscript als Download\nt-test als ANOVA\n\n\na <- c(20, 19, 25, 10, 8, 15, 13 ,18, 11, 14)\nb <- c(12, 15, 16, 7, 8, 10, 12, 11, 13, 10)\n\nblume <- data.frame(cultivar = c(rep(\"a\", 10), rep(\"b\" , 10)), size = c(a, b))\n\npar(mfrow=c(1,1))\nboxplot(size~cultivar, xlab = \"Sorte\", ylab = \"Bluetengroesse [cm]\", data=blume)\n\n\n\n\nt.test(size~cultivar, blume, var.equal=T)\n\n\n\n    Two Sample t-test\n\ndata:  size by cultivar\nt = 2.0797, df = 18, p-value = 0.05212\nalternative hypothesis: true difference in means between group a and group b is not equal to 0\n95 percent confidence interval:\n -0.03981237  7.83981237\nsample estimates:\nmean in group a mean in group b \n           15.3            11.4 \n\n\naov(size~cultivar, data = blume)\n\n\nCall:\n   aov(formula = size ~ cultivar, data = blume)\n\nTerms:\n                cultivar Residuals\nSum of Squares     76.05    316.50\nDeg. of Freedom        1        18\n\nResidual standard error: 4.193249\nEstimated effects may be unbalanced\n\nsummary(aov(size~cultivar, data = blume))\n\n\n            Df Sum Sq Mean Sq F value Pr(>F)  \ncultivar     1   76.0   76.05   4.325 0.0521 .\nResiduals   18  316.5   17.58                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsummary.lm(aov(size~cultivar, data = blume))\n\n\n\nCall:\naov(formula = size ~ cultivar, data = blume)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-7.300 -2.575 -0.350  2.925  9.700 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   15.300      1.326   11.54 9.47e-10 ***\ncultivarb     -3.900      1.875   -2.08   0.0521 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.193 on 18 degrees of freedom\nMultiple R-squared:  0.1937,    Adjusted R-squared:  0.1489 \nF-statistic: 4.325 on 1 and 18 DF,  p-value: 0.05212\n\nEchte ANOVA\n\n\nc <- c(30, 19, 31, 23, 18, 25, 26, 24, 17, 20)\n\nblume2 <- data.frame(cultivar = c(rep(\"a\", 10), rep(\"b\", 10), rep(\"c\", 10)), size=c(a, b, c))\nblume2$cultivar <- as.factor(blume2$cultivar)\n\nsummary(blume2)             \n\n\n cultivar      size      \n a:10     Min.   : 7.00  \n b:10     1st Qu.:11.25  \n c:10     Median :15.50  \n          Mean   :16.67  \n          3rd Qu.:20.00  \n          Max.   :31.00  \n\nhead(blume2)\n\n\n  cultivar size\n1        a   20\n2        a   19\n3        a   25\n4        a   10\n5        a    8\n6        a   15\n\n\npar(mfrow=c(1,1))\nboxplot(size~cultivar, xlab = \"Sorte\", ylab = \"Blütengrösse [cm]\", data = blume2)\n\n\n\n\naov(size~cultivar, data = blume2)\n\n\nCall:\n   aov(formula = size ~ cultivar, data = blume2)\n\nTerms:\n                cultivar Residuals\nSum of Squares  736.0667  528.6000\nDeg. of Freedom        2        27\n\nResidual standard error: 4.424678\nEstimated effects may be unbalanced\n\nsummary(aov(size~cultivar, data = blume2))\n\n\n            Df Sum Sq Mean Sq F value   Pr(>F)    \ncultivar     2  736.1   368.0    18.8 7.68e-06 ***\nResiduals   27  528.6    19.6                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsummary.lm(aov(size~cultivar, data=blume2))\n\n\n\nCall:\naov(formula = size ~ cultivar, data = blume2)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-7.300 -3.375 -0.300  2.700  9.700 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   15.300      1.399  10.935 2.02e-11 ***\ncultivarb     -3.900      1.979  -1.971 0.059065 .  \ncultivarc      8.000      1.979   4.043 0.000395 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.425 on 27 degrees of freedom\nMultiple R-squared:  0.582, Adjusted R-squared:  0.5511 \nF-statistic:  18.8 on 2 and 27 DF,  p-value: 7.683e-06\n\n\naov.1 <- aov(size~cultivar, data = blume2)\nsummary(aov.1)\n\n\n            Df Sum Sq Mean Sq F value   Pr(>F)    \ncultivar     2  736.1   368.0    18.8 7.68e-06 ***\nResiduals   27  528.6    19.6                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsummary.lm(aov.1)\n\n\n\nCall:\naov(formula = size ~ cultivar, data = blume2)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-7.300 -3.375 -0.300  2.700  9.700 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   15.300      1.399  10.935 2.02e-11 ***\ncultivarb     -3.900      1.979  -1.971 0.059065 .  \ncultivarc      8.000      1.979   4.043 0.000395 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.425 on 27 degrees of freedom\nMultiple R-squared:  0.582, Adjusted R-squared:  0.5511 \nF-statistic:  18.8 on 2 and 27 DF,  p-value: 7.683e-06\n\n\n#Berechnung Mittelwerte usw. zur Charakterisierung der Gruppen\naggregate(size~cultivar, blume2, function(x) c(Mean = mean(x), SD = sd(x), Min = min(x), Max=max(x)))\n\n\n  cultivar size.Mean   size.SD  size.Min  size.Max\n1        a 15.300000  5.207900  8.000000 25.000000\n2        b 11.400000  2.836273  7.000000 16.000000\n3        c 23.300000  4.854551 17.000000 31.000000\n\n\nlm.1 <- lm(size~cultivar, data = blume2)\nsummary(lm.1)\n\n\n\nCall:\nlm(formula = size ~ cultivar, data = blume2)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-7.300 -3.375 -0.300  2.700  9.700 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   15.300      1.399  10.935 2.02e-11 ***\ncultivarb     -3.900      1.979  -1.971 0.059065 .  \ncultivarc      8.000      1.979   4.043 0.000395 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.425 on 27 degrees of freedom\nMultiple R-squared:  0.582, Adjusted R-squared:  0.5511 \nF-statistic:  18.8 on 2 and 27 DF,  p-value: 7.683e-06\n\nTukeys Posthoc-Test\n\n\nif(!require(agricolae)){install.packages(\"agricolae\")}\nlibrary(agricolae)\n\nHSD.test(aov.1, \"cultivar\", group = FALSE, console = T)\n\n\n\nStudy: aov.1 ~ \"cultivar\"\n\nHSD Test for size \n\nMean Square Error:  19.57778 \n\ncultivar,  means\n\n  size      std  r Min Max\na 15.3 5.207900 10   8  25\nb 11.4 2.836273 10   7  16\nc 23.3 4.854551 10  17  31\n\nAlpha: 0.05 ; DF Error: 27 \nCritical Value of Studentized Range: 3.506426 \n\nComparison between treatments means\n\n      difference pvalue signif.        LCL       UCL\na - b        3.9 0.1388          -1.006213  8.806213\na - c       -8.0 0.0011      ** -12.906213 -3.093787\nb - c      -11.9 0.0000     *** -16.806213 -6.993787\n\nBeispiel Posthoc-Labels in Plot\n\n\naov.2 <- aov(Sepal.Width ~ Species, data = iris)\nHSD.test(aov.2, \"Species\", console = T)\n\n\n\nStudy: aov.2 ~ \"Species\"\n\nHSD Test for Sepal.Width \n\nMean Square Error:  0.1153878 \n\nSpecies,  means\n\n           Sepal.Width       std  r Min Max\nsetosa           3.428 0.3790644 50 2.3 4.4\nversicolor       2.770 0.3137983 50 2.0 3.4\nvirginica        2.974 0.3224966 50 2.2 3.8\n\nAlpha: 0.05 ; DF Error: 147 \nCritical Value of Studentized Range: 3.348424 \n\nMinimun Significant Difference: 0.1608553 \n\nTreatments with the same letter are not significantly different.\n\n           Sepal.Width groups\nsetosa           3.428      a\nvirginica        2.974      b\nversicolor       2.770      c\n\nboxplot(Sepal.Width ~ Species, data = iris)\n\n\n\nboxplot(Sepal.Width ~ Species, ylim=c(2, 5), data = iris)\ntext(1, 4.8, \"a\")\ntext(2, 4.8, \"c\")\ntext(3, 4.8, \"b\")\n\n\n\n\nlibrary(tidyverse)\nggplot(iris, aes(Species, Sepal.Width)) + geom_boxplot(size = 1) +\n  annotate(\"text\", y = 5, x = 1:3, label = c(\"a\", \"c\", \"b\"))\n\n\n\n\nKlassische Tests der Modellannahmen (NICHT EMPFOHLEN!!!) \n\n\nshapiro.test(blume2$size[blume2$cultivar == \"a\"])\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  blume2$size[blume2$cultivar == \"a\"]\nW = 0.97304, p-value = 0.9175\n\nvar.test(blume2$size[blume2$cultivar == \"a\"], blume2$size[blume2$cultivar == \"b\"])\n\n\n\n    F test to compare two variances\n\ndata:  blume2$size[blume2$cultivar == \"a\"] and blume2$size[blume2$cultivar == \"b\"]\nF = 3.3715, num df = 9, denom df = 9, p-value = 0.08467\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n  0.8374446 13.5738284\nsample estimates:\nratio of variances \n          3.371547 \n\n\nif(!require(car)){install.packages(\"car\")}\nlibrary(car)\nleveneTest(blume2$size[blume2$cultivar == \"a\"], blume2$size[blume2$cultivar == \"b\"], center=mean)\n\n\nLevene's Test for Homogeneity of Variance (center = mean)\n      Df    F value    Pr(>F)    \ngroup  7 2.2598e+30 < 2.2e-16 ***\n       2                         \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nwilcox.test(blume2$size[blume2$cultivar == \"a\"], blume2$size[blume2$cultivar == \"b\"])\n\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  blume2$size[blume2$cultivar == \"a\"] and blume2$size[blume2$cultivar == \"b\"]\nW = 73, p-value = 0.08789\nalternative hypothesis: true location shift is not equal to 0\n\nNicht-parametrische Alternativen, wenn Modellannahmen der ANVOA massiv verletzt sind\nZum Vergleich normale ANOVA noch mal\n\n\nsummary(aov(size~cultivar, data=blume2))\n\n\n            Df Sum Sq Mean Sq F value   Pr(>F)    \ncultivar     2  736.1   368.0    18.8 7.68e-06 ***\nResiduals   27  528.6    19.6                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nBei starken Abweichungen von der Normalverteilung, aber ähnlichen Varianzen\nKruskal-Wallis-Test\n\n\nkruskal.test(size~cultivar, data = blume2)\n\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  size by cultivar\nKruskal-Wallis chi-squared = 16.686, df = 2, p-value =\n0.0002381\n\nif(!require(FSA)){install.packages(\"FSA\")} \nlibrary(FSA)\ndunnTest(size~cultivar, method=\"bh\", data=blume2) #korrigierte p-Werte nach Bejamini-Hochberg\n\n\n  Comparison         Z      P.unadj        P.adj\n1      a - b  1.526210 1.269575e-01 0.1269575490\n2      a - c -2.518247 1.179407e-02 0.0176911039\n3      b - c -4.044457 5.244459e-05 0.0001573338\n\nBei erheblicher Heteroskedastizität, aber relative normal/symmetrisch verteilten Residuen\nWelch-Test\n\n\noneway.test(size~cultivar, var.equal = F, data = blume2)\n\n\n\n    One-way analysis of means (not assuming equal variances)\n\ndata:  size and cultivar\nF = 21.642, num df = 2.000, denom df = 16.564, p-value =\n2.397e-05\n\n2-faktorielle ANOVA\n\n\nd <- c(10, 12, 11, 13, 10, 25, 12, 30, 26, 13)\ne <- c(15, 13, 18, 11, 14, 25, 39, 38, 28, 24)\nf <- c(10, 12, 11, 13, 10, 9, 2, 4, 7, 13)\n\nblume3 <- data.frame(cultivar=c(rep(\"a\", 20), rep(\"b\", 20), rep(\"c\", 20)),\n                   house = c(rep(c(rep(\"yes\", 10), rep(\"no\", 10)), 3)),\n                  size = c(a, b, c, d, e, f))\n\n\n\n\n\nblume3\n\n\n   cultivar house size\n1         a   yes   20\n2         a   yes   19\n3         a   yes   25\n4         a   yes   10\n5         a   yes    8\n6         a   yes   15\n7         a   yes   13\n8         a   yes   18\n9         a   yes   11\n10        a   yes   14\n11        a    no   12\n12        a    no   15\n13        a    no   16\n14        a    no    7\n15        a    no    8\n16        a    no   10\n17        a    no   12\n18        a    no   11\n19        a    no   13\n20        a    no   10\n21        b   yes   30\n22        b   yes   19\n23        b   yes   31\n24        b   yes   23\n25        b   yes   18\n26        b   yes   25\n27        b   yes   26\n28        b   yes   24\n29        b   yes   17\n30        b   yes   20\n31        b    no   10\n32        b    no   12\n33        b    no   11\n34        b    no   13\n35        b    no   10\n36        b    no   25\n37        b    no   12\n38        b    no   30\n39        b    no   26\n40        b    no   13\n41        c   yes   15\n42        c   yes   13\n43        c   yes   18\n44        c   yes   11\n45        c   yes   14\n46        c   yes   25\n47        c   yes   39\n48        c   yes   38\n49        c   yes   28\n50        c   yes   24\n51        c    no   10\n52        c    no   12\n53        c    no   11\n54        c    no   13\n55        c    no   10\n56        c    no    9\n57        c    no    2\n58        c    no    4\n59        c    no    7\n60        c    no   13\n\n\n\nboxplot(size~cultivar+house, data = blume3)\n\n\n\n\nsummary(aov(size~cultivar+house, data = blume3))\n\n\n            Df Sum Sq Mean Sq F value   Pr(>F)    \ncultivar     2  417.1   208.5   5.005     0.01 *  \nhouse        1  992.3   992.3  23.815 9.19e-06 ***\nResiduals   56 2333.2    41.7                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsummary(aov(size~cultivar+house+cultivar:house, data = blume3)) \n\n\n               Df Sum Sq Mean Sq F value   Pr(>F)    \ncultivar        2  417.1   208.5   5.364   0.0075 ** \nhouse           1  992.3   992.3  25.520 5.33e-06 ***\ncultivar:house  2  233.6   116.8   3.004   0.0579 .  \nResiduals      54 2099.6    38.9                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsummary(aov(size~cultivar*house, data = blume3)) #Kurzschreibweise: \"*\" bedeutet, dass Interaktion zwischen cultivar und house eingeschlossen wird\n\n\n               Df Sum Sq Mean Sq F value   Pr(>F)    \ncultivar        2  417.1   208.5   5.364   0.0075 ** \nhouse           1  992.3   992.3  25.520 5.33e-06 ***\ncultivar:house  2  233.6   116.8   3.004   0.0579 .  \nResiduals      54 2099.6    38.9                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nsummary.lm(aov(size~cultivar+house, data = blume3))\n\n\n\nCall:\naov(formula = size ~ cultivar + house, data = blume3)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-9.733 -4.696 -1.050  2.717 19.133 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)    9.283      1.667   5.570 7.52e-07 ***\ncultivarb      6.400      2.041   3.135  0.00273 ** \ncultivarc      2.450      2.041   1.200  0.23509    \nhouseyes       8.133      1.667   4.880 9.19e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.455 on 56 degrees of freedom\nMultiple R-squared:  0.3766,    Adjusted R-squared:  0.3432 \nF-statistic: 11.28 on 3 and 56 DF,  p-value: 6.848e-06\n\n\n\ninteraction.plot(blume3$cultivar, blume3$house, blume3$size)\n\n\n\ninteraction.plot(blume3$house, blume3$cultivar, blume3$size)\n\n\n\n\nanova(lm(blume3$size~blume3$cultivar*blume3$house), lm(blume3$size~blume3$cultivar+blume3$house))\n\n\nAnalysis of Variance Table\n\nModel 1: blume3$size ~ blume3$cultivar * blume3$house\nModel 2: blume3$size ~ blume3$cultivar + blume3$house\n  Res.Df    RSS Df Sum of Sq      F  Pr(>F)  \n1     54 2099.6                              \n2     56 2333.2 -2   -233.63 3.0044 0.05792 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanova(lm(blume3$size~blume3$house), lm(blume3$size~blume3$cultivar*blume3$house))\n\n\nAnalysis of Variance Table\n\nModel 1: blume3$size ~ blume3$house\nModel 2: blume3$size ~ blume3$cultivar * blume3$house\n  Res.Df    RSS Df Sum of Sq      F   Pr(>F)   \n1     58 2750.3                                \n2     54 2099.6  4    650.73 4.1841 0.005045 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nKorrelationen\n\n\nlibrary(car)\n\nblume <- data.frame(a, b)\nscatterplot(a~b, blume)\n\n\n\n\ncor.test(a, b, method=\"pearson\", data = blume)\n\n\n\n    Pearson's product-moment correlation\n\ndata:  a and b\nt = 3.3678, df = 8, p-value = 0.009818\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.2628864 0.9414665\nsample estimates:\n      cor \n0.7657634 \n\ncor.test(a, b, method=\"spearman\", data = blume)\n\n\n\n    Spearman's rank correlation rho\n\ndata:  a and b\nS = 53.321, p-value = 0.03159\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n      rho \n0.6768419 \n\ncor.test(a, b, method=\"kendall\", data = blume) \n\n\n\n    Kendall's rank correlation tau\n\ndata:  a and b\nz = 2.0738, p-value = 0.03809\nalternative hypothesis: true tau is not equal to 0\nsample estimates:\n      tau \n0.5228623 \n\n\n#Jetzt als Regression\nlm.2 <- lm(b~a)\nanova(lm.2)\n\n\nAnalysis of Variance Table\n\nResponse: b\n          Df Sum Sq Mean Sq F value   Pr(>F)   \na          1 42.455  42.455  11.342 0.009818 **\nResiduals  8 29.945   3.743                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsummary(lm.2)\n\n\n\nCall:\nlm(formula = b ~ a)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.1897 -1.3388 -0.6067  1.3081  3.3933 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)   5.0193     1.9910   2.521  0.03575 * \na             0.4170     0.1238   3.368  0.00982 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.935 on 8 degrees of freedom\nMultiple R-squared:  0.5864,    Adjusted R-squared:  0.5347 \nF-statistic: 11.34 on 1 and 8 DF,  p-value: 0.009818\n\n\n#Model II-Regression\nif(!require(lmodel2)){install.packages(\"lmodel2\")} \nlibrary(lmodel2)\nlmodel2(b~a)\n\n\n\nModel II regression\n\nCall: lmodel2(formula = b ~ a)\n\nn = 10   r = 0.7657634   r-square = 0.5863936 \nParametric P-values:   2-tailed = 0.009817588    1-tailed = 0.004908794 \nAngle between the two OLS regression lines = 12.78218 degrees\n\nRegression results\n  Method Intercept     Slope Angle (degrees) P-perm (1-tailed)\n1    OLS  5.019254 0.4170422        22.63820                NA\n2     MA  4.288499 0.4648040        24.92919                NA\n3    SMA  3.067471 0.5446097        28.57314                NA\n\nConfidence intervals\n  Method 2.5%-Intercept 97.5%-Intercept 2.5%-Slope 97.5%-Slope\n1    OLS      0.4280737        9.610435  0.1314843   0.7026001\n2     MA     -1.4843783        8.769024  0.1719592   0.8421162\n3    SMA     -2.3775157        6.360555  0.3293755   0.9004912\n\nEigenvalues: 32.37967 2.786995 \n\nH statistic used for computing C.I. of MA: 0.0684968 \n\nBeispiele Modelldiagnostik\n\n\npar(mfrow=c(2,2)) #4 Plots in einem Fenster\nplot(lm(b~a))\n\n\n\n\nif(!require(ggfortify)){install.packages(\"ggfortify\")}\nlibrary(ggfortify)\nautoplot(lm(b~a))\n\n\n\n\n#Modellstatistik nicht OK\ng <- c(20, 19, 25, 10, 8, 15, 13, 18, 11, 14, 25, 39, 38, 28, 24)\nh <- c(12, 15, 10, 7, 8, 10, 12, 11, 13, 10, 25, 12, 30, 26, 13)\npar(mfrow=c(1, 1))\n\nplot(h~g,xlim = c(0,40), ylim = c(0, 30))\nabline(lm(h~g))\n\n\n\n\npar(mfrow=c(2,2))\nplot(lm(h~g))\n\n\n\n\n#Modelldiagnostik mit ggplot\ndf <- data.frame(g, h)\nggplot(df, aes(x = g, y = h)) + \n    # scale_x_continuous(limits = c(0,25)) +\n    # scale_y_continuous(limits = c(0,25)) +\n    geom_point() +\n    geom_smooth( method = \"lm\", color = \"black\", size = .5, se = F) + \n    theme_classic()\n\n\n\n\npar(mfrow=c(2,2))\nautoplot(lm(h~g))\n\n\n\n\n\n\n\n",
    "preview": "statistik/Statistik2_Demo_Statistik_2/distill-preview.png",
    "last_modified": "2021-08-18T11:13:39+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik2_solution_stat_Beispiel/",
    "title": "Musterloesung",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik2",
      "Statistik"
    ],
    "contents": "\n\n\n\n\n\n\n\n\n\n\n\n\nMusterloesung Beispiel\nRCode als Download\nLoesungstext Beispiel\nÜbungsaufgabe (hier so ausführlich formuliert, wie dies auch in der Klausur der Fall sein wird)\nLaden Sie den Datensatz decay.csv. Dieser enthält die Zahl radioaktiver Zerfälle pro Zeiteinheit (amount) für Zeitpunkte (time) nach dem Start des Experimentes.\nErmitteln Sie ein statistisches Modell, dass die Zerfallshäufigkeit in Abhängigkeit von der Zeit beschreibt.\nBitte erklären und begründen Sie die einzelnen Schritte, die Sie unternehmen, um zu diesem Ergebnis zu kommen. Dazu erstellen Sie bitte ein Word-Dokument, in das Sie Schritt für Schritt den verwendeten R-Code, die dazu gehörigen Ausgaben von R, Ihre Interpretation derselben und die sich ergebenden Schlussfolgerungen für das weitere Vorgehen dokumentieren.\nDieser Ablauf sollte insbesondere beinhalten:\nÜberprüfen der Datenstruktur nach dem Einlesen, welches sind die abhängige(n) und welches die unabängige(n) Variablen\nExplorative Datenanalyse, um zu sehen, ob evtl. Dateneingabefehler vorliegen oder Datentransformationen vorgenommen werden sollten\nAuswahl und Begründung eines statistischen Verfahrens (es gibt hier mehrere statistisch korrekte Möglichkeiten!)\nErmittlung eines Modells\nDurchführen der Modelldiagnostik für das gewählte Modell\nGenerieren aller Zahlen, Statistiken und Tabellen, die für eine wiss. Ergebnisdarstellung benötigt werden\nFormulieren Sie abschliessend einen Methoden- und Ergebnisteil (ggf. incl. adäquaten Abbildungen) zu dieser Untersuchung in der Form einer wissenschaftlichen Arbeit (ausformulierte schriftliche Zusammenfassung, mit je einem Absatz von ca. 60-100 Worten, resp. 3-8 Sätzen für den Methoden- und Ergebnisteil). D. h. alle wichtigen Informationen sollten enthalten sein, unnötige Redundanz dagegen vermieden werden.\nAbzugeben sind am Ende (a) Ein lauffähiges R-Skript; (b) begründeter Lösungsweg (Kombination aus R-Code, R Output und dessen Interpretation) und (c) ausformulierter Methoden- und Ergebnisteil (für eine wiss. Arbeit).\n\nkommentierter Loesungsweg\n\n\nsummary(decay)\n\n\n      time          amount       \n Min.   : 0.0   Min.   :  8.196  \n 1st Qu.: 7.5   1st Qu.: 21.522  \n Median :15.0   Median : 35.015  \n Mean   :15.0   Mean   : 42.146  \n 3rd Qu.:22.5   3rd Qu.: 57.460  \n Max.   :30.0   Max.   :125.000  \n\nstr(decay)\n\n\n'data.frame':   31 obs. of  2 variables:\n $ time  : int  0 1 2 3 4 5 6 7 8 9 ...\n $ amount: num  125 100.2 70 83.5 100 ...\n\nMan erkennt, dass es 31 Beobachtungen für die Zeit als Integer von Zerfällen gibt, die als rationale Zahlen angegeben werden (dass die Zahl der Zerfälle nicht ganzzahlig ist, deutet darauf hin, dass sie möglicherweise nur in einem Teil des Zeitintervalls oder für einen Teil des betrachteten Raumes gemessen und dann hochgerechnet wurde.\nExplorative Datenanalyse\n\n\nboxplot(decay$time)\n\n\n\nboxplot(decay$amount)\n\n\n\nplot(amount~time, data=decay)\n\n\n\n\nWährend der Boxplot für time wunderbar symmetrisch ohne Ausreisser ist, zeigt amount eine stark rechtsschiefe (linkssteile) Verteilung mit einem Ausreiser. Das deutet schon an, dass ein einfaches lineares Modell vermutlich die Modellannahmen verletzen wird. Auch der einfache Scatterplot zeigt, dass ein lineares Modell wohl nicht adäquat ist. Wir rechnen aber erst einmal weiter.\nEinfaches lineares Modell\n\n\nlm.1 <- lm(amount~time, data=decay)\nsummary(lm.1)\n\n\n\nCall:\nlm(formula = amount ~ time, data = decay)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-19.065 -10.029  -2.058   5.107  40.447 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  84.5534     5.0277   16.82  < 2e-16 ***\ntime         -2.8272     0.2879   -9.82 9.94e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 14.34 on 29 degrees of freedom\nMultiple R-squared:  0.7688,    Adjusted R-squared:  0.7608 \nF-statistic: 96.44 on 1 and 29 DF,  p-value: 9.939e-11\n\nDas sieht erst einmal nach einem Supermodell aus, höchstsignifikant und mit einem hohen R² von fast 77%. ABER: wir müssen uns noch die Modelldiagnostik ansehen…\nModelldiagnostik\n\n\npar(mfrow=c(2,2))\nplot(lm.1)\n\n\n\n\nHier zeigen die wichtigen oberen Plots beide massive Abweichungen vom „Soll“. Der Plot oben links zeigt eine „Banane“ und beim Q-Q-Plot oben rechts weichen die Punkte rechts der Mitte alle stark nach oben von der Solllinie ab. Wir haben unser Modell also offensichtlich falsch spezifiziert. Um eine Idee zu bekommen, was falsch ist, plotten wir noch, wie das Ergebnis dieses Modells aussähe:\nErgebnisplot\n\n\npar(mfrow=c(1,1))\nplot(decay$time, decay$amount)\nabline(lm.1, col=\"red\")\n\n\n\n\nDie Punkte links liegen alle über der Regressionslinie, die in der Mitte darunter und die ganz rechts wieder systematisch darüber (darum im Diagnostikplot oben die „Banane“). Es liegt also offensichtlich keine lineare Beziehung vor, sondern eine curvilineare.\nUm diese korrekt zu analysieren, gibt es im Prinzip drei Möglichkeiten, wovon am zweiten Kurstag nur eine hatten, während die zweite und dritte in Statistik 3 und 4 folgten. Im Folgenden sind alle drei nacheinander dargestellt (in der Klausur würde es aber genügen, eine davon darzustellen, wenn die Aufgabenstellung wie oben lautet).\nVariante (1): Lineares Modell nach Transformation der abhängigen Variablen Dass die Verteilung der abhängigen Variable nicht normal ist, haben wir ja schon bei der explorativen Datenanalyse am Anfang gesehen. Da sie stark linkssteil ist, zugleich aber keine Nullwerte enthält, bietet sich eine Logarithmustransformation an, hier z. B. mit dem natürlichen Logarithmus.\nLoesung 1: log-Transformation der abhaengigen Variablen\n\n\npar(mfrow=c(1,2))\nboxplot(decay$amount)\nboxplot(log(decay$amount))\n\n\n\nhist(decay$amount)\nhist(log(decay$amount))\n\n\n\n\nDie log-transformierte Variante rechts sieht sowohl im Boxplot als auch im #Histogramm viel symmetrischer/besser normalverteilt aus. Damit ergibt sich #dann folgendes lineares Modell\n\n\nlm.2 <- lm(log(amount)~time, data=decay)\nsummary(lm.2)\n\n\n\nCall:\nlm(formula = log(amount) ~ time, data = decay)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.5935 -0.2043  0.0067  0.2198  0.6297 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  4.547386   0.100295   45.34  < 2e-16 ***\ntime        -0.068528   0.005743  -11.93 1.04e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.286 on 29 degrees of freedom\nMultiple R-squared:  0.8308,    Adjusted R-squared:  0.825 \nF-statistic: 142.4 on 1 and 29 DF,  p-value: 1.038e-12\n\nJetzt ist der R²-Wert noch höher und der p-Wert noch niedriger als im ursprünglichen linearen Modell ohne Transformation. Das erlaubt aber keine Aussage, da wir Äpfel mit Birnen vergleichen, da die abhängige Variable einmal untransformiert und einmal log-transformiert ist. Entscheidend ist die Modelldiagnostik.\nModelldiagnostik\n\n\npar(mfrow=c(2,2))\nplot(lm.2)\n\n\n\n\nDer Q-Q-Plot sieht jetzt exzellent aus, der Plot rechts oben hat kaum noch eine Banane, nur noch einen leichten Keil. Insgesamt deutlich besser und auf jeden Fall ein statistisch korrektes Modell.\nLösungen 2 und 3 greifen auf Methoden von Statistik 3 und 4 zurück, sie sind hier nur zum Vergleich angeführt\nLoesung 2: quadratische Regression (kam erst in Statistik 3; koente fuer die Datenverteilung passen, entspricht aber nicht der physikalischen\nGesetzmaessigkeit\n\n\nmodel.quad <- lm(amount~time+I(time^2), data=decay)\nsummary(model.quad)\n\n\n\nCall:\nlm(formula = amount ~ time + I(time^2), data = decay)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-22.302  -6.044  -1.603   4.224  20.581 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 106.38880    4.65627  22.849  < 2e-16 ***\ntime         -7.34485    0.71844 -10.223 5.90e-11 ***\nI(time^2)     0.15059    0.02314   6.507 4.73e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 9.205 on 28 degrees of freedom\nMultiple R-squared:  0.908, Adjusted R-squared:  0.9014 \nF-statistic: 138.1 on 2 and 28 DF,  p-value: 3.122e-15\n\nHier können wir R² mit dem ursprünglichen Modell vergleichen (beide haben amount als abhängige Grösse) und es sieht viel besser aus. Sowohl der lineare als auch der quadratische Term sind hochsignifikant. Sicherheitshalber vergleichen wir die beiden Modelle aber noch mittels ANOVA.\nVergleich mit dem einfachen Modell mittels ANOVA (es ginge auch AICc)\n\n\nanova(lm.1, model.quad)\n\n\nAnalysis of Variance Table\n\nModel 1: amount ~ time\nModel 2: amount ~ time + I(time^2)\n  Res.Df    RSS Df Sum of Sq      F    Pr(>F)    \n1     29 5960.6                                  \n2     28 2372.6  1    3588.1 42.344 4.727e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nIn der Tat ist das komplexere Modell (jenes mit dem quadratischen Term) höchstsignifikant besser. Jetzt brauchen wir noch die Modelldiagnostik.\nModelldiagnostik\n\n\npar(mfrow=c(2,2))\nplot(model.quad)\n\n\n\n\nLoesung 3 (die beste, hatten wir aber am 2. Tag noch nicht; mit Startwerten muss man ggf. ausprobieren)\nmit Startwerten muss man ggf. ausprobieren)\n\n\nmodel.nls <- nls(amount~a*exp(-b*time), start=(list(a=100,b=1)),data=decay)\nsummary(model.nls)\n\n\n\nFormula: amount ~ a * exp(-b * time)\n\nParameters:\n   Estimate Std. Error t value Pr(>|t|)    \na 1.081e+02  4.993e+00   21.66  < 2e-16 ***\nb 8.019e-02  5.833e-03   13.75 3.12e-14 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 9.243 on 29 degrees of freedom\n\nNumber of iterations to convergence: 8 \nAchieved convergence tolerance: 7.966e-06\n\nModelldiagnostik\n\n\nif(!require(nlstools)){install.packages(\"nlstools\")}\nlibrary(nlstools)\nresiduals.nls <- nlsResiduals(model.nls)\nplot(residuals.nls)\n\n\n\n\nFür nls kann man nicht den normalen Plotbefehl für die Residualdiagnostik nehmen, sondern verwendet das Äquivalent aus nlstools. Die beiden entscheidenden Plots sind jetzt links oben und rechts unten. Der QQ-Plot hat im unteren Bereich einen kleinen Schönheitsfehler, aber ansonsten ist alles OK.\nDa alle drei Lösungen zumindest statistisch OK waren, sollen jetzt noch die zugehörigen Ergebnisplots erstellt werden.\nErgebnisplots\n\n\npar(mfrow=c(1,1))\nxv <- seq(0,30,0.1)\n\n\n\nlineares Modell mit log-transformierter Abhaengiger\n\n\nplot(decay$time, decay$amount)\nyv1 <- exp(predict(lm.2, list(time=xv)))\nlines(xv, yv1, col=\"red\")\n\n\n\n\nquadratisches Modell\n\n\nplot(decay$time, decay$amount)\nyv2 <- predict(model.quad, list(time=xv))\nlines(xv, yv2, col=\"blue\")\n\n\n\nnicht-lineares Modell\n\n\nplot(decay$time, decay$amount)\nyv3 <- predict(model.nls, list(time=xv))\nlines(xv, yv3, col=\"green\")\n\n\n\nOptisch betrachtet, geben (2) und (3) den empirischen Zusammenhang etwas besser wieder als (1), da sie im linken Bereich die hohen Werte besser treffen. Man könnte sogar meinen, bei Betrachtung der Daten, dass die Werte ab time = 28 wieder leicht ansteigen, was die quadratische Funktion wiedergibt. Wer sich aber mit Physik etwas auskennt, weiss, dass Version (2) physikalisch nicht zutrifft, da die Zerfallsrate mit der Zeit immer weiter abfällt. Aufgrund der kurzen Messreihe wäre eine quadratische Funktion trotzdem eine statistisch korrekte Interpretation. Mit längeren Messreihen würde sich jedoch schnell zeigen, dass sie nicht zutrifft.\n\n\n\n",
    "preview": "statistik/Statistik2_solution_stat_Beispiel/distill-preview.png",
    "last_modified": "2021-08-18T11:13:47+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik3_Abstract/",
    "title": "Statistik",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik3",
      "Statistik"
    ],
    "contents": "\n\n\n\nStatistik 3 (02.11.2020)\nStatistik 3 fassen wir zu Beginn den generellen Ablauf inferenzstatistischer Analysen in einem Flussdiagramm zusammen. Dann wird die ANCOVA als eine Technik vorgestellt, die eine ANOVA mit einer linearen Regression verbindet. Danach geht es um komplexere Versionen linearer Regressionen. Hier betrachten wir polynomiale Regressionen, die z. B. einen Test auf unimodale Beziehungen erlaubt, indem man dieselbe Prädiktorvariable linear und quadriert einspeist. Multiple Regressionen versuchen dagegen, eine abhängige Variable durch zwei oder mehr verschieden Prädiktorvariablen zu erklären. Wir thematisieren verschiedene dabei auftretende Probleme und ihre Lösung, insbesondere den Umgang mit korrelierten Prädiktoren und das Aufspüren des besten unter mehreren möglichen statistischen Modellen. Hieran wird auch der informatian theoretician-Ansatz der Statistik und die multimodel inference eingeführt.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:13:51+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik3_Demo_Statistik_3/",
    "title": "Demo",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik3",
      "Statistik"
    ],
    "contents": "\n\n\n\nDemo: Statistik 3\nDemoscript als Download\nDatensatz ipomopsis.csv\nDatensatz loyn.csv\nANCOVA Experiment zur Fruchtproduktion (“Fruit”) von Ipomopsis sp. (“Fruit”) in Abhängigkeit Ungrazedvon der Beweidung (Grazing mit 2 Levels: Grazed, Ungrazed) und korrigiert für die Pflanzengrösse vor der Beweidung (hier ausgedrückt als Durchmesser an der Spitze des Wurzelstock: “Root”)\n\n\ncompensation <- read.table(\"ipomopsis.csv\", header = T, sep = \",\")\n\n\n\n\n\nsummary(compensation)\n\n\n      Root            Fruit          Grazing         \n Min.   : 4.426   Min.   : 14.73   Length:40         \n 1st Qu.: 6.083   1st Qu.: 41.15   Class :character  \n Median : 7.123   Median : 60.88   Mode  :character  \n Mean   : 7.181   Mean   : 59.41                     \n 3rd Qu.: 8.510   3rd Qu.: 76.19                     \n Max.   :10.253   Max.   :116.05                     \n\ncompensation$Grazing <- as.factor(compensation$Grazing)\n\nplot(Fruit~Root, data=compensation)\n\n\n\nboxplot(Fruit~Grazing, data=compensation)\n\n\n\n\ntapply(compensation$Fruit, compensation$Grazing, mean)\n\n\n  Grazed Ungrazed \n 67.9405  50.8805 \n\n\naoc.1 <- lm(Fruit~Root*Grazing, data = compensation)\nsummary.aov(aoc.1)\n\n\n             Df Sum Sq Mean Sq F value   Pr(>F)    \nRoot          1  16795   16795 359.968  < 2e-16 ***\nGrazing       1   5264    5264 112.832 1.21e-12 ***\nRoot:Grazing  1      5       5   0.103     0.75    \nResiduals    36   1680      47                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\naoc.2 <- lm(Fruit~Grazing*Root, data = compensation)\nsummary.aov(aoc.2)\n\n\n             Df Sum Sq Mean Sq F value   Pr(>F)    \nGrazing       1   2910    2910  62.380 2.26e-09 ***\nRoot          1  19149   19149 410.420  < 2e-16 ***\nGrazing:Root  1      5       5   0.103     0.75    \nResiduals    36   1680      47                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\naoc.3 <- lm(Fruit~Grazing+Root, data = compensation)\nsummary.lm(aoc.3)\n\n\n\nCall:\nlm(formula = Fruit ~ Grazing + Root, data = compensation)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-17.1920  -2.8224   0.3223   3.9144  17.3290 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)     -127.829      9.664  -13.23 1.35e-15 ***\nGrazingUngrazed   36.103      3.357   10.75 6.11e-13 ***\nRoot              23.560      1.149   20.51  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.747 on 37 degrees of freedom\nMultiple R-squared:  0.9291,    Adjusted R-squared:  0.9252 \nF-statistic: 242.3 on 2 and 37 DF,  p-value: < 2.2e-16\n\n\n# Plotten der Ergebnisse\nlibrary(tidyverse)\nggplot(compensation, aes(Fruit, Root, color = Grazing)) +\n  geom_point()\n\n\n\n\n# Ploten mit base R\nplot(Fruit~Root, pch = 16, col = Grazing, data = compensation)\nlegend(\"topleft\", c(\"grazed\",\"ungrazed\"), col=c(\"black\",\"red\"), pch=16) \n\n\n\n\nPolynomische Regression\n\n\ne <- c(20, 19, 25, 10, 8, 15, 13, 18, 11, 14, 25, 39, 38, 28, 24)\nf <- c(12, 15, 10, 7, 2, 10, 12, 11, 13, 10, 9, 2, 4, 7, 13)\n\nlm.1 <- lm(f~e)\nlm.quad <- lm(f~e+I(e^2))\n\nsummary(lm.1)\n\n\n\nCall:\nlm(formula = f ~ e)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-9.0549 -1.7015  0.5654  2.0617  5.6406 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  12.2879     2.4472   5.021 0.000234 ***\ne            -0.1541     0.1092  -1.412 0.181538    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.863 on 13 degrees of freedom\nMultiple R-squared:  0.1329,    Adjusted R-squared:  0.06622 \nF-statistic: 1.993 on 1 and 13 DF,  p-value: 0.1815\n\nsummary(lm.quad)\n\n\n\nCall:\nlm(formula = f ~ e + I(e^2))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4.3866 -1.1018 -0.2027  1.3831  4.4211 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)   \n(Intercept) -2.239308   3.811746  -0.587  0.56777   \ne            1.330933   0.360105   3.696  0.00306 **\nI(e^2)      -0.031587   0.007504  -4.209  0.00121 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.555 on 12 degrees of freedom\nMultiple R-squared:  0.6499,    Adjusted R-squared:  0.5915 \nF-statistic: 11.14 on 2 and 12 DF,  p-value: 0.001842\n\n\npar(mfrow=c(1,1))\n\n# 1. lineares Modell\nplot(f~e,xlim=c(0,40), ylim=c(0,20))\nabline(lm(f~e), col=\"blue\")\n\n\n\n\n# 2. quadratisches Modell\nxv <- seq(0,40,0.1)\nplot(f~e,xlim=c(0,40), ylim=c(0,20))\nyv2 <- predict(lm.quad, list(e=xv))\nlines(xv, yv2, col=\"red\")\n\n\n\n\n# Residualplots\npar(mfrow=c(2,2))\nplot(lm.1)\n\n\n\n#plot(lm.2)\n\n\n\nMultiple lineare Regression basierend auf Logan, Beispiel 9A\n\n\nloyn <- read.table(\"loyn.csv\", header = T, sep = \",\")\n\n\n\n\n\nloyn\n\n\n   ABUND   AREA YR.ISOL DIST LDIST GRAZE ALT\n1    5.3    0.1    1968   39    39     2 160\n2    2.0    0.5    1920  234   234     5  60\n3    1.5    0.5    1900  104   311     5 140\n4   17.1    1.0    1966   66    66     3 160\n5   13.8    1.0    1918  246   246     5 140\n6   14.1    1.0    1965  234   285     3 130\n7    3.8    1.0    1955  467   467     5  90\n8    2.2    1.0    1920  284  1829     5  60\n9    3.3    1.0    1965  156   156     4 130\n10   3.0    1.0    1900  311   571     5 130\n11  27.6    2.0    1926   66   332     3 210\n12   1.8    2.0    1890   93    93     5 160\n13  21.2    2.0    1973   39    39     2 210\n14  14.6    2.0    1972  402   402     1 210\n15   8.0    2.0    1900  259   259     5 120\n16   3.5    2.0    1900  130   623     5 145\n17  29.0    3.0    1962   26    26     3 110\n18   2.9    3.0    1965   26    26     3 140\n19  24.3    4.0    1960   40    40     3 190\n20  19.4    4.0    1953  259   259     2  90\n21  24.4    4.0    1973  234   519     2 220\n22   5.0    4.0    1923   26  2205     5 120\n23  15.8    5.0    1965   39    39     3 130\n24  25.3    5.0    1967  372   372     1 100\n25  19.5    6.0    1890   93   226     3 170\n26  20.9    6.0    1960  159  1009     3 150\n27  16.3    7.0    1965  285   882     3 130\n28  18.8    7.0    1960  133   133     4 210\n29  19.9    8.0    1973  266   266     4 120\n30  13.0    9.0    1910  350  1868     5  90\n31   6.8   10.0    1962  337   519     3 110\n32  21.7   11.0    1960   27    27     4 175\n33  27.8   12.0    1963  159   159     4 110\n34  26.8   12.0    1960  133   133     4 200\n35  16.6   13.0    1968  146   146     2 190\n36  30.4   15.0    1966  146   398     3 120\n37  11.5   17.0    1920  389  2595     5 100\n38  26.0   18.0    1966   40  3188     2 190\n39  25.7   19.0    1973  266  1302     4 150\n40  12.7   22.0    1918  311  2672     5  90\n41  23.5   26.0    1963  597   597     1 140\n42  24.9   29.0    1965  545   770     3 130\n43  29.0   32.0    1974  208   208     1 190\n44  28.3   34.0    1965   66   345     1 110\n45  28.3   40.0    1962  285   178     2 120\n46  32.0   44.0    1960   93    93     3 190\n47  37.7   48.0    1928  259  1297     3 120\n48  39.6   49.0    1972 1427  1557     1 180\n49  29.6   50.0    1967  398  1461     1 140\n50  31.0   57.0    1963  467   467     1 165\n51  34.4   96.0    1976   39   519     2 175\n52  27.3  108.0    1964  402  4426     1  70\n53  30.5  134.0    1964  467  2213     1 160\n54  33.0  144.0    1940  146   319     1 190\n55  29.5  973.0    1970  337  1323     1 190\n56  30.9 1771.0    1933  332   332     1 260\n\n\n\nsummary(loyn)\n\n\n     ABUND            AREA            YR.ISOL          DIST       \n Min.   : 1.50   Min.   :   0.10   Min.   :1890   Min.   :  26.0  \n 1st Qu.:12.40   1st Qu.:   2.00   1st Qu.:1928   1st Qu.:  93.0  \n Median :21.05   Median :   7.50   Median :1962   Median : 234.0  \n Mean   :19.51   Mean   :  69.27   Mean   :1950   Mean   : 240.4  \n 3rd Qu.:28.30   3rd Qu.:  29.75   3rd Qu.:1966   3rd Qu.: 333.2  \n Max.   :39.60   Max.   :1771.00   Max.   :1976   Max.   :1427.0  \n     LDIST            GRAZE            ALT       \n Min.   :  26.0   Min.   :1.000   Min.   : 60.0  \n 1st Qu.: 158.2   1st Qu.:2.000   1st Qu.:120.0  \n Median : 338.5   Median :3.000   Median :140.0  \n Mean   : 733.3   Mean   :2.982   Mean   :146.2  \n 3rd Qu.: 913.8   3rd Qu.:4.000   3rd Qu.:182.5  \n Max.   :4426.0   Max.   :5.000   Max.   :260.0  \n\n\nlm.1 <- lm (ABUND ~ YR.ISOL + ALT + GRAZE, data=loyn)\nsummary(lm.1)\n\n\n\nCall:\nlm(formula = ABUND ~ YR.ISOL + ALT + GRAZE, data = loyn)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-19.5498  -4.8951   0.6504   4.7798  20.2384 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -73.58185  107.24995  -0.686 0.495712    \nYR.ISOL       0.05143    0.05393   0.954 0.344719    \nALT           0.03285    0.02679   1.226 0.225618    \nGRAZE        -4.01692    0.99881  -4.022 0.000188 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 7.894 on 52 degrees of freedom\nMultiple R-squared:  0.4887,    Adjusted R-squared:  0.4592 \nF-statistic: 16.57 on 3 and 52 DF,  p-value: 1.106e-07\n\n\naov(lm.1)\n\n\nCall:\n   aov(formula = lm.1)\n\nTerms:\n                 YR.ISOL      ALT    GRAZE Residuals\nSum of Squares  1605.835  483.787 1007.904  3240.403\nDeg. of Freedom        1        1        1        52\n\nResidual standard error: 7.894013\nEstimated effects may be unbalanced\n\npar(mfrow=c(2,2))\nplot(lm.1)\n\n\n\ninfluence.measures(lm.1)\n\n\nInfluence measures of\n     lm(formula = ABUND ~ YR.ISOL + ALT + GRAZE, data = loyn) :\n\n      dfb.1_  dfb.YR.I   dfb.ALT  dfb.GRAZ     dffit cov.r   cook.d\n1   0.128900 -0.136701 -2.25e-02  8.68e-02 -0.455383 0.663 4.64e-02\n2  -0.046388  0.041396  1.50e-01 -2.15e-02 -0.222873 1.159 1.26e-02\n3  -0.178685  0.184085 -5.40e-02 -4.08e-02 -0.298379 1.108 2.23e-02\n4   0.054207 -0.053864 -2.43e-02 -4.06e-02 -0.085906 1.099 1.87e-03\n5   0.032249 -0.035235  3.34e-02  6.56e-02  0.138294 1.123 4.85e-03\n6   0.072550 -0.075381  3.68e-02 -3.40e-02 -0.129304 1.072 4.22e-03\n7   0.153153 -0.155477  8.56e-02 -1.78e-01 -0.263831 1.139 1.75e-02\n8  -0.044533  0.039741  1.44e-01 -2.07e-02 -0.213965 1.162 1.16e-02\n9   0.305330 -0.305810  1.16e-02 -2.93e-01 -0.412610 0.935 4.12e-02\n10 -0.134119  0.136978 -1.50e-02 -2.15e-02 -0.217402 1.140 1.19e-02\n11  0.145761 -0.154644  2.14e-01 -2.21e-02  0.300565 1.103 2.26e-02\n12 -0.246939  0.255702 -1.22e-01 -2.33e-02 -0.369735 1.161 3.42e-02\n13  0.071832 -0.068266 -1.34e-01 -3.53e-02 -0.191283 1.110 9.23e-03\n14  0.019281 -0.016626 -3.08e-01  1.90e-01 -0.597735 0.810 8.32e-02\n15  0.000311 -0.000315 -2.26e-05  2.96e-05  0.000496 1.184 6.27e-08\n16 -0.131537  0.136111 -5.26e-02 -3.46e-02 -0.223973 1.146 1.27e-02\n17 -0.098856  0.108184 -1.60e-01  1.44e-02  0.266285 0.984 1.75e-02\n18  0.238014 -0.243468  3.85e-02 -1.36e-01 -0.397451 0.753 3.65e-02\n19 -0.031350  0.029292  5.78e-02  3.66e-02  0.081711 1.121 1.70e-03\n20 -0.024122  0.019709  7.59e-02  5.75e-02 -0.093805 1.170 2.24e-03\n21  0.036050 -0.033748 -7.79e-02 -2.15e-02 -0.102357 1.162 2.66e-03\n22 -0.015768  0.016959  4.26e-03 -6.28e-02 -0.127636 1.116 4.13e-03\n23  0.050368 -0.052333  2.55e-02 -2.36e-02 -0.089769 1.095 2.04e-03\n24 -0.012264  0.008841  5.20e-02  5.07e-02 -0.071851 1.209 1.31e-03\n25  0.145637 -0.146703  2.41e-02 -7.94e-02  0.157322 1.319 6.30e-03\n26 -0.007372  0.007451  1.67e-03  5.11e-03  0.015793 1.106 6.36e-05\n27  0.043873 -0.045585  2.22e-02 -2.05e-02 -0.078194 1.100 1.55e-03\n28 -0.018037  0.016743  2.82e-02  2.63e-02  0.036688 1.224 3.43e-04\n29 -0.131935  0.133012 -2.20e-02  1.11e-01  0.164334 1.152 6.84e-03\n30  0.094249 -0.092478 -8.47e-02  1.81e-02  0.210983 1.127 1.12e-02\n31  0.118899 -0.130120  1.93e-01 -1.73e-02 -0.320276 0.928 2.49e-02\n32 -0.103130  0.098781  9.40e-02  1.33e-01  0.170699 1.126 7.37e-03\n33 -0.284839  0.290760 -1.33e-01  2.50e-01  0.433995 0.919 4.54e-02\n34 -0.213008  0.199453  2.95e-01  3.01e-01  0.408017 1.071 4.12e-02\n35  0.068874 -0.066760 -1.35e-01 -3.57e-03 -0.246916 1.008 1.51e-02\n36 -0.151383  0.159324 -1.23e-01  5.71e-02  0.283014 0.959 1.96e-02\n37  0.022901 -0.022520 -3.21e-02  3.25e-02  0.103312 1.136 2.71e-03\n38 -0.001488  0.001427  3.83e-03 -1.89e-04  0.006929 1.125 1.22e-05\n39 -0.299662  0.296262  7.86e-02  2.86e-01  0.365529 1.060 3.31e-02\n40  0.045779 -0.044212 -7.15e-02  3.70e-02  0.168859 1.126 7.21e-03\n41 -0.043463  0.037744  6.26e-02  1.22e-01 -0.153196 1.126 5.94e-03\n42 -0.067499  0.070133 -3.42e-02  3.16e-02  0.120302 1.078 3.66e-03\n43  0.002552 -0.002850 -1.05e-02  1.52e-02 -0.036428 1.143 3.38e-04\n44  0.011473 -0.009053 -3.51e-02 -3.92e-02  0.052676 1.192 7.07e-04\n45  0.002848  0.003165 -8.61e-02 -6.95e-02  0.137899 1.092 4.81e-03\n46 -0.116776  0.109111  2.15e-01  1.36e-01  0.304366 0.977 2.28e-02\n47  0.445830 -0.431209 -2.69e-01 -3.41e-01  0.629701 0.642 8.76e-02\n48 -0.000133  0.004718  4.46e-02 -1.58e-01  0.302736 1.002 2.26e-02\n49  0.008724 -0.006876 -2.00e-02 -3.60e-02  0.048292 1.150 5.94e-04\n50  0.019369 -0.017688 -5.80e-03 -5.14e-02  0.069197 1.136 1.22e-03\n51 -0.122055  0.122805  7.02e-02  2.13e-02  0.231107 1.022 1.33e-02\n52  0.020580 -0.015671 -8.25e-02 -6.78e-02  0.099679 1.298 2.53e-03\n53  0.014674 -0.013095 -8.87e-03 -4.28e-02  0.057249 1.139 8.35e-04\n54  0.138452 -0.137403  3.82e-02 -1.54e-01  0.204365 1.168 1.06e-02\n55 -0.000650  0.000535 -4.05e-03  6.97e-03 -0.014242 1.144 5.17e-05\n56  0.021139 -0.021938  2.56e-02 -1.62e-02  0.039541 1.363 3.98e-04\n      hat inf\n1  0.0286   *\n2  0.0996    \n3  0.0901    \n4  0.0331    \n5  0.0597    \n6  0.0315    \n7  0.0978    \n8  0.0996    \n9  0.0593    \n10 0.0876    \n11 0.0883    \n12 0.1318    \n13 0.0653    \n14 0.0692    \n15 0.0874    \n16 0.0923    \n17 0.0393    \n18 0.0293   *\n19 0.0460    \n20 0.0829    \n21 0.0786    \n22 0.0531    \n23 0.0315    \n24 0.1091    \n25 0.1876   *\n26 0.0232    \n27 0.0315    \n28 0.1175    \n29 0.0836    \n30 0.0790    \n31 0.0393    \n32 0.0690    \n33 0.0602    \n34 0.1008    \n35 0.0407    \n36 0.0376    \n37 0.0605    \n38 0.0393    \n39 0.0860    \n40 0.0685    \n41 0.0653    \n42 0.0315    \n43 0.0558    \n44 0.0953    \n45 0.0427    \n46 0.0460    \n47 0.0483   *\n48 0.0520    \n49 0.0626    \n50 0.0548    \n51 0.0408    \n52 0.1704   *\n53 0.0549    \n54 0.1011    \n55 0.0555    \n56 0.2077   *\n\n\ncor <- cor(loyn[,2:7])\nprint(cor, digits=2)\n\n\n           AREA YR.ISOL  DIST  LDIST  GRAZE   ALT\nAREA     1.0000 -0.0015  0.11  0.035 -0.310  0.39\nYR.ISOL -0.0015  1.0000  0.11 -0.083 -0.636  0.23\nDIST     0.1083  0.1132  1.00  0.317 -0.256 -0.11\nLDIST    0.0346 -0.0833  0.32  1.000 -0.028 -0.31\nGRAZE   -0.3104 -0.6356 -0.26 -0.028  1.000 -0.41\nALT      0.3878  0.2327 -0.11 -0.306 -0.407  1.00\n\n\ncor[abs(cor)<0.6] <- 0\ncor\n\n\n        AREA    YR.ISOL DIST LDIST      GRAZE ALT\nAREA       1  0.0000000    0     0  0.0000000   0\nYR.ISOL    0  1.0000000    0     0 -0.6355671   0\nDIST       0  0.0000000    1     0  0.0000000   0\nLDIST      0  0.0000000    0     1  0.0000000   0\nGRAZE      0 -0.6355671    0     0  1.0000000   0\nALT        0  0.0000000    0     0  0.0000000   1\n\nprint(cor, digits=3)\n\n\n        AREA YR.ISOL DIST LDIST  GRAZE ALT\nAREA       1   0.000    0     0  0.000   0\nYR.ISOL    0   1.000    0     0 -0.636   0\nDIST       0   0.000    1     0  0.000   0\nLDIST      0   0.000    0     1  0.000   0\nGRAZE      0  -0.636    0     0  1.000   0\nALT        0   0.000    0     0  0.000   1\n\n\nif(!require(car)){install.packages(\"car\")} \nlibrary(car)\n\n\n\nSimulation Overfitting\n\n\ntest <- data.frame(\"x\"=c(1, 2, 3, 4, 5, 6), \"y\"=c(34, 21, 70, 47, 23, 45))\n\npar(mfrow=c(1,1))\nplot(y~x, data = test)\n\nlm.0 <- lm(y~1, data = test)\nlm.1 <- lm(y~x, data = test)\nlm.2 <- lm(y~x+I(x^2), data = test)\nlm.3 <- lm(y~x+I(x^2)+I(x^3), data = test)\nlm.4 <- lm(y~x+I(x^2)+I(x^3)+I(x^4), data = test)\nlm.5 <- lm(y~x+I(x^2)+I(x^3)+I(x^4)+I(x^5), data = test)\nlm.6 <- lm(y~x+I(x^2)+I(x^3)+I(x^4)+I(x^5)+I(x^6), data = test)\nsummary(lm.0)\nsummary(lm.1)\nsummary(lm.2)\nsummary(lm.3)\nsummary(lm.4)\nsummary(lm.5)\n\nxv <- seq(from=0,to=10, by=0.1)\n\nplot(y~x,cex=2, col=\"black\", lwd=3, data = test)\nyv <- predict(lm.1, list(x=xv))\nlines(xv, yv, col=\"red\", lwd=3)\nyv <- predict(lm.2, list(x=xv))\nlines(xv, yv, col=\"blue\", lwd=3)\nyv<-predict(lm.3, list(x=xv))\nlines(xv, yv, col=\"green\", lwd=3)\nyv <- predict(lm.4, list(x=xv))\nlines(xv, yv, col=\"orange\", lwd=3)\nyv <- predict(lm.5, list(x=xv))\nlines(xv, yv, col=\"black\", lwd=3)\n\n\n\nModellvereinfachung (mit Loyn-Datensatz)\n\n\nlm.1 <- lm(ABUND ~ YR.ISOL + ALT + GRAZE, data = loyn)\nsummary(lm.1)\n\n\n\nCall:\nlm(formula = ABUND ~ YR.ISOL + ALT + GRAZE, data = loyn)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-19.5498  -4.8951   0.6504   4.7798  20.2384 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -73.58185  107.24995  -0.686 0.495712    \nYR.ISOL       0.05143    0.05393   0.954 0.344719    \nALT           0.03285    0.02679   1.226 0.225618    \nGRAZE        -4.01692    0.99881  -4.022 0.000188 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 7.894 on 52 degrees of freedom\nMultiple R-squared:  0.4887,    Adjusted R-squared:  0.4592 \nF-statistic: 16.57 on 3 and 52 DF,  p-value: 1.106e-07\n\nlm.2 <- update(lm.1,~.-YR.ISOL)\n\nsummary(lm.2)\n\n\n\nCall:\nlm(formula = ABUND ~ ALT + GRAZE, data = loyn)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-19.1677  -4.8261   0.0266   4.6944  19.1054 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 28.55582    5.43245   5.257 2.67e-06 ***\nALT          0.03191    0.02675   1.193    0.238    \nGRAZE       -4.59679    0.79167  -5.806 3.67e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 7.887 on 53 degrees of freedom\nMultiple R-squared:  0.4798,    Adjusted R-squared:  0.4602 \nF-statistic: 24.44 on 2 and 53 DF,  p-value: 3.011e-08\n\n\nanova(lm.1, lm.2)\n\n\nAnalysis of Variance Table\n\nModel 1: ABUND ~ YR.ISOL + ALT + GRAZE\nModel 2: ABUND ~ ALT + GRAZE\n  Res.Df    RSS Df Sum of Sq      F Pr(>F)\n1     52 3240.4                           \n2     53 3297.1 -1   -56.662 0.9093 0.3447\n\nHierarchical partitioning\n\n\nif(!require(hier.part)){install.packages(\"hier.part\")}\nlibrary(hier.part)\n\nloyn.preds <-with(loyn, data.frame(YR.ISOL, ALT, GRAZE))\nhier.part(loyn$ABUND,loyn.preds, gof=\"Rsqu\")\n\n\n\n$gfs\n[1] 0.0000000 0.2533690 0.1488696 0.4658218 0.3297010 0.4739432\n[7] 0.4797883 0.4887284\n\n$IJ\n                 I          J     Total\nYR.ISOL 0.11892853 0.13444049 0.2533690\nALT     0.06960132 0.07926823 0.1488696\nGRAZE   0.30019854 0.16562324 0.4658218\n\n$I.perc\n        ind.exp.var\nYR.ISOL    24.33428\nALT        14.24131\nGRAZE      61.42441\n\n$params\n$params$full.model\n[1] \"y ~ YR.ISOL + ALT + GRAZE\"\n\n$params$family\n[1] \"gaussian\"\n\n$params$link\n[1] \"default\"\n\n$params$gof\n[1] \"Rsqu\"\n\nPartial regressions\n\n\navPlots(lm.1, ask=F)\n\n\n\n\nMultimodel inference\n\n\nif(!require(MuMIn)){install.packages(\"MuMIn\")}\nlibrary(MuMIn)\n\nglobal.model <- lm(ABUND ~ YR.ISOL + ALT + GRAZE, data = loyn)\noptions(na.action=\"na.fail\")\n\nallmodels <- dredge(global.model)\nallmodels\n\n\nGlobal model call: lm(formula = ABUND ~ YR.ISOL + ALT + GRAZE, data = loyn)\n---\nModel selection table \n     (Int)     ALT    GRA  YR.ISO df   logLik  AICc delta weight\n3   34.370         -4.981          3 -194.315 395.1  0.00  0.407\n4   28.560 0.03191 -4.597          4 -193.573 395.9  0.84  0.267\n7  -62.750         -4.440 0.04898  4 -193.886 396.6  1.46  0.196\n8  -73.580 0.03285 -4.017 0.05143  5 -193.087 397.4  2.28  0.130\n6 -348.500 0.07006        0.18350  4 -200.670 410.1 15.03  0.000\n5 -392.300                0.21120  3 -203.690 413.8 18.75  0.000\n2    5.598 0.09515                 3 -207.358 421.2 26.09  0.000\n1   19.510                         2 -211.871 428.0 32.88  0.000\nModels ranked by AICc(x) \n\nimportance(allmodels)\n\n\nError in formatCands(cand.set): \nFunctions do not support mixture of model classes\n\n\navgmodel <- model.avg(allmodels, subset=TRUE)\nsummary(avgmodel)\n\n\n\nCall:\nmodel.avg(object = allmodels, subset = TRUE)\n\nComponent model call: \nlm(formula = ABUND ~ <8 unique rhs>, data = loyn)\n\nComponent models: \n       df  logLik   AICc delta weight\n2       3 -194.31 395.09  0.00   0.41\n12      4 -193.57 395.93  0.84   0.27\n23      4 -193.89 396.56  1.46   0.20\n123     5 -193.09 397.37  2.28   0.13\n13      4 -200.67 410.13 15.03   0.00\n3       3 -203.69 413.84 18.75   0.00\n1       3 -207.36 421.18 26.09   0.00\n(Null)  2 -211.87 427.97 32.88   0.00\n\nTerm codes: \n    ALT   GRAZE YR.ISOL \n      1       2       3 \n\nModel-averaged coefficients:  \n(full average) \n            Estimate Std. Error Adjusted SE z value Pr(>|z|)    \n(Intercept) -0.29874   77.23966    78.39113   0.004    0.997    \nGRAZE       -4.64605    0.89257     0.91048   5.103    3e-07 ***\nALT          0.01282    0.02311     0.02340   0.548    0.584    \nYR.ISOL      0.01631    0.03883     0.03941   0.414    0.679    \n \n(conditional average) \n            Estimate Std. Error Adjusted SE z value Pr(>|z|)    \n(Intercept) -0.29874   77.23966    78.39113   0.004    0.997    \nGRAZE       -4.64724    0.88957     0.90755   5.121    3e-07 ***\nALT          0.03224    0.02678     0.02741   1.176    0.240    \nYR.ISOL      0.05007    0.05421     0.05548   0.902    0.367    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n",
    "preview": "statistik/Statistik3_Demo_Statistik_3/distill-preview.png",
    "last_modified": "2021-08-18T11:14:00+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik3_solution_stat3/",
    "title": "Musterloesung",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik3",
      "Statistik"
    ],
    "contents": "\n\n\n\n\n\n\n\n\n\n\n\n\nknitr::opts_chunk$set(results = \"hide\", fig.width = 20, fig.height = 12, warning = F, message = F, fig.pos = 'H')\n\n\n\nMusterloesung Aufgabe 3.1: Multiple Regression\nR-Skript als Download\nLösungstext als Download\nÜbungsaufgabe (hier so ausführlich formuliert, wie dies auch in der Klausur der Fall sein wird)\nBereiten Sie den Datensatz Ukraine.xlsx für das Einlesen in R vor und lesen Sie ihn dann ein. Dieser enthält gemittelte Pflanzenartenzahlen (Species.richness) von 199 10 m² grossen Plots (Vegetationsaufnahmen) von Steppenrasen in der Ukraine sowie zahlreiche Umweltvariablen, deren Bedeutung und Einheiten im Kopf der ExcelTabelle angegeben sind.\nErmitteln Sie ein minimal adäquates Modell, das den Artenreichtum in den Plots durch die Umweltvariablen erklärt.\nBitte erklären und begründen Sie die einzelnen Schritte, die Sie unternehmen, um zu diesem Ergebnis zu kommen. Dazu erstellen Sie bitte ein Word-Dokument, in das Sie Schritt für Schritt den verwendeten R-Code, die dazu gehörigen Ausgaben von R, Ihre Interpretation derselben und die sich ergebenden Schlussfolgerungen für das weitere Vorgehen dokumentieren.\nDieser Ablauf sollte insbesondere beinhalten:\nÜberprüfen der Datenstruktur nach dem Einlesen: welches sind die abhängige(n) und welches die unabängige(n) Variablen, sind alle Variablen für die Analyse geeignet?\nExplorative Datenanalyse, um zu sehen, ob die abhängige Variable in der vorliegenden Form für die Analyse geeignet ist\nDefinition eines globalen Modelles und dessen Reduktion zu einem minimal adäquaten Modell\nDurchführen der Modelldiagnostik für dieses\nGenerieren aller Zahlen, Statistiken und Tabellen, die für eine wiss. Ergebnisdarstellung benötigt werden\nFormulieren Sie abschliessend einen Methoden- und Ergebnisteil (ggf. incl. adäquaten Abbildungen) zu dieser Untersuchung in der Form einer wissenschaftlichen Arbeit (ausformulierte schriftliche Zusammenfassung, mit je einem Absatz von ca. 60-100 Worten, resp. 3-8 Sätzen für den Methoden- und Ergebnisteil). D. h. alle wichtigen Informationen sollten enthalten sein, unnötige Redundanz dagegen vermieden werden.\nAbzugeben sind am Ende (a) Ein lauffähiges R-Skript; (b) begründeter Lösungsweg (Kombination aus R-Code, R Output und dessen Interpretation) und (c) ausformulierter Methoden- und Ergebnisteil (für eine wiss. Arbeit).\n\nLoesung Übung 3.1: Multiple Regression\nSchon vor dem Einlesen kürzt man am besten bereits in Excel die Variablennamen so ab, dass sie noch eindeutig, aber nicht unnötig lang sind, etwa indem man die Einheiten wegstreicht\n\n\nlibrary(readr)\n# Aus der Excel-Tabelle wurde das relevante Arbeitsblatt als csv gespeichert\nukraine <-read_delim(\"Ukraine_bearbeitet.csv\", delim=\";\")\nattach(ukraine)\n\nukraine\n\n# ukraine <- read.delim(\"Ukraine_bearbeitet.csv\",sep=\";\")\n\nstr(ukraine)\nsummary(ukraine)\n\n\n\nMan erkennt, dass alle Spalten bis auf die erste mit der Plot ID numerisch (num oder int) und dass die abhängige Variable in Spalte 2 sowie die Prediktorvariablen in den Spalten 3 bis 23 stehen.\n\n\n#Explorative Datenanalyse der abhängigen Variablen\nboxplot(ukraine$`Species richness`)\n\n\n\nDer Boxplot sieht sehr gut symmetrisch aus. Insofern gibt es keinen Anlass über eine Transformation nachzudenken. (Da es sich bei Artenzahlen um Zähldaten handelt, müsste man theoretisch ein glm mit Poisson-Verteilung rechnen; bei einem Mittelwert, der hinreichend von Null verschieden ist (hier: ca. 40), ist eine Poisson-Verteilung aber praktisch nicht von einer Normalverteilung zu unterscheiden und wir können uns den Aufwand auch sparen).\n\n\ncor <- cor(ukraine[,3:23])\ncor\ncor[abs(cor)<0.7] <- 0\ncor\n\n\n\nDie Korrelationsanalyse dient dazu, zu entscheiden, ob die Prädiktorvariablen hinreichend voneinander unabhängig sind, um alle in das globale Modell hinein zu nehmen. Bei Pearson’s Korrelationskoeffizienten r, die betragsmässig grösser als 0.7 sind, würde es problematisch. Alternativ hätten wir auch den VIF (Variance Inflation Factor) als Kriterium für den möglichen Ausschluss von Variablen aus dem globalen Modell nehmen können. Diese initiale Korrelationsanalyse zeigt uns aber, dass unsere Daten noch ein anderes Problem haben: für die drei Korngrössenfraktionen des Bodens (Sand, Silt, Clay) stehen lauter NA’s. Um herauszufinden, was das Problem ist, geben wir ein:\n\n\nsummary(ukraine$Sand)\nukraine[!complete.cases(ukraine), ] # Zeigt zeilen mit NAs ein\n\n\n\nDa gibt es offensichtlich je ein NA in jeder dieser Zeilen. Jetzt können wir entscheiden, entweder auf die drei Variablen oder auf die eine Beobachtung zu verzichten. Da wir eh schon eher mehr unabhängige Variablen haben als wir händeln können, entscheide ich pragmatisch für ersteres. Wir rechnen die Korrelation also noch einmal ohne diese drei Spalten (es sind die Nummern 12:14, wie wir aus der anfänglichen Variablenbetrachtung oben wissen).\n\n\ncor <- cor(ukraine[,c(3:11,15:23)])\ncor[abs(cor)<0.7] <- 0\ncor\n\n\n\nWenn man auf cor nun doppel-clickt und es in einem separaten Fenster öffnet, sieht man, wo es problematische Korrelationen zwischen Variablenpaaren gibt. Es sind dies Altitude vs. Temperature und N.total vs. C.org. Wir müssen aus jedem dieser Paare jetzt eine Variable rauswerfen, am besten jene, die weniger gut interpretierbar ist. Ich entscheide mich dafür Temperature statt Altitude (weil das der direktere ökologische Wirkfaktor ist) und C.org statt N.total zu behalten (weil es in der Literatur mehr Daten zum Humusgehalt als zum N-Gehalt gibt, damit eine bessere Vergleichbarkeit erzielt wird). Die Aussagen, die wir für die beibehaltene Variable erzielen, stehen aber +/- auch für die entfernte. Das Problem ist aber, dass wir immer noch 16 Variablen haben, was einen sehr leistungsfähigen Rechner oder sehr lange Rechenzeit erfordern würde. Wir sollten also unter 15 Variablen kommen. Wir könnten uns jetzt überlegen, welche uns ökologisch am wichtigsten sind, oder ein noch strengeres Kriterium bei r verwenden, etwa 0.6\n\n\ncor <- cor(ukraine[,c(3:11,15:23)])\ncor[abs(cor)<0.6] <- 0\ncor\n\n\n\nEntsprechend „werfen“ wir auch noch die folgenden Variablen „raus“: Temperature.range (positiv mit Temperature), Precipitation (negativ mit Temperature) sowie Conductivity (positiv mit pH).\nNun können wir das globale Modell definieren, indem wir alle verbleibenden Variablen aufnehmen, das sind 13. (Wenn das nicht eh schon so viele wären, dass es uns an die Grenze der Rechenleistung bringt, hätten wir auch noch darüber nachdenken können, einzelne quadratische Terme oder Interaktionsterme zu berücksichtigen).\n\n\nglobal.model <- lm(`Species richness` ~ Inclination+`Heat index`+`Microrelief`+`Grazing intensity`+\n                    `Litter`+`Stones and rocks`+ Gravel+`Fine soil`+pH+CaCO3+`C org`+`CN ratio`+Temperature, data = ukraine)\n\n\n\nNun gibt es im Prinzip zwei Möglichkeiten, vom globalen (vollen) Modell zu einem minimal adäquaten Modell zu kommen. (1) Der Ansatz der „frequentist statistic“, in dem man aus dem vollen Modell so lange schrittweise Variablen entfernt, bis nur noch signifikante Variablen verbleiben. (2) Den informationstheoretischen Ansatz, bei dem alle denkbaren Modelle berechnet und verglichen werden (also alle möglichen Kombinationen von 13,12,…, 1, 0 Parametern). Diese Lösung stelle ich im Folgenden vor:\n\n\n#Multimodel inference\nif(!require(MuMIn)){install.packages(\"MuMIn\")}\nlibrary(MuMIn)\n\noptions(na.action=\"na.fail\")\nallmodels<-dredge(global.model)\nallmodels\n\n\n\nJetzt bekommen wir die besten der insgesamt 8192 möglichen Modelle gelistet mit ihren Parameterschätzungen und ihrem AICc.\nDas beste Modell umfasst 5 Parameter (CaCO3, CN.ratio, Grazing.intensity. Heat.index, Litter). Allerdings ist das nächstbeste Modell (mit 6 Parametern) nur wenig schlechter (delta AICc = 0.71), was sich in fast gleichen (und zudem sehr niedrigen) Akaike weights bemerkbar macht. Nach dem Verständnis des Information theoretician approach, sollte man in einer solchen Situation nicht das eine „beste“ Modell benennen, sondern eine Aussage über die Gruppe der insgesamt brauchbaren Modelle treffen. Hierzu kann man (a) Importance der Parameter über alle Modelle hinweg berechnen (= Summe der Akaike weights aller Modelle, die den betreffenden Parameter enthalten) und/oder (b) ein nach Akaike weights gemitteltes Modell berechnen.\n\n\n#Importance values der Variablen\nimportance(allmodels)\n\n\nError in formatCands(cand.set): \nFunctions do not support mixture of model classes\n\nDemnach ist Heat.index die wichtigste Variable (in 100% aller relevanten Modelle), während ferner Litter, CaCO3, CN.ratio und Grazing.intensity in mehr als 50% der relevanten Modelle enthalten sind.\n\n\n#Modelaveraging (Achtung: dauert mit 13 Variablen einige Minuten)\nsummary(model.avg(allmodels, rank=\"AICc\"), subset=TRUE)\n\n\n\nAus dem gemittelten Modell können wir die Richtung der Beziehung (positiv oder negativ) und ggf. die Effektgrössen (wie verändert sich die Artenzahl, wenn die Prädiktorvariable um eine Einheit zunimmt?) ermitteln.\n\n\n#Modelldiagnostik nicht vergessen\npar(mfrow=c(2,2))\nplot(global.model)\n\n\n\nplot(lm(`Species richness`~`Heat index`+Litter+CaCO3+`CN ratio`+ `Grazing intensity`))\n\n\n\nsummary(global.model)\n\n\n\nWie immer kommt am Ende die Modelldiagnostik. Wir können uns entweder das globale Modell oder das Modell mit den 5 Variablen mit importance > 50% anschauen. Das Bild sieht fast identisch aus und zeigt keinerlei problematische Abweichungen, d. h. links oben weder ein Keil, noch eine Banane, rechts oben eine nahezu perfekte Gerade.\n\n\n\n",
    "preview": "statistik/Statistik3_solution_stat3/distill-preview.png",
    "last_modified": "2021-08-18T11:14:23+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik3_Uebungen_3/",
    "title": "Uebung",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik3",
      "Statistik"
    ],
    "contents": "\n\n\n\nUebung 3\nAufgabe 3.1: Multiple Regression\nDatensatz Ukraine_bearbeitet.xlsx\nDatensatz Ukraine_bearbeitet.csv\nArtenzahlen von Vegetationsaufnahmen in der Ukraine vs. diverse Umweltparameter (farbig gruppiert nach Kategorien, aus Kuzemko et al. 2016)\nBestimmt ein minimal adäquates Modell für die Erklärung der Artenzahlen mit allen notwendigen Arbeitsschritten\nWahlweise könnt ihr mit AICc und dredge oder mit p-Werten und schrittweiser Vereinfachung eines globalen Models arbeiten\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:14:26+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik4_Abstract/",
    "title": "Statistik",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik4",
      "Statistik"
    ],
    "contents": "\n\n\n\nStatistik 4 (03.11.2020)\nHeute geht es hauptsächlich um generalized linear models (GLMs), die einige wesentliche Limitierungen von linearen Modellen überwinden. Indem sie Fehler- und Varianzstrukturen explizit modellieren, ist man nicht mehr an Normalverteilung der Residuen und Varianzhomogenität gebunden. Bei generalized linear regressions muss man sich zwischen verschiedenen Verteilungen und link-Strukturen entscheiden. Spezifisch werden wir uns die Poisson-Regressionen für Zähldaten und die logistische Regression für ja/nein-Daten anschauen. Danach folgt ein Einstieg in nicht-lineare Regressionen, die es erlauben, etwa Potenzgesetze oder Sättigungsfunktionen direkt zu modellieren. Zum Abschluss gibt es einen Ausblick auf Glättungsverfahren (LOWESS) und general additive models (GAMs).\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:14:28+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik4_assigment_stat4/",
    "title": "Uebungen",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik4",
      "Statistik"
    ],
    "contents": "\n\n\n\nUebungen 4\nUebung 4.1: Nicht-lineare Regression\nDatensatz Curonian_Spit.xlsx\nDieser enthält gemittelte Pflanzenartenzahlen (Species.richness) von geschachtelten Plots (Vegetationsaufnahmen) der Pflanzengesellschaft LolioCynosuretum im Nationalpark Kurische Nehrung (Russland) auf Flächengrössen (Area) von 0.0001 bis 900 m².\nErmittelt den funktionellen Zusammenhang (das beste Modell), der die Zunahme der Artenzahl mit der Flächengrösse am besten beschreibt.Berücksichtigt dabei mindestens die Potenzfunktion (power function, die logarithmische Funktion (logarithmic function,und eine Funktion mit Sättigung (saturation, asymptote) eurer Wahl.\nUebung 4.2N: Logistische Regression (NatWis)\nDatensatz polis.csv\nDer Datensatz polis.csv beschreibt für 19 Inseln im Golf von Kalifornien, ob Eidechsen der Gattung Uta vorkommen (presence/absence: PA) in Abhängigkeit von der Form der Inseln (Verhältnis Umfang zu Fläche: RATIO).\nBitte prüft mit einer logistischen Regression, ob und ggf. wie die Inselform die Präsenz der Eidechsen beinflusst\nUebung 4.2S: Multiple logistische Regression (SozWis)\nFührt mit dem Datensatz der Gästebefragung eine logistische Regression durch. Kann der Mensabesuch druch die sozioökonomischen Variablen (Alter, Geschlecht, Hochschulzugehörigkeit), wahrgenommener Fleischkonsum und Einstellung zu ?? vorhergesagt werden?\nHinweise:\nDas Item tho_2 (“Ich mache mir allgemein Gedanken über die Folgen meiner Ernährungsgewohnheiten für die Umwelt.”) müsst ihr in einem ersten Schritt zu einer Dummy-Variable umcodieren: die Antwortkategorien «stimme eher zu» (=3) und «stimme zu» (=4) müsst ihr eine 1 zuweisen, den anderen zwei Kategorien eine 0. Hinweis dafür könnt ihr die Funktion dpylr::case_when() oder dpylr::if_else() verwenden.\nFehlende Werten könnt ihr weglassen (z.B. dpylr::drop_na())\nDefiniert das Modell und wendet es auf den Datensatz an\nBerechnet eine Vorhersage des Modells mit predict()\nEruiert den Modellfit und die Modellgenauigkeit\nFür Motivierte: Berechnet eine Konfusionsmatrix und zieht euer Fazit daraus\nStellt eure Ergebnisse angemessen dar (Text und/oder Tabelle)\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:14:31+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik4_Demo_Statistik_4/",
    "title": "Demo",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik4",
      "Statistik"
    ],
    "contents": "\n\n\n\nDemo: Statistik 4\nDemoscript als Download\nvon LMs zu GLMs\n\n\ntemp <- c(10,12,16,20,24,25,30,33,37)\nbesucher <- c(40,12,50,500,400,900,1500,900,2000)\nstrand <- data.frame(\"Temperatur\"=temp, \"Besucher\"=besucher)\n\nplot(besucher~temp, data = strand)\n\n\n\nlm.strand <- lm(Besucher~Temperatur, data = strand)\nsummary(lm.strand)\n\n\n\nCall:\nlm(formula = Besucher ~ Temperatur, data = strand)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-476.41 -176.89   55.59  218.82  353.11 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  -855.01     290.54  -2.943 0.021625 *  \nTemperatur     67.62      11.80   5.732 0.000712 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 311.7 on 7 degrees of freedom\nMultiple R-squared:  0.8244,    Adjusted R-squared:  0.7993 \nF-statistic: 32.86 on 1 and 7 DF,  p-value: 0.0007115\n\npar(mfrow=c(2,2))\nplot(lm.strand)\n\n\n\npar(mfrow=c(1,1))\nxv <- rep(0:40,by=.1)\nyv <- predict(lm.strand, list(Temperatur=xv), data = strand)\nplot(strand$Temperatur, strand$Besucher, xlim=c(0,40))\nlines(xv, yv, lwd=3, col=\"blue\")\n\n\n\nglm.gaussian <- glm(Besucher~Temperatur, family = gaussian, data = strand)\nglm.poisson <- glm(Besucher~Temperatur, family = poisson, data = strand)\n\nsummary(glm.gaussian)\n\n\n\nCall:\nglm(formula = Besucher ~ Temperatur, family = gaussian, data = strand)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-476.41  -176.89    55.59   218.82   353.11  \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  -855.01     290.54  -2.943 0.021625 *  \nTemperatur     67.62      11.80   5.732 0.000712 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for gaussian family taken to be 97138.03)\n\n    Null deviance: 3871444  on 8  degrees of freedom\nResidual deviance:  679966  on 7  degrees of freedom\nAIC: 132.63\n\nNumber of Fisher Scoring iterations: 2\n\nsummary(glm.poisson)\n\n\n\nCall:\nglm(formula = Besucher ~ Temperatur, family = poisson, data = strand)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-13.577  -12.787   -4.491    9.515   15.488  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) 3.500301   0.056920   61.49   <2e-16 ***\nTemperatur  0.112817   0.001821   61.97   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 6011.8  on 8  degrees of freedom\nResidual deviance: 1113.7  on 7  degrees of freedom\nAIC: 1185.1\n\nNumber of Fisher Scoring iterations: 5\n\n#Rücktranformation der Werte auf die orginale Skale (Hier Exponentialfunktion da family=possion als Link-Funktion den natürlichen Logarithmus (log) verwendet)\n#Besucher = exp(3.50 + 0.11 Temperatur/°C)\nexp(3.500301) #Anzahl besucher bei 0°C\n\n\n[1] 33.12542\n\nexp(3.500301 + 30*0.112817) #Anzahl besucher bei 30°C\n\n\n[1] 977.3169\n\n# Test Overdispersion\nif(!require(AER)){install.packages(\"AER\")}\nlibrary(AER)\ndispersiontest(glm.poisson)\n\n\n\n    Overdispersion test\n\ndata:  glm.poisson\nz = 3.8576, p-value = 5.726e-05\nalternative hypothesis: true dispersion is greater than 1\nsample estimates:\ndispersion \n  116.5467 \n\nglm.quasi <- glm(Besucher~Temperatur, family = quasipoisson, data = strand)\nsummary(glm.quasi)\n\n\n\nCall:\nglm(formula = Besucher ~ Temperatur, family = quasipoisson, data = strand)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-13.577  -12.787   -4.491    9.515   15.488  \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)  3.50030    0.69639   5.026  0.00152 **\nTemperatur   0.11282    0.02227   5.065  0.00146 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for quasipoisson family taken to be 149.6826)\n\n    Null deviance: 6011.8  on 8  degrees of freedom\nResidual deviance: 1113.7  on 7  degrees of freedom\nAIC: NA\n\nNumber of Fisher Scoring iterations: 5\n\npar(mfrow=c(2,2))\nplot(glm.gaussian)\n\n\n\nplot(glm.poisson)\n\n\n\nplot(glm.quasi)\n\n\n\npar(mfrow=c(1,1))\nplot(strand$Temperatur, strand$Besucher, xlim=c(0,40))\nxv <- rep(0:40, by=.1)\n\nyv <- predict(lm.strand, list(Temperatur=xv))\nlines(xv, yv, lwd=3, col=\"blue\")\n\nyv2 <- predict(glm.poisson, list(Temperatur=xv))\nlines(xv, exp(yv2), lwd=3, col=\"red\")\n\nyv3 <- predict(glm.quasi, list(Temperatur=xv))\nlines(xv, exp(yv3), lwd=3, col=\"green\")\n\n\n\n\nLogistische Regression\n\n\nbathing <- data.frame(\"temperature\"=c(1, 2, 5, 9, 14, 14, 15, 19, 22, 24, 25, 26, 27, 28, 29),\n                    \"bathing\"=c(0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1))\nplot(bathing~temperature, data = bathing)\n\n\n\nglm.1<-glm(bathing~temperature, family = \"binomial\", data = bathing)\nsummary(glm.1)\n\n\n\nCall:\nglm(formula = bathing ~ temperature, family = \"binomial\", data = bathing)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.7408  -0.4723  -0.1057   0.5123   1.8615  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)  \n(Intercept)  -5.4652     2.8501  -1.918   0.0552 .\ntemperature   0.2805     0.1350   2.077   0.0378 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 20.728  on 14  degrees of freedom\nResidual deviance: 10.829  on 13  degrees of freedom\nAIC: 14.829\n\nNumber of Fisher Scoring iterations: 6\n\n#Modeldiagnostik (wenn nicht signifikant, dann OK)\n1 - pchisq (glm.1$deviance,glm.1$df.resid)\n\n\n[1] 0.6251679\n\n#Modellgüte (pseudo-R²)\n1 - (glm.1$dev / glm.1$null)\n\n\n[1] 0.4775749\n\n#Steilheit der Beziehung (relative Änderung der odds bei x + 1 vs. x)\nexp(glm.1$coefficients[2])\n\n\ntemperature \n   1.323807 \n\n#LD50 (also hier: Temperatur, bei der 50% der Touristen baden)\n-glm.1$coefficients[1]/glm.1$coefficients[2]\n\n\n(Intercept) \n   19.48311 \n\n#Vorhersagen\npredicted <- predict(glm.1, type=\"response\")\n\n#Konfusionsmatrix\nkm <- table(bathing$bathing, predicted > 0.5)\nkm\n\n\n   \n    FALSE TRUE\n  0     7    1\n  1     1    6\n\n#Missklassifizierungsrate\n1-sum(diag(km)/sum(km))\n\n\n[1] 0.1333333\n\n#Plotting\nxs <- seq(0,30,l=1000)\nmodel.predict <- predict(glm.1,type=\"response\", se=T, newdata=data.frame(temperature=xs))\nplot(bathing~temperature,data=bathing, xlab=\"Temperature (°C)\", ylab=\"% Bathing\", pch=16, col=\"red\")\npoints(model.predict$fit ~ xs, type=\"l\")\nlines(model.predict$fit+model.predict$se.fit ~ xs, type=\"l\", lty=2)\nlines(model.predict$fit-model.predict$se.fit ~ xs, type=\"l\", lty=2)\n\n\n\n\nNicht-lineare Regression \n\n\nif(!require(AICcmodavg)){install.packages(\"AICcmodavg\")}\nif(!require(nlstools)){install.packages(\"nlstools\")}\nlibrary(AICcmodavg)\nlibrary(nlstools)\n\nloyn <- read.delim(\"loyn.csv\", sep = \",\") # Achtung Verzeichnis muss dort gesetzt sein wo Daten sind\n\n#Selbstdefinierte Funktion, hier Potenzfunktion\npower.model <- nls(ABUND~c*AREA^z, start=(list(c=1,z=0)), data = loyn)\nsummary(power.model)\n\n\n\nFormula: ABUND ~ c * AREA^z\n\nParameters:\n  Estimate Std. Error t value Pr(>|t|)    \nc 13.39418    1.30721  10.246 2.87e-14 ***\nz  0.16010    0.02438   6.566 2.09e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 7.995 on 54 degrees of freedom\n\nNumber of iterations to convergence: 12 \nAchieved convergence tolerance: 7.122e-06\n\nAICc(power.model)\n\n\n[1] 396.1723\n\n#Modeldiagnostik (in nlstools)\nplot(nlsResiduals(power.model))\n\n\n\n#Vordefinierte \"Selbststartfunktionen\"#\n?selfStart\nlogistic.model <- nls(ABUND~SSlogis(AREA, Asym, xmid, scal), data = loyn)\nsummary(logistic.model)\n\n\n\nFormula: ABUND ~ SSlogis(AREA, Asym, xmid, scal)\n\nParameters:\n     Estimate Std. Error t value Pr(>|t|)    \nAsym   31.306      2.207  14.182  < 2e-16 ***\nxmid    6.501      2.278   2.854  0.00614 ** \nscal    9.880      3.152   3.135  0.00280 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 7.274 on 53 degrees of freedom\n\nNumber of iterations to convergence: 8 \nAchieved convergence tolerance: 4.371e-06\n\nAICc(logistic.model)\n\n\n[1] 386.8643\n\n#Modeldiagnostik (in nlstools)\nplot(nlsResiduals(logistic.model))\n\n\n\n#Visualisierung\nplot(ABUND~AREA, data = loyn)\npar(mfrow=c(1,1))\nxv <- seq(0,2000,0.01)\n\n# 1. Potenzfunktion\nyv1 <- predict(power.model, list(AREA=xv))\nlines(xv, yv1, col=\"green\")\n\n# 2. Logistische Funktion\nyv2 <- predict(logistic.model, list(AREA=xv))\nlines(xv, yv2, col=\"blue\")\n\n\n\n#Visualisierung II\nplot(ABUND~log10(AREA), data=loyn)\npar(mfrow=c(1,1))\n\n# 1. Potenzfunktion\nyv1 <- predict(power.model, list(AREA=xv))\nlines(log10(xv), yv1, col=\"green\")\n\n# 2. Logistische Funktion\nyv2 <- predict(logistic.model, list(AREA=xv))\nlines(log10(xv), yv2, col=\"blue\")\n\n\n\n#Model seletkion zwischen den nicht-lineraen Modelen\ncand.models<-list()\ncand.models[[1]] <- power.model\ncand.models[[2]] <- logistic.model\n\nModnames <- c(\"Power\", \"Logistic\")\n\naictab(cand.set = cand.models, modnames = Modnames)\n\n\n\nModel selection based on AICc:\n\n         K   AICc Delta_AICc AICcWt Cum.Wt      LL\nLogistic 4 386.86       0.00   0.99   0.99 -189.04\nPower    3 396.17       9.31   0.01   1.00 -194.86\n\nSmoother\n\n\nloyn$log_AREA<-log10(loyn$AREA)       \nplot(ABUND~log_AREA, data = loyn)\nlines(lowess(loyn$log_AREA, loyn$ABUND, f=0.25), lwd=2, col=\"red\")\nlines(lowess(loyn$log_AREA, loyn$ABUND, f=0.5), lwd=2, col=\"blue\")\nlines(lowess(loyn$log_AREA, loyn$ABUND, f=1), lwd=2, col=\"green\")\n\n\n\n\nGAMs\n\n\nif(!require(mgcv)){install.packages(\"mgcv\")}\nlibrary(mgcv)\n\ngam.1 <- gam(ABUND~s(log_AREA), data=loyn)\ngam.1\n\n\n\nFamily: gaussian \nLink function: identity \n\nFormula:\nABUND ~ s(log_AREA)\n\nEstimated degrees of freedom:\n2.88  total = 3.88 \n\nGCV score: 52.145     \n\nsummary(gam.1)\n\n\n\nFamily: gaussian \nLink function: identity \n\nFormula:\nABUND ~ s(log_AREA)\n\nParametric coefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  19.5143     0.9309   20.96   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n              edf Ref.df     F p-value    \ns(log_AREA) 2.884  3.628 21.14  <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =  0.579   Deviance explained = 60.1%\nGCV = 52.145  Scale est. = 48.529    n = 56\n\nplot(loyn$log_AREA, loyn$ABUND, pch=16)\nxv <- seq(-1,4, by=0.1)\nyv <- predict(gam.1, list(log_AREA=xv))\nlines(xv, yv, lwd=2, col=\"red\")\n\n\n\nAICc(gam.1)\n\n\n[1] 383.2109\n\nsummary(gam.1)\n\n\n\nFamily: gaussian \nLink function: identity \n\nFormula:\nABUND ~ s(log_AREA)\n\nParametric coefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  19.5143     0.9309   20.96   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n              edf Ref.df     F p-value    \ns(log_AREA) 2.884  3.628 21.14  <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =  0.579   Deviance explained = 60.1%\nGCV = 52.145  Scale est. = 48.529    n = 56\n\n\n\n\n",
    "preview": "statistik/Statistik4_Demo_Statistik_4/distill-preview.png",
    "last_modified": "2021-08-18T11:14:44+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik4_solution_stat4/",
    "title": "Musterloesung",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik4",
      "Statistik"
    ],
    "contents": "\n\n\n\nMusterloesung Aufgabe 4.2S: multiple logistische Regression\n\nLese-Empfehlung Kapitel 6 von Manny Gimond\n\n\nLese-Empfehlung Kapitel 4 von Gareth (2016)\n\n\nDownload R-Skript\n\n\nDownload PDF\n\nkommentierter Lösungsweg\n\nError in open.connection(structure(4L, class = c(\"curl\", \"connection\"), conn_id = <pointer: 0x14852>), : Could not resolve host: zenodo.2019_ZHAW_vonRickenbach_cleaned_recorded_survey_dataset_NOVANIMAL_anonym.csv\nError in glimpse(nova_survey): object 'nova_survey' not found\n\n\n\n# Genereiert eine Dummyvariable: Fleisch 1, kein Fleisch 0\ndf <- nova_survey %>%  # kopiert originaler Datensatz\n  rename(umwelteinstellung = tho_2) %>% # änderung name der variable\n  mutate(umwelteinstellung = case_when(umwelteinstellung == 4 ~ 1,\n                                       umwelteinstellung == 3 ~ 1,\n                                       umwelteinstellung == 2 ~ 0, \n                                       umwelteinstellung == 1 ~ 0)) %>% \n  # lasse die kleine Gruppe mit x weg\n  dplyr::filter(!str_detect(string = \"x\", gender)) %>% \n  # lasse die kleine Gruppe \"andere\" weg\n  dplyr::filter(!str_detect(string = \"Andere\", member)) %>%  \n  # wähle nur die relevanten variablen aus\n  dplyr::select(mensa, age_groups, gender, member, umwelteinstellung, meat) \n\n\nError in rename(., umwelteinstellung = tho_2): object 'nova_survey' not found\n\n# Schaut euch die Missings an in der Kriteriumsvariable \"mensa\"\nsum(is.na(df$mensa))\n\n\nError in df$mensa: object of type 'closure' is not subsettable\n\n# schaut euch die Missings an in den Prädiktorvariablen \"Alter\", \"Geschlecht\", \"Hochschulzugehörigkeit\", \"umwelteinstellung\"\nAmelia::missmap(df) \n\n\nError in loadNamespace(x): there is no package called 'Amelia'\n\n# vieles deutet darauf hin, dass die missings (fehlende Werte) \n# zufällig zustande gekommen sind (sog. MCAR); für mehr Informationen: https://uvastatlab.github.io/2019/05/01/getting-started-with-multiple-imputation-in-r/\n\n# bester Weg wäre, die wenigen fehlenden Werte zu imputieren; \n# einfachheitshalber löschen wir sie aber :)\ndf %<>%\n  drop_na()\n\n\nError in UseMethod(\"drop_na\"): no applicable method for 'drop_na' applied to an object of class \"function\"\n\n#  sieht euch die Verteilung zwischen Mensagänger und Selbstverpfleger an\n# sind nicht gleichmässig verteilt, bei der Vorhersage müssen wir das berücksichtigen\ntable(df$mensa) \n\n\nError in df$mensa: object of type 'closure' is not subsettable\n\ndf %>% count(mensa) # alternativ\n\n\nError in UseMethod(\"count\"): no applicable method for 'count' applied to an object of class \"function\"\n\n# definiert das logistische Modell und wendet es auf den Datensatz an\n\nmod0 <-glm(mensa ~ gender + member + age_groups + meat + umwelteinstellung, \n           data = df, binomial(\"logit\"))\n\n\nError in model.frame.default(formula = mensa ~ gender + member + age_groups + : 'data' must be a data.frame, environment, or list\n\nsummary.lm(mod0) # Umwelteinstellung scheint keinen Einfluss auf die \n\n\nError in summary.lm(mod0): object 'mod0' not found\n\n# Verpflegung zu haben, gegeben die Daten\n\n# neues Modell ohne Umwelteinstellung\nmod1 <- update(mod0, ~. -umwelteinstellung)\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'update': object 'mod0' not found\n\nsummary.lm(mod1)\n\n\nError in summary.lm(mod1): object 'mod1' not found\n\n# Modeldiagnostik (wenn nicht signifikant, dann OK)\n1 - pchisq(mod1$deviance, mod1$df.resid) # Ok\n\n\nError in pchisq(mod1$deviance, mod1$df.resid): object 'mod1' not found\n\n#Modellgüte (pseudo-R²)\n1 - (mod1$dev / mod1$null) # eher kleines pseudo-R2\n\n\nError in eval(expr, envir, enclos): object 'mod1' not found\n\n# Konfusionsmatrix vom  Datensatz\n# Model Vorhersage\n# hier ein anderes Beispiel: \npredicted <- predict(mod1, df, type = \"response\")\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'predict': object 'mod1' not found\n\n# erzeugt eine Tabelle mit den beobachteten\n# Mensagänger/Selbstverpfleger und den Vorhersagen des Modells\nkm <- table(predicted > 0.5, df$mensa) \n\n\nError in table(predicted > 0.5, df$mensa): object 'predicted' not found\n\n# alles was höher ist als 50% ist \n# kommt in die Kategorie Mensagänger\n\n# anpassung der namen\ndimnames(km) <- list(\n  c(\"Modell Selbst\", \"Modell Mensa\"),\n  c(\"Daten Selbst\", \"Daten Mensa\"))\n\n\nError in dimnames(km) <- list(c(\"Modell Selbst\", \"Modell Mensa\"), c(\"Daten Selbst\", : object 'km' not found\n\nkm\n\n\nError in eval(expr, envir, enclos): object 'km' not found\n\n#############\n### reminder: https://towardsdatascience.com/understanding-confusion-matrix-a9ad42dcfd62\n#############\n\n#TP = true positive: you predicted positive and it’s true; hier vorhersage \n# mensagänger stimmt also (727)\n\n#TN = true negative: you predicted negative and it’s true, hier vorhersage der \n# selbstverpfleger stimmt (87)\n\n#FP = false positive (fehler 1. art, auch spezifizität genannt) you predicted \n# and it’s false. hier modell sagt mensagänger vorher \n# (obwohl in realität selbstverpfleger) (195)\n\n#FN = false negative (fehler 2. art, auch sensitivität genannt), \n# you predicted negative and it’s false. hier modell sagt selbtverpfleger vorher \n# (obwohl in realität mensagänger) (59)\n\n\n# es scheint, dass das Modell häufig einen alpha Fehler zu machen, d.h. es \n# das Modell weist keine hohe Spezifizität auf: konkret werden viele Mensagänger als \n# Selbstverpfleger vorhergesagt resp. klassifiziert. Dafür gibt es mehere Gründe: \n\n#1) die Kriteriumsvariable ist sehr ungleich verteilt, d.h. es gibt weniger\n# Selbstverpfleger als Mensgänger im Datensatz \n \n#2) nicht adäquates Modell z.B. link mit probit zeigt besserer fit\n\n#3) Overfitting: wurde hier nicht berücksichtigt, in einem Paper/Arbeit \n# müsste noch einen Validierungstest gemacht werden z.B. test-train \n# Cross-Validation oder k fold Cross-Validation \n\n# kalkuliert die Missklassifizierungsrate \nmf <- 1-sum(diag(km)/sum(km)) # ist mit knapp 23 %  eher hoch\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'diag': object 'km' not found\n\nmf\n\n\nError in eval(expr, envir, enclos): object 'mf' not found\n\n# kleiner exkurs: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2636062/\n# col wise proportion, da diese die \"realität\" ist\nkm_prop <- prop.table(km,2)\n\n\nError in sweep(x, margin, marginSums(x, margin), \"/\", check.margin = FALSE): object 'km' not found\n\n# specificity = a / (a+c) => ability of a test to correctly \n# classify an individual as disease-free is called the test′s specificity\nspec = km_prop[1] / (km_prop[1] + km_prop[2])\n\n\nError in eval(expr, envir, enclos): object 'km_prop' not found\n\nspec\n\n\nfunction (x) \n{\n    stopifnot(inherits(x, \"tbl_df\"))\n    attr(x, \"spec\")\n}\n<bytecode: 0x55f68d6e7a78>\n<environment: namespace:readr>\n\n# sensitivity = d / (b+d) => Sensitivity is the ability of a \n# test to correctly classify an individual as ′diseased′\nsens = km_prop[4] / (km_prop[3] + km_prop[4])\n\n\nError in eval(expr, envir, enclos): object 'km_prop' not found\n\nsens\n\n\nError in eval(expr, envir, enclos): object 'sens' not found\n\nMethode\nIn der Aufgabe war es das Ziel zu schauen, ob wir einen potenziellen Besuch eines Mensagasts vorhersagen können und zwar in Abhängigkeit von den sozioökonimischen Variablen, wahrgenommene Fleischkonsum und der Umwelteinstellung. Die Kriteriumsvariable “Mensa” weist eine binäre Verteilung auf: Deshalb rechnen wir eine multiple logistische Regression mit den Prädiktoren “Alter”, “Geschlecht”, “Hochschulzugehörigkeit”, “Fleischkonsum” und \"Umwelteinstellung. Mehr Informatinen zu den logistischen Regressinen findet ihr im Buch von Crawley (2015) oder auch im Buch von Gareth (2016), Kapitel 4.3; passendes Video hier.\nErgebnisse\n\nError in knitr::kable(km): object 'km' not found\n\nDer Output des logistischen Models mit der Linkfunktin “logit” sagt und, dass das Modell nicht gut zu den Daten passt, d.h. mit dem Modell (gegeben die Daten) können wir nur schlecht vorhersagen, ob eine Person zukünftig sich in der Mensa verpflegt oder ihr Mittagessen selber mitnimmt. Hinweise dafür geben das kleine pseudo-R2 (14%) als auch die hohe Missklassifizierungsrate (24%): bei genauerer Betrachtung fällt auf, dass das Modell häufig einen alpha-Fehler begeht, d.h. unser Modell sagt zu viele Mensagänger vorher, obwohl diese in Realität Selbstverpfleger sind. Es gibt verschiedene Gründe für diesen schlechten Modelfit:\ndie Kriteriumsvariable ist sehr ungleich verteilt, d.h. es gibt weniger Selbstverpfleger als Mensgänger im Datensatz (26% vs. 74%)\ndie Prädiktorvariablen sind alle entweder kategorial oder ordinal: dies kann dazu führen, dass das Model keinen guten fit zu den Daten erzielt\nFazit: Es sollte nach einem weiteren adäquateren Modell gesucht werden: insbesondere ein Modell, welches einen mit ordinalen Prädiktorvariablen umgehen kann:\neine bessere Link-Funktion für das GLM suchen z.B. probit\npolynomiale Kontraste\nSmooth Splines hier\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:14:48+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik5_Abstract/",
    "title": "Statistik",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik5",
      "Statistik"
    ],
    "contents": "\n\n\n\nStatistik 5 (9.11.2020)\nIn Statistik 5 lernen die Studierenden Lösungen kennen, welche die diversen Limitierungen von linearen Modellen überwinden. Während generalized linear models (GLMs) aus Statistik 4 bekannt sind, geht es jetzt um linear mixed effect models (LMMs und generalized linear mixed effect models (GLMMs). Dabei bezeichnet generalized die explizite Modellierung anderer Fehler- und Varianzstrukturen und mixed die Berücksichtigung von Abhängigkeiten bzw. Schachtelungen unter den Beobachtungen. Einfachere Fälle von LMMs, wie split-plot und repeated-measures ANOVAs, lassen sich noch mit dem aov-Befehl in Base R bewältigen, für komplexere Versuchsdesigns/Analysen gibt es spezielle R packages. Abschliessend gibt es eine kurze Einführung in GLMMs, die eine Analyse komplexerer Beobachtungsdaten z. B. mit räumlichen Abhängigkeiten, erlauben.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:14:50+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik5_assigment_stat5/",
    "title": "Uebungen",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik5",
      "Statistik"
    ],
    "contents": "\n\n\n\nUebungen 5\nUebung 5.1: Split-plot ANOVA\nDatensatz splityield.csv\nVersuch zum Ernteertrag (yield) einer Kulturpflanze in Abhängigkeit der drei Faktoren Bewässerung (irrigated vs. control), Düngung (N, NP, P) und Aussaatdichten (low, medium, high). Es gab vier ganze Felder (block), die zwei Hälften mit den beiden Bewässerungstreatments, diese wiederum drei Drittel für die drei Saatdichten und diese schliesslich je drei Drittel für die drei Düngertreatments hatten.\nAufgaben\nBestimmt das minimal adäquate Modell\nStellt die Ergebnisse da\nUebung 5.2: GLMM\nFührt mit dem Datensatz novanimal.csv eine logistische Regression durch, wobei ihr die einzelnen Käufer (single campus_card holder) als weitere randomisierte Variable mitberücksichtigt. Kann der Fleischkonsum durch das Geschlecht, die Hochschulzugehörigkeit und das Alter erklärt werden? Vergleich die Ergebnisse mit der eurem multiplen logistische Modell von 4.2\nKann der Fleischkonsum nun besser durch das Geschlecht, die Hochschulzugehörigkeit und das Alter erklärt werden?\nAufgaben\nBestimmt das minimal adäquate Modell\nStellt die Ergebnisse dar\nÄhnliches Vorgehen wie bei der Übung 4.2S:\nGeneriert eine neue Variable “Fleisch” (0 = kein Fleisch, 1 = Fleisch)\nEntfernt fehlende Werte aus der Variable “Fleisch”\nLasst für die Analyse den Menü-Inhalt “Buffet” weg\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:14:52+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik5_Demo_Statistik_5/",
    "title": "Demo",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik5",
      "Statistik"
    ],
    "contents": "\n\n\n\nDemo: Statistik 5\nVon linearen Modellen zu GLMMs (c) Juergen Dengler\nDemoscript als Download\nDatensatz spf.csv\nDatensatz DeerEcervi.txt\nSplit-plot ANOVA Based on Logan (2010), Chapter 14\n\n\nspf <- read.delim(\"spf.csv\", sep = \";\") \nspf.aov <- aov(Reaktion~Signal*Messung + Error(VP), data = spf)\nsummary(spf.aov)\n\ninteraction.plot(spf$Messung, spf$Signal, spf$Reaktion)\n\n\n\n\n#nun als LMM\nif(!require(nlme)){install.packages(\"nlme\")}\nlibrary(nlme)\nspf.lme.1 <- lme(Reaktion~Signal*Messung, random = ~Messung | VP, data = spf)\nspf.lme.2 <- lme(Reaktion~Signal*Messung, random = ~1 | VP, data = spf)\n\nanova(spf.lme.1)\nanova(spf.lme.2)\n\nsummary(spf.lme.1)\nsummary(spf.lme.2)\n\n\n\nGLMM Based on Zuur et al. (2009), chapter 13\n\n\nDeerEcervi <- read.delim(\"DeerEcervi.txt\", sep = \"\")\n\nDeerEcervi$Ecervi.01 <- DeerEcervi$Ecervi\n\n#Anzahl Larven hier in Presence/Absence übersetzt\nDeerEcervi$Ecervi.01[DeerEcervi$Ecervi>0] <- 1\nDeerEcervi$fSex <- as.factor(DeerEcervi$Sex)\n\n#Hirschlänge hier standardisiert, sonst würde der Achsenabschnitt im Modell für\n#einen Hirsch der Länge 0 modelliert, was schlecht interpretierbar ist, \n#jetzt ist der Achsenabschnitt für einen durschnittlich langen Hirsch\nDeerEcervi$CLength <- DeerEcervi$Length - mean(DeerEcervi$Length)\nDeerEcervi$fFarm <- factor(DeerEcervi$Farm)\n\n\n#Zunächst als GLM\n#Interaktionen mit fFarm nicht berücksichtigt, da zu viele Freiheitsgrade verbraucht würden\nDE.glm <- glm(Ecervi.01 ~ CLength * fSex+fFarm, family = binomial, data = DeerEcervi)\n\ndrop1(DE.glm, test = \"Chi\")\nsummary(DE.glm)\nanova(DE.glm)\n\n\n\nGLMM\n\n\nif(!require(MASS)){install.packages(\"MASS\")}\nlibrary(MASS)\nDE.PQL <-glmmPQL(Ecervi.01 ~ CLength * fSex,\n                random = ~ 1 | fFarm, family = binomial, data = DeerEcervi)\nsummary(DE.PQL)\n\n\ng <- 0.8883697 + 0.0378608 * DeerEcervi$CLength\np.averageFarm1 <- exp(g)/(1+exp(g))\nI <- order(DeerEcervi$CLength)              #Avoid spaghetti plot\nplot(DeerEcervi$CLength, DeerEcervi$Ecervi.01, xlab=\"Length\",\n     ylab = \"Probability of presence of E. cervi L1\")\nlines(DeerEcervi$CLength[I], p.averageFarm1[I],lwd=3)\np.Upp <- exp(g+1.96*1.462108)/(1+exp(g+1.96*1.462108))\np.Low <- exp(g-1.96*1.462108)/(1+exp(g-1.96*1.462108))\nlines(DeerEcervi$CLength[I], p.Upp[I])\nlines(DeerEcervi$CLength[I], p.Low[I])\n\n\n\n\n\nif(!require(lme4)){install.packages(\"lme4\")}\nlibrary(lme4)\nDE.lme4 <- glmer(Ecervi.01 ~ CLength * fSex +(1|fFarm), family = binomial, data = DeerEcervi)\nsummary(DE.lme4)\n\nif(!require(glmmML)){install.packages(\"glmmML\")}\nlibrary(glmmML)\nDE.glmmML <- glmmML(Ecervi.01 ~ CLength * fSex,\n                  cluster = fFarm, family = binomial, data = DeerEcervi)\nsummary(DE.glmmML)\n\n\n\n\n\n\n",
    "preview": "statistik/Statistik5_Demo_Statistik_5/distill-preview.png",
    "last_modified": "2021-08-18T11:14:58+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik6_Abstract/",
    "title": "Statistik",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik6",
      "Statistik"
    ],
    "contents": "\n\n\n\nStatistik 6 (10.11.2020)\nStatistik 6 führt in multivariat-deskriptive Methoden ein, die dazu dienen Datensätze mit multiplen abhängigen und multiplen unabhängigen Variablen effektiv zu analysieren. Dabei betonen Ordinationen kontinuierliche Gradienten und fokussieren auf zusammengehörende Variablen, während Cluster-Analysen Diskontinuitäten betonen und auf zusammengehörende Beobachtungen fokussieren. Es folgt eine konzeptionelle Einführung in die Idee von Ordinationen als einer Technik der deskriptiven Statistik, die Strukturen in multivariaten Datensätzen via Dimensionsreduktion visualisiert. Das Prinzip und die praktische Implementierung wird detailliert am Beispiel der Hauptkomponentenanalyse (PCA) erklärt. Danach folgen kurze Einführungen in weitere Ordinationstechniken für besondere Fälle, welche bestimmte Limitierungen der PCA überwinden, namentlich CA, DCA und NMDS.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:15:00+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik6_assigment_stat6/",
    "title": "Uebung",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik6",
      "Statistik"
    ],
    "contents": "\n\n\n\nUebung Statistik 6\nÜbung 6.1: PCA (naturwissenschaftlich)\nDatensatz Doubs.RData\nLädt den Datensatz Doubs.RData mit dem folgenden Befehl ins R: load(“Doubs.RData”)\nDie Umweltvariablen findet ihr im data.frame env die Abundanzen im data.frame spe. Im data.frame fishtrait findet ihr die Vollständigen Namen der Fische\nDer Datensatz enthält Daten zum Vorkommen von Fischarten und den zugehörigen Umweltvariablen im Fluss Doubs (Jura). Es gibt 30 Probestellen (sites), an denen jeweils die Abundanzen von 27 Fischarten (auf einer Skalen von 0 bis 5) sowie 11 Umweltvariablen erhoben wurden:\ndfs = Distance from source (km) ele = Elevation (m a.s.l.) slo = Slope (‰) dis = Mean annual discharge (m3 s-1) pH = pH of water har = Hardness (Ca concentration) (mg L-1) pho = Phosphate concentration (mg L-1) nit = Nitrate concentration (mg L-1) amm = Ammonium concentration (mg L-1) oxy = Dissolved oxygen (mg L-1) bod = Biological oxygen demand (mg L-1)\nEure Aufgabe ist nun, in einem ersten Schritt eine PCA für die 11 Umweltvariablen zu rechnen. Da die einzelnen Variablen auf ganz unterschiedlichen Skalen gemessen wurden, ist dazu eine Standardisierung nötig (pca mit der Funktion rda, scale=TRUE). Überlegt, wie viele Achsen wichtig sind und für was sie jeweils stehen.\nIn einem zweiten Schritt sollen dann die vollständig unkorrelierten PCA-Achsen als Prädiktoren einer multiplen Regression zur Erklärung der Fischartenzahl (Anzahl kann z.B. kann mit dem Befehl specnumber(spe) ermittel werden) verwendet werden (wahlweise lm oder glm). Gebt das minimal adäquate Modell an und interpretiert dieses (wahlweise im frequentist oder information theoretician approach). (Wer noch mehr probieren möchte, kann zum Vergleich noch eine multiple Regression mit den Originaldaten rechnen).\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:15:02+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik6_Demo_Statistik_6/",
    "title": "Demo",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik6",
      "Statistik"
    ],
    "contents": "\n\n\n\n\n\nknitr::opts_chunk$set(echo = TRUE,include = T, results = \"hide\",collapse=TRUE)\n\n\n\nDemo: Statistik 6\nOrdinationen I (c) Juergen Dengler\nDemoscript als Download\nPCA\n\n\nif(!require(labdsv)){install.packages(\"labdsv\")}\nlibrary(labdsv)\n#Für Ordinationen benötigen wir Matrizen, nicht Data.frames\n\n#Generieren von Daten\nraw <- matrix(c(1,2,2.5,2.5,1,0.5,0,1,2,4,3,1), nrow=6)\ncolnames(raw) <- c(\"spec.1\", \"spec.2\")\nrownames(raw)<-c(\"r1\",\"r2\",\"r3\",\"r4\",\"r5\",\"r6\")\nraw\n\n#originale Daten im zweidimensionalen Raum\nx1 <- raw[,1]\ny1 <- raw[,2]\nz <- c(rep(1:6))\n\n\n#Plot Abhängigkeit der Arten vom Umweltgradienten\nplot(c(x1, y1)~c(z,z), type=\"n\", axes=T, bty=\"l\", las=1, xlim=c(1,6), ylim=c(0,5),\n     xlab=\"Umweltgradient\",ylab=\"Deckung der Arten\")\npoints(x1~z, pch=21, type=\"b\")\npoints(y1~z, pch=16, type=\"b\")\n\n\n\n\n#zentrierte Daten\ncent <- scale(raw, scale=F)\nx2 <- cent[,1]\ny2 <- cent[,2]\n\n#rotierte Daten\no.pca <- pca(raw)\nx3 <- o.pca$scores[,1]\ny3 <- o.pca$scores[,2]\n\n#Visualisierung der Schritte im Ordinationsraum\nplot(c(y1,y2,y3)~c(x1,x2,x3), type=\"n\", axes=T, bty=\"l\", las=1, xlim=c(-4,4), \n     ylim=c(-4,4), xlab=\"Art 1\", ylab=\"Art 2\")\npoints(y1~x1, pch=21, type=\"b\", col=\"green\", lwd=2)\npoints(y2~x2, pch=16, type=\"b\",col=\"red\", lwd=2)\npoints(y3~x3, pch=17, type=\"b\", col=\"blue\", lwd=2)\n\n\n\n\n#Durchführung der PCA\no.pca <- pca(raw)\n\n#Koordinaten im Ordinationsraum\no.pca$scores\n\n#Korrelationen der Variablen mit den Ordinationsachsen\no.pca$loadings\n\n#Erklärte Varianz der Achsen\nE<-o.pca$sdev^2/o.pca$totdev*100\nE\n\n#mit prcomp\npca.2 <- prcomp(raw, scale=F)\nsummary(pca.2)\nplot(pca.2)\n\n\n\nbiplot(pca.2)\n\n\n\n\n#mit vegan\nif(!require(vegan)){install.packages(\"vegan\")}\nlibrary(\"vegan\")\npca.3 <- rda(raw, scale=FALSE) #Die Funktion rda führt ein PCA aus an wenn nicht Umwelt und Artdaten definiert werden\n#scores(pca.3,display=c(\"sites\"))\n#scores(pca.3,display=c(\"species\"))\nsummary(pca.3, axes=0)\nbiplot(pca.3, scaling=2)\nbiplot(pca.3, scaling=\"species\")#scaling=species macht das selbe wie scaling=2\n\n\n\n\n\n#Mit Beispieldaten aus Wildi\nif(!require(dave)){install.packages(\"dave\")}\nlibrary(dave)\ndata(sveg)\nstr(sveg)\nsummary(sveg)\nnames(sveg)\n\n#PCA: Deckungen Wurzeltransformiert, cor=T erzwingt Nutzung der Korrelationsmatrix\npca.5 <- pca(sveg^0.25,cor=T)\n\n#Koordinaten im Ordinationsraum\npca.5$scores\n\n#Korrelationen der Variablen mit den Ordinationsachsen\npca.5$loadings\n\n#Erklärte Varianz der Achsen in Prozent (sdev ist die Wurzel daraus)\nE<-pca.5$sdev^2/pca.5$totdev*100\nE\nE[1:5]\n\n#PCA-Plot der Lage der Beobachtungen im Ordinationsraum\nplot(pca.5$scores[,1], pca.5$scores[,2], type=\"n\", asp=1, xlab=\"PC1\", ylab=\"PC2\")\npoints(pca.5$scores[,1], pca.5$scores[,2], pch=18)\n\n\n\n\n#Subjektive Auswahl von Arten zur Darstellung\nsel.sp <- c(3,11,23,39,46,72,77,96)\nsnames <- names(sveg[,sel.sp])\nsnames\n\n#PCA-Plot der Korrelationen der Variablen (hier Arten) mit den Achsen (h)\nx <- pca.5$loadings[,1]\ny <- pca.5$loadings[,2]\nplot(x,y,type=\"n\", asp=1)\narrows(0,0, x[sel.sp], y[sel.sp], length=0.08)\ntext(x[sel.sp], y[sel.sp], snames, pos=1, cex=0.6)\n\n\n\n\n\n# Mit vegan\npca.6 <- rda(sveg^0.25, scale=TRUE)\n#Erklärte Varianz der Achsen\nsummary(pca.6, axes=0)\n#PCA-Plot der Lage der Beobachtungen im Ordinationsraum\nbiplot(pca.6, display = \"sites\", type = \"points\", scaling=1)\n\n\n\n#Subjektive Auswahl von Arten zur Darstellung\nsel.sp <- c(3,11,23,39,46,72,77,96)\nsnames <- names(sveg[,sel.sp])\nsnames\n#PCA-Plot der Korrelationen der Variablen (hier Arten) mit den Achsen (h)\nscores <- scores(pca.6, display=\"species\")\nx <- scores[,1]\ny <- scores[,2]\nplot(x, y, type=\"n\", asp=1)\narrows(0,0, x[sel.sp], y[sel.sp], length=0.08)\ntext(x[sel.sp], y[sel.sp], snames,pos=1,cex=0.6)\n\n\n\nplot(x, y, type=\"n\", asp=1, xlim=c(-1, 1), ylim=c(-0.6, 0.6)) # angepasste Achsen\n\n\n\n\nCA\n\n\nca.1 <- cca(sveg^0.5)\n#Arten (o) und Communities (+) plotten\nplot(ca.1)\n\n\n\n\n#Nur Arten plotten\nplot(ca.1, display = \"species\", type = \"points\")\n\n\n\n\n\n#Anteilige Varianz, die durch die ersten beiden Achsen erklärt wird\nca.1$CA$eig[1:2]/sum(ca.1$CA$eig)\nsummary(eigenvals(ca.1))\n\n\n\nDCA\n\n\nlibrary(vegan)\ndca.1 <- decorana(sveg, mk=10)\nplot(dca.1, display = \"sites\", type = \"point\")\n\ndca.2 <- decorana(sveg, mk=100)\nplot(dca.2, display = \"sites\", type = \"point\")\n\n\n\nNMDS\n\n\n#Distanzmatrix als Start erzeugen\nmde <- vegdist(sveg, method=\"euclidean\")\nmde\nmde <- vegdist(sveg, method=\"bray\")#Alternative mit einem für Vegetationsdaten häufig verwendeten Dissimilarity-index\nmde\n\n#Zwei verschiedene NMDS-Methoden\nif(!require(MASS)){install.packages(\"MASS\")}\nlibrary(MASS)\nset.seed(1) #macht man, wenn man bei einer Wiederholung exakt die gleichen Ergebnisse will\nimds <- isoMDS(mde, k=2)\nset.seed(1)\nmmds <- metaMDS(mde, k=2)\n\nplot(imds$points)\nplot(mmds$points)\n\n#Stress = S² = Abweichung der zweidimensionalen NMDS-Lösung von der originalen Distanzmatrix\nstressplot(imds,mde)\nstressplot(mmds,mde)\n\n\n\n\n\n\n",
    "preview": "statistik/Statistik6_Demo_Statistik_6/distill-preview.png",
    "last_modified": "2021-08-18T11:15:12+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik6_solution_stat6/",
    "title": "Loesung",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik6",
      "Statistik"
    ],
    "contents": "\n\n\n\nLoesung 6.1\nR-Skript als Download\nLoesungstext\n\n\nload(\"Doubs.RData\")\n\n\nError in readChar(con, 5L, useBytes = TRUE): cannot open the connection\n\nsummary(env)\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': object 'env' not found\n\nsummary(spe)\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': object 'spe' not found\n\n#Die Dataframes env und spe enthalten die Umwelt- respective die Artdaten\n\nif(!require(vegan)){install.packages(\"vegan\")}\nlibrary(\"vegan\")\n\n\n\nDie PCA wird im Package vegan mit dem Befehl rda ausgeführt, wobei in diesem scale = TRUE gesetzt warden muss, da die Umweltdaten mit ganz unterschiedlichen Einheiten und Wertebereichen daherkommen\n\n\nenv.pca <- rda(env, scale=TRUE)\n\n\nError in rda(env, scale = TRUE): object 'env' not found\n\nenv.pca\n\n\nError in eval(expr, envir, enclos): object 'env.pca' not found\n\n#In env.pca sieht man, dass es bei 11 Umweltvariablen logischerweise 11 orthogonale Principle Components gibt\n\nsummary(env.pca, axes=0)\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': object 'env.pca' not found\n\n#Hier sieht man auch die Übersetzung der Eigenvalues in erklärte Varianzen der einzelnen Principle Components\n\nsummary(env.pca)\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': object 'env.pca' not found\n\n#Hier das ausführliche Summary mit den Art- und Umweltkorrelationen auf den ersten sechs Achsen\n\nscreeplot(env.pca, bstick=TRUE, npcs=length(env.pca$CA$eig))\n\n\nError in screeplot(env.pca, bstick = TRUE, npcs = length(env.pca$CA$eig)): object 'env.pca' not found\n\n#Visualisierung der Anteile erklärter Varianz, auch im Vergleich zu einem Broken-Stick-Modell\n\n\n\nDie Anteile fallen steil ab. Nur die ersten vier Achsen erklären jeweils mehr als 5 % (und zusammen über 90 %)\nDas Broken-stick-Modell würde sogar nur die ersten beiden Achsen als relevant vorschlagen\nDa die Relevanz für das Datenmuster in den Umweltdaten nicht notwendig die Relevanz für die Erklärung der Artenzahlen ist, nehmen wir ins globale Modell grosszügig die ersten vier Achsen rein (PC1-PC4) Die Bedeutung der Achsen (benötigt man später für die Interpretation!) findet man in den “species scores” (da so, wie wir die PCA hier gerechnet haben, die Umweltdaten die Arten sind. Zusätzlich oder alternative kann man sich die ersten vier Achsen auch visualisieren, indem man PC2 vs. PC1 (ohne choices), PC3 vs. PC1 oder PC4 vs. PC1 plottet.\n\n\npar(mfrow=c(2,2))\nbiplot(env.pca, scaling=1)\n\n\nError in biplot(env.pca, scaling = 1): object 'env.pca' not found\n\nbiplot(env.pca, choices=c(1,3), scaling=1)\n\n\nError in biplot(env.pca, choices = c(1, 3), scaling = 1): object 'env.pca' not found\n\nbiplot(env.pca, choices=c(1,4), scaling=1)\n\n\nError in biplot(env.pca, choices = c(1, 4), scaling = 1): object 'env.pca' not found\n\nPC1 steht v.a. für Nitrat (positiv), Sauerstoff (negativ)\nPC2 steht v.a. für pH (positiv)\nPC3 steht v.a. für pH (positiv) und slo (negativ)\nPC4 steht v.a. für pH (negativ) und slo (negativ)\n\n\n#Wir extrahieren nun die ersten vier PC-Scores aller Aufnahmeflächen\n\nscores <- scores(env.pca,choices=c(1:4), display=c(\"sites\"))\n\n\nError in scores(env.pca, choices = c(1:4), display = c(\"sites\")): object 'env.pca' not found\n\nscores\n\n\nfunction (x, ...) \nUseMethod(\"scores\")\n<bytecode: 0x55f6a17c6c30>\n<environment: namespace:vegan>\n\n#Berechnung der Artenzahl mittels specnumber; Artenzahl und Scores werden zum Dataframe für die Regressionsanalyse hinzugefügt\ndoubs <- data.frame(env, scores, species_richness=specnumber(spe))\n\n\nError in data.frame(env, scores, species_richness = specnumber(spe)): object 'env' not found\n\ndoubs\n\n\nError in eval(expr, envir, enclos): object 'doubs' not found\n\nstr(doubs)\n\n\nError in str(doubs): object 'doubs' not found\n\n##Lösung mit lm (alternativ ginge Poisson-glm) und frequentist approach (alternativ ginge Multimodelinference mit AICc)\nlm.pc.0 <- lm(species_richness ~ PC1+PC2+PC3+PC4, data = doubs)\n\n\nError in is.data.frame(data): object 'doubs' not found\n\nsummary(lm.pc.0)\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': object 'lm.pc.0' not found\n\n#Modellvereinfachung: PC4 ist nicht signifikant und wird entfernt\nlm.pc.1 <- lm(species_richness ~ PC1+PC2+PC3, data = doubs)\n\n\nError in is.data.frame(data): object 'doubs' not found\n\nsummary(lm.pc.1) #jetzt sind alle Achsen signifikant und werden in das minimal adäquate Modell aufgenommen\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': object 'lm.pc.1' not found\n\n#Modelldiagnostik/Modellvalidierung\npar(mfrow=c(2,2))\nplot(lm.pc.1) \n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'plot': object 'lm.pc.1' not found\n\nNicht besonders toll, ginge aber gerade noch. Da wir aber ohnehin Zähldaten haben, können wir es mit einem Poisson-GLM versuchen\n#Alternativ mit glm\n\n\nglm.pc.0 <- glm(species_richness ~ PC1+PC2+PC3+PC4, family = \"poisson\", data = doubs)\nsummary(glm.pc.0)\nglm.pc.1 <- glm(species_richness ~ PC1+PC2+PC3, family = \"poisson\", data = doubs)\nsummary(glm.pc.1)\nplot(glm.pc.1) #sieht nicht besser aus als LM, die Normalverteilung ist sogar schlechter\n\n\n\nLM oder GLM sind für die Analyse möglich, Modellwahl nach Gusto. Man muss jetzt noch die Ergebnisse adäquat aus all den erzielten Outputs zusammenstellen (siehe Ergebnistext). In dieser Aufgabe haben wir ja die PC-Achsen als Alternative zur direkten Modellierung mit den originalen Umweltvariablen ausprobiert. Deshalb (war nicht Teil der Aufgabe), kommt hier noch eine Lösung, wie wir es bisher gemacht hätten.\nZum Vergleich die Modellierung mit den Originaldaten\n\n\n#Korrelationen zwischen Prädiktoren\ncor <- cor(doubs[,1:11])\ncor[abs(cor)<.7] <-0\ncor \n\n#Die Korrelationsmatrix betrachtet man am besten in Excel.\n#Es zeigt sich, dass es zwei grosse Gruppen von untereinander hochkorrelierten Variablen gibt: zum einen dfs-ele-dis-har-nit, zum anderen pho-nit-amm-oxy-bod, während slo und pH mit jeweils keiner anderen Variablen hochkorreliert sind. Insofern behalten wir eine aus der ersten Gruppe (ele), eine aus der zweiten Gruppe (pho) und die beiden «unabhängigen».\n\n#Globalmodell (als hinreichend unabhängige Variablen werden ele, slo, pH und pho aufgenommen)\nlm.orig.0 <- lm(species_richness ~ ele+slo+pH+pho, data = doubs)\nsummary(lm.orig.0)\n\n#Modellvereinfachung: slo als am wenigsten signifikante Variable gestrichen\nlm.orig.1 <- lm(species_richness ~ ele+pH+pho, data = doubs)\nsummary(lm.orig.1)\n\n#Modellvereinfachung: pH ist immer noch nicht signifikant und wird gestrichen\nlm.orig.2 <- lm(species_richness ~ ele+pho, data = doubs)\nsummary(lm.orig.2)\n\n#Modelldiagnostik\npar(mfrow=c(2,2))\nplot(lm.orig.2) #nicht so gut, besonders die Bananenform in der linken obereren Abbildung\n\n#Nach Modellvereinfachung bleiben zwei signifikante Variablen, ele und pho.\n\n#Da das nicht so gut aussieht, versuchen wir es mit dem theoretisch angemesseneren Modell, einem Poisson-GLM.\n\n#Versuch mit glm\nglm.orig.0 <- glm(species_richness ~ ele+pho+pH+slo, family = \"poisson\", data = doubs)\nsummary(glm.orig.0)\n\nglm.orig.1 <- glm(species_richness ~ ele+pho+slo, family = \"poisson\", data = doubs)\nsummary(glm.orig.1)\n\nglm.orig.2 <- glm(species_richness ~ ele+pho, family = \"poisson\", data = doubs)\nsummary(glm.orig.2)\nplot(glm.orig.2)\n\n#Das sieht deutlich besser aus als beim LM. Wir müssen aber noch prüfen, ob evtl. Overdispersion vorliegt.\n\nif(!require(AER)){install.packages(\"AER\")}\nlibrary(AER)\ndispersiontest(glm.orig.2) #signifikante Überdispersion\n\n#Ja, es gibt signifikante Overdispersion (obwohl der Dispersionparameter sogar unter 2 ist, also nicht extrem). Wir können nun entweder quasipoisson oder negativebinomial nehmen.\n\nglmq.orig.2 <- glm(species_richness ~ ele+pho, family = \"quasipoisson\", data = doubs)\nsummary(glmq.orig.2)\n\n#Parameterschätzung bleiben gleich, aber Signifikanzen sind niedriger als beim GLM ohne Overdispersion.\n\nplot(glmq.orig.2)\n\n\n\nSieht gut aus, wir hätten hier also unser finales Modell.\nIm Vergleich der beiden Vorgehensweisen (PC-Achsen vs. Umweltdaten direkt) scheint in diesem Fall die direkte Modellierung der Umweltachsen informativer: Man kommt mit zwei Prädiktoren aus, die jeweils direkt für eine der Hauptvariablen stehen – Meereshöhe und Phosphor – zugleich aber jeweils eine grössere Gruppe von Variablen mit hohen Korrelationen inkludieren, im ersten Fall Variablen, die sich im Flusslauf von oben nach unten systematisch ändern, im zweiten Masse der Nährstoffbelastung des Gewässers. Bei der PCA-Lösung kamen drei signifikante Komponenten heraus, die allerdings nicht so leicht zu interpretieren sind. Dies insbesondere, weil in diesem Fall auf der Ebene PC2 vs. PC1 die Mehrzahl der Umweltparameter ungefähr in 45-Grad-Winkeln angeordnet sind. Im allgemeinen Fall kann aber die Nutzung von PC-Achsen durchaus eine gute Lösung sein.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:15:16+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik7_Abstract/",
    "title": "Statistik",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik7",
      "Statistik"
    ],
    "contents": "\n\n\n\nStatistik 7 (16.11.2020)\nIn Statistik 7 beschäftigen wir uns zunächst damit, wie wir Ordinationsdiagramme informativer gestalten können, etwa durch die Beschriftung der Beobachtunge, post-hoc-Projektion der Prädiktorvariablen oder Response surfaces. Während wir bislang mit «unconstrained» Ordinationen gearbeitet haben, welche die Gesamtvariabilität in den Beobachtungen visualisieren, beschränken die jeweiligen «constrained»-Varianten derselben Ordinationsmethoden die Betrachtung auf den Teil der Variabilität, welcher durch eine Linearkombination der berücksichtigen Prädiktoren erklärt werden kann. Wir beschäftigen uns im Detail mit der Redundanz-Analyse (RDA), der «constrained»-Variante der PCA und gehen einen kompletten analytischen Ablauf mit Aufbereitung, Interpretation und Visualisierung der Ergebnisse am Beispiel eines gemeinschaftsökologischen Datensatzes (Fischgesellschaften und Umweltfaktoren im Jura-Fluss Doubs) durch\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:15:18+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik7_assigment_stat7/",
    "title": "Uebung",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik7",
      "Statistik"
    ],
    "contents": "\n\n\n\nUebung 7\nUebung 7.1: RDA (naturwissenschaftlich)\nMoordatensatz in library(dave) :\nsveg (Vegetationsdaten)\nssit (Umweltdaten)\nFührt eine RDA mit allen in der Vorlesung gezeigten Schritten durch und interpretiert die Ergebnisse.\nVon den Umweltvariablen entfallen x.axis & y.axis\nFür die partielle RDA und die Varianzpartitionierung bildet zwei Gruppen:\nPhysiographie (Waterlev.max, Waterlev.av, Waterlev.min, log.peat.lev, log slope.deg)\nChemie (alle übrigen)\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:15:20+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik7_Demo_Statistik_7/",
    "title": "Demo",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik7",
      "Statistik"
    ],
    "contents": "\n\n\n\n\n\nknitr::opts_chunk$set(echo = TRUE,include = T, results = \"hide\",collapse=TRUE, message = FALSE)\n\n\n\nDemo: Statistik 7\nOrdinationen II\n(c) Juergen Dengler\nDemoscript als Download\nDatensatz Doubs.RData\nFunktion triplot.rda.R\nDemoskript extended\nInterpretation von Ordinationen (Wildi pp. 96 et seq.) Wildi pp. 96 et seq.)\n\n\n#Plot Arten\nif(!require(dave)){install.packages(\"dave\")}\nlibrary(dave)\nca <- cca(sveg^0.5)\n\n#Plot mit ausgewählten Arten\nsel.spec<-c(3,11,23,31,39,46,72,77,96)\nsnames<-names(sveg[,sel.spec])\nsnames\nscores <- scores(ca, display = \"species\", scaling = \"sites\")\nsx <- scores[sel.spec, 1]\nsy <- scores[sel.spec, 2]\nplot(ca, display = \"sites\", type = \"point\")\npoints(sx, sy, pch=16)\nsnames <- make.cepnames(snames)\ntext(sx, sy, snames, pos=c(1,2,1,1,3,2,4,3,1), cex=0.8)\n\n#Plot \"response surfaces\" in der CA\nplot(ca, display = \"sites\", type = \"point\")\nordisurf(ca, ssit$pH.peat, add=T)\n\nplot(ca, display = \"sites\", type = \"points\")\nordisurf(ca, ssit$Waterlev.av, add=T, col=\"blue\")\n\n#Das gleiche für die DCA\ndca <- decorana(sveg)\nplot(dca, display = \"sites\", type = \"points\")\nordisurf(dca, ssit$pH.peat, add=T)\nordisurf(dca, ssit$Waterlev.av, add=T, col=\"blue\")\n\n#Das gleiche mit NMDS\nmde <- vegdist(sveg,method=\"euclidean\")\nmmds <- metaMDS(mde)\nif(!require(MASS)){install.packages(\"MASS\")}\nlibrary(MASS)\nimds <- isoMDS(mde)\n\nplot(mmds$points)\nordisurf(mmds, ssit$pH.peat, add=T)\nordisurf(mmds, ssit$Waterlev.av,add=T, col=\"blue\")\n\nplot(imds$points)\nordisurf(imds, ssit$pH.peat, add=T)\nordisurf(imds, ssit$Waterlev.av, add=T, col=\"blue\")\n\n\n\nConstrained ordination\n\n\n#5 Umweltvariablen gewählt, durch die die Ordination constrained werden soll\nssit\nsummary(ssit)\ns5 <- c(\"pH.peat\", \"P.peat\", \"Waterlev.av\", \"CEC.peat\", \"Acidity.peat\")\nssit5 <- ssit[s5]\n\ndata(sveg)\nsummary(sveg)\n\n#RDA = constrained PCA\nrda <- rda(sveg~., ssit5)\nplot(rda)\n\n#CCA = constrained CA\ncca <- cca(sveg~., ssit5)\nplot(cca)\n\n#Unconstrained and constrained variance\ntot <- cca$tot.chi\nconstr <- cca$CCA$tot.chi\nconstr/tot\n\n\n\nRedundancy analysis (RDA) Mehr Details zu RDA aus Borcard et al. (Numerical ecology with R)\n\n\n#Datensatz Doubs\n# Doubs Datensatz in den workspace laden\nload(\"dataDoubs.RData\")  \nspe\nenv\nspa\nsummary(spe)\nsummary(env)\nsummary(spa)\n\n# Entfernen der Untersuchungsfläche ohne Arten\nspe <- spe[-8, ]\nenv <- env[-8, ]\nspa <- spa[-8, ]\n\n# Karten für 4 Fischarten\ndev.new(title = \"Four fish species\", noRStudioGD = TRUE)\npar(mfrow = c(2, 2))\nplot(spa, asp = 1, col = \"brown\", cex = spe$Satr, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Brown trout\")\nlines(spa, col = \"light blue\")\nplot(spa, asp = 1, col = \"brown\", cex = spe$Thth, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Grayling\")\nlines(spa, col = \"light blue\")\nplot(spa, asp = 1, col = \"brown\", cex = spe$Alal, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Bleak\")\nlines(spa, col = \"light blue\")\nplot(spa, asp = 1, col = \"brown\", cex = spe$Titi, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Tench\")\nlines(spa, col = \"light blue\")\n\n# Set aside the variable 'dfs' (distance from the source) for \n# later use\ndfs <- env[, 1]\n# Remove the 'dfs' variable from the env data frame\nenv2 <- env[, -1]\n\n# Recode the slope variable (slo) into a factor (qualitative) \n# variable to show how these are handled in the ordinations\nslo2 <- rep(\".very_steep\", nrow(env))\nslo2[env$slo <= quantile(env$slo)[4]] <- \".steep\"\nslo2[env$slo <= quantile(env$slo)[3]] <- \".moderate\"\nslo2[env$slo <= quantile(env$slo)[2]] <- \".low\"\nslo2 <- factor(slo2, levels = c(\".low\", \".moderate\", \".steep\", \".very_steep\"))\ntable(slo2)\n\n# Create an env3 data frame with slope as a qualitative variable\nenv3 <- env2\nenv3$slo <- slo2\n\n# Create two subsets of explanatory variables\n# Physiography (upstream-downstream gradient)\nenvtopo <- env2[, c(1 : 3)]\nnames(envtopo)\n# Water quality\nenvchem <- env2[, c(4 : 10)]\nnames(envchem)\n\n# Hellinger-transform the species dataset\nlibrary(vegan)\nspe.hel <- decostand(spe, \"hellinger\")\nspe.hel\n\n# Redundancy analysis (RDA)\n## RDA of the Hellinger-transformed fish species data, constrained\n## by all the environmental variables contained in env3\n(spe.rda <- rda(spe.hel ~ ., env3)) # Observe the shortcut formula\nsummary(spe.rda)  # Scaling 2 (default)\n\n# Canonical coefficients from the rda object\ncoef(spe.rda)\n# Unadjusted R^2 und Adjusted R^2\n(R2 <- RsquareAdj(spe.rda))\n\n## Triplots of the rda results (lc scores)\n## Site scores as linear combinations of the environmental variables\ndev.new(title = \"RDA scaling 1 and 2 + lc\", width = 12, height = 6, noRStudioGD = TRUE)\npar(mfrow = c(1, 2))\n# Scaling 1\nplot(spe.rda,scaling = 1,display = c(\"sp\", \"lc\", \"cn\"),main = \"Triplot RDA spe.hel ~ env3 - scaling 1 - lc scores\")\nspe.sc1 <- scores(spe.rda, choices = 1:2, scaling = 1, display = \"sp\")\narrows(0, 0, spe.sc1[, 1] * 0.92,spe.sc1[, 2] * 0.92,length = 0, lty = 1, col = \"red\")\ntext(-0.75, 0.7, \"a\", cex = 1.5)\n# Scaling 2\nplot(spe.rda, display = c(\"sp\", \"lc\", \"cn\"), main = \"Triplot RDA spe.hel ~ env3 - scaling 2 - lc scores\")\nspe.sc2 <- scores(spe.rda, choices = 1:2, display = \"sp\")\narrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92,length = 0,lty = 1,col = \"red\")\ntext(-0.82, 0.55, \"b\", cex = 1.5)\n\n\n## Triplots of the rda results (wa scores)\n## Site scores as weighted averages (vegan's default)\n# Scaling 1 :  distance triplot\ndev.new(title = \"RDA plot\", width = 12, height = 6, noRStudioGD = TRUE)\npar(mfrow = c(1,2))\nplot(spe.rda, scaling = 1, main = \"Triplot RDA spe.hel ~ env3 - scaling 1 - wa scores\")\narrows(0, 0, spe.sc1[, 1] * 0.92, spe.sc1[, 2] * 0.92, length = 0, lty = 1, col = \"red\")\n# Scaling 2 (default) :  correlation triplot\nplot(spe.rda, main = \"Triplot RDA spe.hel ~ env3 - scaling 2 - wa scores\")\narrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92, length = 0, lty = 1, col = \"red\")\n\n# Select species with goodness-of-fit at least 0.6 in the \n# ordination plane formed by axes 1 and 2\nspe.good <- goodness(spe.rda)\nsel.sp <- which(spe.good[, 2] >= 0.6)\nsel.sp\n\n# Triplots with homemade function triplot.rda(), scalings 1 and 2\nsource(\"triplot.rda.R\")\ndev.new(title = \"RDA plot with triplot.rda\", width = 12, height = 6, noRStudioGD = TRUE)\n\npar(mfrow = c(1,2))\ntriplot.rda(spe.rda, site.sc = \"lc\", scaling = 1, cex.char2 = 0.7, pos.env = 3, \n            pos.centr = 1, mult.arrow = 1.1, mar.percent = 0.05, select.spe = sel.sp)\ntext(-0.92, 0.72, \"a\", cex = 2)\ntriplot.rda(spe.rda, site.sc = \"lc\", scaling = 2, cex.char2 = 0.7, pos.env = 3, \n            pos.centr = 1, mult.arrow = 1.1, mar.percent = 0.05, select.spe = sel.sp)\ntext(-2.82, 2, \"b\", cex = 2)\n\n# Global test of the RDA result\nanova(spe.rda, permutations = how(nperm = 999))\n# Tests of all canonical axes\nanova(spe.rda, by = \"axis\", permutations = how(nperm = 999))\n\n## Partial RDA: effect of water chemistry, holding physiography\n## constant\n\n# Simple syntax; X and W may be in separate tables of quantitative \n# variables\n(spechem.physio <- rda(spe.hel, envchem, envtopo))\nsummary(spechem.physio)\n\n# Formula interface; X and W variables must be in the same \n# data frame\n(spechem.physio2 <- rda(spe.hel ~ pH + har + pho + nit + amm + oxy + bod \n        + Condition(ele + slo + dis), data = env2))\n\n# Test of the partial RDA, using the results with the formula \n# interface to allow the tests of the axes to be run\nanova(spechem.physio2, permutations = how(nperm = 999))\nanova(spechem.physio2, permutations = how(nperm = 999), by = \"axis\")\n\n# Partial RDA triplots (with fitted site scores) \n# with function triplot.rda\n# Scaling 1\ndev.new(title = \"Partial RDA\",width = 12, height = 6, noRStudioGD = TRUE)\npar(mfrow = c(1, 2))\ntriplot.rda(spechem.physio, site.sc = \"lc\", scaling = 1, \n            cex.char2 = 0.8, pos.env = 3, mar.percent = 0)\ntext(-0.58, 0.64, \"a\", cex = 2)\n\n# Scaling 2\ntriplot.rda(spechem.physio, site.sc = \"lc\", scaling = 2, cex.char2 = 0.8, \n            pos.env = 3, mult.spe = 1.1, mar.percent = 0.04)\ntext(-3.34, 3.64, \"b\", cex = 2)\n\n\n\nVariation partioning\n\n\n## Variation partitioning with two sets of explanatory variables\n\n# Explanation of fraction labels (two, three and four explanatory \n# matrices) with optional colours\ndev.new(title = \"Symbols of variation partitioning fractions\", width = 6, height = 2.3, noRStudioGD = TRUE)\npar(mfrow = c(1, 3), mar = c(1, 1, 1, 1))\nshowvarparts(2, bg = c(\"red\", \"blue\"))\nshowvarparts(3, bg = c(\"red\", \"blue\", \"yellow\"))\nshowvarparts(4, bg = c(\"red\", \"blue\", \"yellow\", \"green\"))\n\n## 1. Variation partitioning with all explanatory variables\n##    (except dfs)\n(spe.part.all <- varpart(spe.hel, envchem, envtopo))\n\n# Plot of the partitioning results\npar(mfrow = c(1, 1))\ndev.new(title = \"Variation partitioning - all variables\", noRStudioGD = TRUE)\nplot(spe.part.all, digits = 2, bg = c(\"red\", \"blue\"),\n     Xnames = c(\"Chemistry\", \"Physiography\"), \n     id.size = 0.7)\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:15:25+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik7_Demoskirpt_extended/",
    "title": "Statistik",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik7",
      "Statistik"
    ],
    "contents": "\n\n\n\nStatistik 7 - Demoskript extended\nOrdinationen II (c) Juergen Dengler\nDemoscript als Download Datensatz Doubs.RData Funktion triplot.rda.R\n\n\n#Interpretation von Ordinationen (Wildi pp. 96 et seq.)\n\n#Plot Arten\nif(!require(dave)){install.packages(\"dave\")}\nlibrary(dave)\nca <- cca(sveg^0.5)\n\n#Plot mit ausgewählten Arten\nsel.spec<-c(3,11,23,31,39,46,72,77,96)\nsnames<-names(sveg[,sel.spec])\nsnames\nscores <- scores(ca, scaling = \"sites\")\nsx <- scores[sel.spec, 1]\nsy <- scores[sel.spec, 2]\nplot(ca, display = \"sites\", type = \"point\")\npoints(sx, sy, pch=16)\nsnames <- make.cepnames(snames)\ntext(sx, sy, snames, pos=c(1,2,1,1,3,2,4,3,1), cex=0.8)\n\n# Plotte post-hoc gefittete Umweltvariablen\nsel.sites <- c(\"pH.peat\", \"Acidity.peat\", \"CEC.peat\", \"P.peat\", \"Waterlev.max\")\nev <- envfit(ca, ssit[,sel.sites])\nplot(ev, add=T, cex=0.8)\n\n#Plot \"response surfaces\" in der CA\nplot(ca, display = \"sites\", type = \"point\")\nordisurf(ca, ssit$pH.peat, add=T)\n\nplot(ca, display = \"sites\", type = \"points\")\nordisurf(ca, ssit$Waterlev.av, add=T, col=\"blue\")\n\n#Das gleiche für die DCA\ndca <- decorana(sveg)\nplot(dca, display = \"sites\", type = \"points\")\nordisurf(dca, ssit$pH.peat, add=T)\nordisurf(dca, ssit$Waterlev.av, add=T, col=\"blue\")\n\n#Das gleiche mit NMDS\nmde <- vegdist(sveg,method=\"euclidean\")\nmmds <- metaMDS(mde)\nif(!require(MASS)){install.packages(\"MASS\")}\nlibrary(MASS)\nimds <- isoMDS(mde)\n\nplot(mmds$points)\nordisurf(mmds, ssit$pH.peat, add=T)\nordisurf(mmds, ssit$Waterlev.av,add=T, col=\"blue\")\n\nplot(imds$points)\nordisurf(imds, ssit$pH.peat, add=T)\nordisurf(imds, ssit$Waterlev.av, add=T, col=\"blue\")\n\n\n\nConstrained ordination\n\n\n#5 Umweltvariablen gewählt, durch die die Ordination constrained werden soll\nssit\nsummary(ssit)\ns5 <- c(\"pH.peat\", \"P.peat\", \"Waterlev.av\", \"CEC.peat\", \"Acidity.peat\")\nssit5 <- ssit[s5]\n\ndata(sveg)\nsummary(sveg)\n\n#RDA = constrained PCA\nrda <- rda(sveg~., ssit5)\nplot(rda)\n\n#CCA = constrained CA\ncca <- cca(sveg~., ssit5)\nplot(cca)\n\n#Unconstrained and constrained variance\ntot <- cca$tot.chi\nconstr <- cca$CCA$tot.chi\nconstr/tot\n\n\n\nRedundancy analysis (RDA) ## Mehr Details zu RDA aus Borcard et al. (Numerical ecology with R)\n\n\n#Datensatz Doubs\n# Doubs Datensatz in den workspace laden\nload(\"Doubs.RData\")  \nspe\nenv\nspa\nsummary(spe)\nsummary(env)\nsummary(spa)\n\n# Entfernen der Untersuchungsfläche ohne Arten\nspe <- spe[-8, ]\nenv <- env[-8, ]\nspa <- spa[-8, ]\n\n# Karten für 4 Fischarten\ndev.new(title = \"Four fish species\", noRStudioGD = TRUE)\npar(mfrow = c(2, 2))\nplot(spa, asp = 1, col = \"brown\", cex = spe$Satr, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Brown trout\")\nlines(spa, col = \"light blue\")\nplot(spa, asp = 1, col = \"brown\", cex = spe$Thth, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Grayling\")\nlines(spa, col = \"light blue\")\nplot(spa, asp = 1, col = \"brown\", cex = spe$Alal, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Bleak\")\nlines(spa, col = \"light blue\")\nplot(spa, asp = 1, col = \"brown\", cex = spe$Titi, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Tench\")\nlines(spa, col = \"light blue\")\n\n# Set aside the variable 'dfs' (distance from the source) for \n# later use\ndfs <- env[, 1]\n# Remove the 'dfs' variable from the env data frame\nenv2 <- env[, -1]\n\n# Recode the slope variable (slo) into a factor (qualitative) \n# variable to show how these are handled in the ordinations\nslo2 <- rep(\".very_steep\", nrow(env))\nslo2[env$slo <= quantile(env$slo)[4]] <- \".steep\"\nslo2[env$slo <= quantile(env$slo)[3]] <- \".moderate\"\nslo2[env$slo <= quantile(env$slo)[2]] <- \".low\"\nslo2 <- factor(slo2, levels = c(\".low\", \".moderate\", \".steep\", \".very_steep\"))\ntable(slo2)\n\n# Create an env3 data frame with slope as a qualitative variable\nenv3 <- env2\nenv3$slo <- slo2\n\n# Create two subsets of explanatory variables\n# Physiography (upstream-downstream gradient)\nenvtopo <- env2[, c(1 : 3)]\nnames(envtopo)\n# Water quality\nenvchem <- env2[, c(4 : 10)]\nnames(envchem)\n\n# Hellinger-transform the species dataset\nlibrary(vegan)\nspe.hel <- decostand(spe, \"hellinger\")\nspe.hel\n\n# Redundancy analysis (RDA) =======================================\n\n## RDA of the Hellinger-transformed fish species data, constrained\n## by all the environmental variables contained in env3\n(spe.rda <- rda(spe.hel ~ ., env3)) # Observe the shortcut formula\nsummary(spe.rda)  # Scaling 2 (default)\n\n# Canonical coefficients from the rda object\ncoef(spe.rda)\n# Unadjusted R^2 retrieved from the rda object\n(R2 <- RsquareAdj(spe.rda)$r.squared)\n# Adjusted R^2 retrieved from the rda object\n(R2adj <- RsquareAdj(spe.rda)$adj.r.squared)\n\n## Triplots of the rda results (lc scores)\n## Site scores as linear combinations of the environmental variables\ndev.new(title = \"RDA scaling 1 and 2 + lc\", width = 12, height = 6, noRStudioGD = TRUE)\npar(mfrow = c(1, 2))\n# Scaling 1\nplot(spe.rda,scaling = 1,display = c(\"sp\", \"lc\", \"cn\"),main = \"Triplot RDA spe.hel ~ env3 - scaling 1 - lc scores\")\nspe.sc1 <- scores(spe.rda, choices = 1:2, scaling = 1, display = \"sp\")\narrows(0, 0, spe.sc1[, 1] * 0.92,spe.sc1[, 2] * 0.92,length = 0, lty = 1, col = \"red\")\ntext(-0.75, 0.7, \"a\", cex = 1.5)\n# Scaling 2\nplot(spe.rda, display = c(\"sp\", \"lc\", \"cn\"), main = \"Triplot RDA spe.hel ~ env3 - scaling 2 - lc scores\")\nspe.sc2 <- scores(spe.rda, choices = 1:2, display = \"sp\")\narrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92,length = 0,lty = 1,col = \"red\")\ntext(-0.82, 0.55, \"b\", cex = 1.5)\n\n\n## Triplots of the rda results (wa scores)\n## Site scores as weighted averages (vegan's default)\n# Scaling 1 :  distance triplot\ndev.new(title = \"RDA plot\", width = 12, height = 6, noRStudioGD = TRUE)\npar(mfrow = c(1,2))\nplot(spe.rda, scaling = 1, main = \"Triplot RDA spe.hel ~ env3 - scaling 1 - wa scores\")\narrows(0, 0, spe.sc1[, 1] * 0.92, spe.sc1[, 2] * 0.92, length = 0, lty = 1, col = \"red\")\n# Scaling 2 (default) :  correlation triplot\nplot(spe.rda, main = \"Triplot RDA spe.hel ~ env3 - scaling 2 - wa scores\")\narrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92, length = 0, lty = 1, col = \"red\")\n\n# Select species with goodness-of-fit at least 0.6 in the \n# ordination plane formed by axes 1 and 2\nspe.good <- goodness(spe.rda)\nsel.sp <- which(spe.good[, 2] >= 0.6)\nsel.sp\n\n# Triplots with homemade function triplot.rda(), scalings 1 and 2\nsource(\"triplot.rda.R\")\ndev.new(title = \"RDA plot with triplot.rda\", width = 12, height = 6, noRStudioGD = TRUE)\n\npar(mfrow = c(1,2))\ntriplot.rda(spe.rda, site.sc = \"lc\", scaling = 1, cex.char2 = 0.7, pos.env = 3, \n            pos.centr = 1, mult.arrow = 1.1, mar.percent = 0.05, select.spe = sel.sp)\ntext(-0.92, 0.72, \"a\", cex = 2)\ntriplot.rda(spe.rda, site.sc = \"lc\", scaling = 2, cex.char2 = 0.7, pos.env = 3, \n            pos.centr = 1, mult.arrow = 1.1, mar.percent = 0.05, select.spe = sel.sp)\ntext(-2.82, 2, \"b\", cex = 2)\n\n# Global test of the RDA result\nanova(spe.rda, permutations = how(nperm = 999))\n# Tests of all canonical axes\nanova(spe.rda, by = \"axis\", permutations = how(nperm = 999))\n\n## Partial RDA: effect of water chemistry, holding physiography\n## constant\n\n# Simple syntax; X and W may be in separate tables of quantitative \n# variables\n(spechem.physio <- rda(spe.hel, envchem, envtopo))\nsummary(spechem.physio)\n\n# Formula interface; X and W variables must be in the same \n# data frame\n(spechem.physio2 <- rda(spe.hel ~ pH + har + pho + nit + amm + oxy + bod \n                        + Condition(ele + slo + dis), data = env2))\n\n# Test of the partial RDA, using the results with the formula \n# interface to allow the tests of the axes to be run\nanova(spechem.physio2, permutations = how(nperm = 999))\nanova(spechem.physio2, permutations = how(nperm = 999), by = \"axis\")\n\n# Partial RDA triplots (with fitted site scores) \n# with function triplot.rda\n# Scaling 1\ndev.new(title = \"Partial RDA\",width = 12, height = 6, noRStudioGD = TRUE)\npar(mfrow = c(1, 2))\ntriplot.rda(spechem.physio, site.sc = \"lc\", scaling = 1, \n            cex.char2 = 0.8, pos.env = 3, mar.percent = 0)\ntext(-0.58, 0.64, \"a\", cex = 2)\n\n# Scaling 2\ntriplot.rda(spechem.physio, site.sc = \"lc\", scaling = 2, cex.char2 = 0.8, \n            pos.env = 3, mult.spe = 1.1, mar.percent = 0.04)\ntext(-3.34, 3.64, \"b\", cex = 2)\n\n\n#########################################\n###---ab hier im Kurs nicht gezeigt---###\n\n# Variance inflation factors (VIF) in two RDAs\n# First RDA of this Chapter: all environmental variables\n# except dfs\nvif.cca(spe.rda)\n# Partial RDA physiographic variables only\nspechem.physio<-rda(spe.hel, envchem, envtopo)\nvif.cca(spechem.physio) \n\n## Forward selection of explanatory variables\n# RDA with all explanatory variables except dfs\nspe.rda.all <- rda(spe.hel ~ ., data = env2)\n# Global adjusted R^2\n(R2a.all <- RsquareAdj(spe.rda.all)$adj.r.squared)\n\n# Forward selection using forward.sel()\nif(!require(adespatial)){install.packages(\"adespatial\")}\nlibrary(adespatial)\nforward.sel(spe.hel, env2, adjR2thresh = R2a.all)\n\n# Forward selection using vegan's ordistep()\n# This function allows the use of factors. \nmod0 <- rda(spe.hel ~ 1, data = env2)\nstep.forward <- \n  ordistep(mod0, \n           scope = formula(spe.rda.all), \n           direction = \"forward\", \n           permutations = how(nperm = 499)\n  )\nRsquareAdj(step.forward)\n\n# Backward elimination using vegan's ordistep()\nstep.backward <-\n  ordistep(spe.rda.all, permutations = how(nperm = 499))\n# With redundant argument direction = \"backward\":\n# step.backward <-\n#  ordistep(spe.rda.all,\n#           direction = \"backward\",\n#           permutations = how(nperm = 499)\nRsquareAdj(step.backward)\n\n# Forward selection using vegan's ordiR2step()\n# using a double stopping criterion (Blanchet et al. 2008a)\n# and object env containing only quantitative variables.\nstep2.forward <- \n  ordiR2step(mod0, \n             scope = formula(spe.rda.all), \n             direction = \"forward\", \n             R2scope = TRUE,\n             permutations = how(nperm = 199)\n  )\nRsquareAdj(step2.forward)\n\n# Forward selection using vegan's ordiR2step()\n# using a double stopping criterion (Blanchet et al. 2008a)\n# and object env3 containing a factor.\nmod00 <- rda(spe.hel ~ 1, data = env3)\nspe.rda2.all <- rda(spe.hel ~ ., data = env3)\nstep3.forward <- \n  ordiR2step(mod00, \n             scope = formula(spe.rda2.all), \n             direction = \"forward\", \n             permutations = how(nperm = 199)\n  )\nRsquareAdj(step3.forward)\n# Note that the adjusted R^2 of the complete model is smaller\n# than that of the complete RDA with only quantitative\n# variables.\n# Some information has been lost when transforming the\n# quantitative slo variable into a factor with 4 levels.\n\n# Partial forward selection with variable slo held constant\nmod0p <- rda(spe.hel ~ Condition(slo), data = env2)\nmod1p <- rda(spe.hel ~ . + Condition(slo), data = env2)\nstep.p.forward <- \n  ordiR2step(mod0p, \n             scope = formula(mod1p), \n             direction = \"forward\", \n             permutations = how(nperm = 199)\n  )\n\n\n## Parsimonious RDA\n(spe.rda.pars <- rda(spe.hel ~ ele + oxy + bod, data = env2))\nanova(spe.rda.pars, permutations = how(nperm = 999))\nanova(spe.rda.pars, permutations = how(nperm = 999), by = \"axis\")\n(R2a.pars <- RsquareAdj(spe.rda.pars)$adj.r.squared)\n# Compare the variance inflation factors\nvif.cca(spe.rda.all)\nvif.cca(spe.rda.pars)\n\n# Triplots of the parsimonious RDA (with fitted site scores)\ndev.new(title = \"Parsimonious RDA scaling 1\", width = 7, height = 12, noRStudioGD = TRUE)\npar(mfrow = c(2, 1))\n# Scaling 1\ntriplot.rda(spe.rda.pars, \n     site.sc = \"lc\", \n     scaling = 1, \n     cex.char2 = 0.8, \n     pos.env = 2, \n     mult.spe = 0.9, \n     mult.arrow = 0.92, \n     mar.percent = 0.01)\n\n# Scaling 2\ntriplot.rda(spe.rda.pars, \n     site.sc = \"lc\", \n     scaling = 2, \n     cex.char2 = 0.8, \n     pos.env = 2, \n     mult.spe = 1.1, \nmar.percent = -0.02)\n\n\n## Environmental reconstruction (calibration) with RDA\n\n# New (fictitious) objects with fish abundances\n# Variables(species) must match those in the original data set in \n# name, number and order\n# New site 1 is made from rounded means of species in sites 1 to 15\nsite1.new <- round(apply(spe[1:15, ], 2, mean))\n# New site 2 is made from rounded means of species in sites 16 - 29\nsite2.new <- round(apply(spe[16:29, ], 2, mean))\nobj.new <- t(cbind(site1.new, site2.new))\n\n# Hellinger transformation of the new sites\nobj.new.hel <- decostand(obj.new, \"hel\")\n\n# Calibration\ncalibrate(spe.rda.pars, obj.new.hel)\n\n# Compare with real values at sites 7 to 9 and 22 to 24: \nenv2[7:9, c(1, 9, 10)]\nenv2[22:24, c(1, 9, 10)]\n\n###---bis hier im Kurs nicht gezeigt---###\n##########################################\n\n# Explanation of fraction labels (two, three and four explanatory \n# matrices) with optional colours\ndev.new(title = \"Symbols of variation partitioning fractions\", width = 6, height = 2.3, noRStudioGD = TRUE)\npar(mfrow = c(1, 3), mar = c(1, 1, 1, 1))\nshowvarparts(2, bg = c(\"red\", \"blue\"))\nshowvarparts(3, bg = c(\"red\", \"blue\", \"yellow\"))\nshowvarparts(4, bg = c(\"red\", \"blue\", \"yellow\", \"green\"))\n\n## 1. Variation partitioning with all explanatory variables\n##    (except dfs)\n(spe.part.all <- varpart(spe.hel, envchem, envtopo))\n\n# Plot of the partitioning results\npar(mfrow = c(1, 1))\ndev.new(title = \"Variation partitioning - all variables\", noRStudioGD = TRUE)\nplot(spe.part.all, digits = 2, bg = c(\"red\", \"blue\"),\n     Xnames = c(\"Chemistry\", \"Physiography\"), \n     id.size = 0.7)\n\n#########################################\n###---ab hier im Kurs nicht gezeigt---###\n\n## 2. Variation partitioning after forward selection of explanatory \n##    variables\n# Separate forward selection in each subset of environmental \n# variables\nspe.chem <- rda(spe.hel, envchem)\nR2a.all.chem <- RsquareAdj(spe.chem)$adj.r.squared\nforward.sel(spe.hel, \n            envchem, \n            adjR2thresh = R2a.all.chem, \n            nperm = 9999\n)\n\nspe.topo <- rda(spe.hel, envtopo)\nR2a.all.topo <- RsquareAdj(spe.topo)$adj.r.squared\nforward.sel(spe.hel, \n            envtopo, \n            adjR2thresh = R2a.all.topo, \n            nperm = 9999\n)\n\n# Parsimonious subsets of explanatory variables, based on forward \n# selections\nnames(envchem)\nenvchem.pars <- envchem[, c(4, 6, 7)]\nnames(envtopo)\nenvtopo.pars <- envtopo[, c(1, 2)]\n\n# Variation partitioning\n(spe.part <- varpart(spe.hel, envchem.pars, envtopo.pars))\ndev.new(title = \"Variation partitioning - parsimonious subsets\", noRStudioGD = TRUE)\nplot(spe.part, digits = 2,  bg = c(\"red\", \"blue\"), \n     Xnames = c(\"Chemistry\", \"Physiography\"), \n     id.size = 0.7)\n\n# Tests of all testable fractions\n# Test of fraction [a+b]\nanova(rda(spe.hel, envchem.pars), permutations = how(nperm = 999))\n# Test of fraction [b+c]\nanova(rda(spe.hel, envtopo.pars), permutations = how(nperm = 999))\n# Test of fraction [a+b+c]\nenv.pars <- cbind(envchem.pars, envtopo.pars)\nanova(rda(spe.hel, env.pars), permutations = how(nperm = 999))\n# Test of fraction [a]\nanova(rda(spe.hel, envchem.pars, envtopo.pars), \n      permutations = how(nperm = 999)\n)\n# Test of fraction [c]\nanova(rda(spe.hel, envtopo.pars, envchem.pars), \n      permutations = how(nperm = 999))\n\n\n## 3. Variation partitioning without the 'nit' variable\nenvchem.pars2 <- envchem[, c(6, 7)]\n(spe.part2 <- varpart(spe.hel, envchem.pars2, envtopo.pars))\ndev.new(title = \"Variation partitioning - parsimonious subset 2\", noRStudioGD = TRUE)\nplot(spe.part2, digits = 2)\n\n\n## Two-way MANOVA by RDA\n\n# Creation of a factor 'elevation' (3 levels, 9 sites each)\nele.fac <- gl(3, 9, labels = c(\"high\", \"mid\", \"low\"))\n# Creation of a factor mimicking 'pH'\npH.fac <- \n  as.factor(c(1, 2, 3, 2, 3, 1, 3, 2, 1, 2, 1, 3, 3, 2, \n              1, 1, 2, 3, 2, 1, 2, 3, 2, 1, 1, 3, 3))\n# Is the two-way factorial design balanced?\ntable(ele.fac, pH.fac)\n\n# Creation of Helmert contrasts for the factors and the interaction\nele.pH.helm <- \n  model.matrix(~ ele.fac * pH.fac, \n               contrasts = list(ele.fac = \"contr.helmert\", \n                                pH.fac = \"contr.helmert\"))[, -1]\nele.pH.helm\nele.pH.helm2 <- \n  model.matrix(~ ele.fac + pH.fac, \n               contrasts = list(ele.fac = \"contr.helmert\", \n                                pH.fac = \"contr.helmert\"))[, -1]\ncolnames(ele.pH.helm2)\n\n# Check property 1 of Helmert contrasts : all variables sum to 0\napply(ele.pH.helm, 2, sum)\n# Check property 2 of Helmert contrasts: their crossproducts \n# must be 0 within and between groups (factors and interaction)\ncrossprod(ele.pH.helm)\n\n# Verify multivariate homogeneity of within-group covariance\n# matrices using the betadisper() function (vegan package)\n# implementing Marti Anderson's testing method (Anderson 2006)\n\n# To avoid the rist of heterogeneity of variances with respect to \n# one factor because of the dispersion in the other (in case of \n# interaction), creation of a factor crossing the two factors, i.e. \n# defining the cell-by-cell attribution of the data\ncell.fac <- gl(9, 3) \n\nspe.hel.d1 <- dist(spe.hel[1:27, ])\n\n# Test of homogeneity of within-cell dispersions\n(spe.hel.cell.MHV <- betadisper(spe.hel.d1, cell.fac))\nanova(spe.hel.cell.MHV)     # Parametric test (not recommended here)\npermutest(spe.hel.cell.MHV)\n\n# Alternatively, test homogeneity of dispersions within each\n# factor. \n# These tests ore more robust with this small example because \n# there are now 9 observations per group instead of 3. \n# Factor \"elevation\"\n(spe.hel.ele.MHV <- betadisper(spe.hel.d1, ele.fac))\nanova(spe.hel.ele.MHV)     # Parametric test (not recommended here)\npermutest(spe.hel.ele.MHV) # Permutation test\n# Factor \"pH\"\n(spe.hel.pH.MHV <- betadisper(spe.hel.d1, pH.fac))\nanova(spe.hel.pH.MHV)\npermutest(spe.hel.pH.MHV) # Permutation test\n\n\n## Step-by-step procedure using function rda()\n\n# Test the interaction first. Factors ele and pH (columns 1-4)  \n# are assembled to form the matrix of covariables for the test.\ninteraction.rda <- \n  rda(spe.hel[1:27, ], \n      ele.pH.helm[, 5:8], \n      ele.pH.helm[, 1:4])\nanova(interaction.rda, permutations = how(nperm = 999))\n\n# Test the main factor ele. The factor pH and the interaction\n# are assembled to form the matrix of covariables. \nfactor.ele.rda <- \n  rda(spe.hel[1:27, ], \n      ele.pH.helm[, 1:2], \n      ele.pH.helm[, 3:8])\nanova(factor.ele.rda, \n      permutations = how(nperm = 999), \n      strata = pH.fac\n)\n\n# Test the main factor pH. The factor ele and the interaction\n# are assembled to form the matrix of covariables. \nfactor.pH.rda <- \n  rda(spe.hel[1:27, ], \n      ele.pH.helm[, 3:4], \n      ele.pH.helm[, c(1:2, 5:8)]) \nanova(factor.pH.rda, \n      permutations = how(nperm = 999), \n      strata = ele.fac)\n\n# RDA with the significant factor ele\nele.rda.out <- rda(spe.hel[1:27, ]~ ., as.data.frame(ele.fac))\n# Triplot with \"wa\" sites related to factor centroids, and species \n# arrows\ndev.new(title = \"Multivariate ANOVA - elevation\", noRStudioGD = TRUE)\nplot(ele.rda.out, \n     scaling = 1, \n     display = \"wa\", \n     main = \"Multivariate ANOVA, factor elevation - scaling 1 - \n     wa scores\")\nordispider(ele.rda.out, ele.fac, \n           scaling = 1, \n           label = TRUE, \n           col = \"blue\"\n)\nspe.sc1 <- \n  scores(ele.rda.out, \n         scaling = 1, \n         display = \"species\")\narrows(0, 0, \n       spe.sc1[, 1] * 0.3, \n       spe.sc1[, 2] * 0.3, \n       length = 0.1, \n       angle = 10, \n       col = \"red\"\n)\ntext(\n  spe.sc1[, 1] * 0.3, \n  spe.sc1[, 2] * 0.3, \n  labels = rownames(spe.sc1), \n  pos = 4, \n  cex = 0.8, \n  col = \"red\"\n)\n\n## Permutational MANOVA using adonis2()\nadonis2(spe.hel[1:27, ] ~ ele.fac * pH.fac, \n        method = \"euc\", \n        by = \"term\"\n)\n\n\n## RDA with a single second degree explanatory variable\n\n# Create a matrix of dfs and its orthogonal second degree term \n# using function poly()\ndfs.df <- poly(dfs, 2)\ncolnames(dfs.df) <- c(\"dfs\", \"dfs2\")\n# Verify that the polynomial terms are orthogonal\ncor(dfs.df)\n# Find out if both variables are significant\nforward.sel(spe.hel, dfs.df)\n\n# RDA and test\nspe.dfs.rda <- rda(spe.hel ~ ., as.data.frame(dfs.df))\nanova(spe.dfs.rda)\n\n# Triplot using \"lc\" (model) site scores and scaling 2\ndev.new(title = \"RDA w. 2nd-degree variable - scaling 2\", noRStudioGD = TRUE)\ntriplot.rda(spe.dfs.rda, \n            site.sc = \"lc\", \n            scaling = 2, \n            plot.sites = FALSE, \n            pos.env = 1, \n            mult.arrow = 0.9, \n            move.origin = c(-0.25, 0), \n            mar.percent = 0)\n\n\n\n## Polynomial RDA, second degree, with forward selection\nsource ('https://raw.githubusercontent.com/zdealveindy/anadat-polyvars.R')\n## among all environmental variables\nenv.square <- polyvars(env2, degr = 2)\nnames(env.square)\nspe.envsq.rda <- rda(spe.hel ~ ., env.square)\nR2ad <- RsquareAdj(spe.envsq.rda)$adj.r.squared\nspe.envsq.fwd <- \n  forward.sel(spe.hel, \n              env.square, \n              adjR2thresh = R2ad)\nspe.envsq.fwd\nenvsquare.red <- env.square[, sort(spe.envsq.fwd$order)]\n(spe.envsq.fwd.rda <- rda(spe.hel ~., envsquare.red))\nRsquareAdj(spe.envsq.fwd.rda)\nsummary(spe.envsq.fwd.rda)\n\n# Triplot using lc (model) site scores and scaling 2\ndev.new(title = \"RDA w. 2nd-order variables - scaling 2\", noRStudioGD = TRUE)\ntriplot.rda(spe.envsq.fwd.rda, \n            site.sc = \"lc\", \n            scaling = 2, \n            plot.sites = FALSE, \n            pos.env = 1, \n            mult.arrow = 0.9, \n            mult.spe = 0.9,\n            mar.percent = 0)\n\n\n## Distance-based redundancy analysis (db-RDA) :  square-rooted\n## percentage difference response matrix and 'ele' factor with \n## factor pH and interaction as covariables\n\n# Rename columns of matrix of Helmert contrasts (for convenience)\ncolnames(ele.pH.helm) <- \n  c(\"ele1\", \"ele2\", \"pH1\", \"pH2\", \"ele1pH1\", \"ele1pH2\", \n    \"ele2pH1\", \"ele2pH2\" )\n\n# Create the matrix of covariables. MUST be of class matrix, \n# NOT data.frame\ncovariables <- ele.pH.helm[, 3:8]\n\n# Compute the dissimilarity response matrix with vegans vegdist()\nspe.bray27 <- vegdist(spe[1:27, ], \"bray\")\n# or with function dist.ldc() of adespatial\nspe.bray27 <- dist.ldc(spe[1:27, ], \"percentdiff\")\n\n# 1. dbrda() on the square-rooted dissimilarity matrix\nbray.ele.dbrda <-  dbrda(\n  sqrt(spe.bray27) ~ ele.pH.helm[, 1:2] + Condition(covariables))\nanova(bray.ele.dbrda, permutations = how(nperm = 999)) \n\n# 2. capscale() with raw (site by species) data\n# Rename factor (cosmetic for plot)\nele.fac. <- ele.fac\nbray.env.cap <- \n  capscale(spe[1:27, ] ~ ele.fac. + Condition(covariables), \n           data = as.data.frame(ele.pH.helm), \n           distance = \"bray\", \n           add = \"lingoes\", \n           comm = spe[1:27, ])\nanova(bray.env.cap, permutations = how(nperm = 999))\n# Plot with \"wa\" scores to see dispersion of sites around the \n# factor levels\ntriplot.rda(bray.env.cap, site.sc = \"wa\", scaling = 1)\n\n# The results of the two analyses are slightly different because\n# (1) the test is not performed in the same manner and (2) the \n# correction to make the response matrix Euclidean is not the same.\n\n\n### NOT IN THE BOOK ###\n\n## Alternative ways of computing db-RDA\n\n# 1. capscale() with raw (site by species) data\n# Alternate coding with explicit covariables coming from same\n# object as the constraining variables : \nbray.env.capscale <- \n  capscale(spe[1:27, ] ~ ele1 + ele2 + \n             Condition(pH1 + pH2 + ele1pH1 + ele1pH2 + ele2pH1 + ele2pH2), \n           data = as.data.frame(ele.pH.helm), \n           distance = \"bray\", \n           add = \"cailliez\", \n           comm = spe[1:27, ])\nanova(bray.env.capscale, permutations = how(nperm = 999))\n\n# 2. PCoA with Lingoes (1971) correction\n#    Explicit steps\nif(!require(ape)){install.packages(\"ape\")}\nlibrary(ape)\nspe.bray27.lin <- pcoa(spe.bray27, correction = \"lingoes\") \nspe.bray27.lingoes <- spe.bray27.lin$vectors.cor \n# Test of the factor ele. Factor pH and interaction, Helmert-coded,\n# form the matrix of covariables\nspe.L.ele.dbrda <- \n  rda(spe.bray27.lingoes, \n      ele.pH.helm[, 1:2], \n      covariables) \nanova(spe.L.ele.dbrda, permutations = how(nperm = 999))\n\n# Same by staying in {vegan} and using wcmdscale() : \nspe.lingoes2 <- wcmdscale(spe.bray27, add = \"lingoes\") \nanova(rda(spe.lingoes2 ~ ele.pH.helm[, 1:2] + Condition(covariables)))\n\n### END NOT IN THE BOOK ###\n\n\n\n# -----------------------------------------------------------------\n# The Code It Yourself corner #3\n\nmyRDA <- function(Y, X)\n{\n  \n  ## 1. Preparation of the data\n  \n  Y.mat <- as.matrix(Y)\n  Yc <- scale(Y.mat, scale = FALSE)\n  \n  X.mat <- as.matrix(X)\n  Xcr <- scale(X.mat)\n  \n  # Dimensions\n  n <- nrow(Y)\n  p <- ncol(Y)\n  m <- ncol(X)\n  \n  ## 2. Computation of the multivariate linear regression\n  \n  # Matrix of regression coefficients (eq. 11.9)\n  B <- solve(t(Xcr) %*% Xcr) %*% t(Xcr) %*% Yc\n  \n  # Matrix of fitted values (eq. 11.10)\n  Yhat <- Xcr %*% B\n  \n  # Matrix of residuals\n  Yres <- Yc - Yhat\n  \n  \n  ## 3. PCA on fitted values\n  \n  # Covariance matrix (eq. 11.12)\n  S <- cov(Yhat)\n  \n  # Eigenvalue decomposition\n  eigenS <- eigen(S)\n  \n  # How many canonical axes?\n  kc <- length(which(eigenS$values > 0.00000001))\n  \n  # Eigenvalues of canonical axes\n  ev <- eigenS$values[1 : kc]\n  # Total variance (inertia) of the centred matrix Yc\n  trace = sum(diag(cov(Yc)))\n  \n  # Orthonormal eigenvectors (contributions of response \n  # variables, scaling 1)\n  U <- eigenS$vectors[, 1 : kc]\n  row.names(U) <- colnames(Y)\n  \n  # Site scores (vegan's wa scores, scaling 1; eq.11.17)\n  F <- Yc %*% U\n  row.names(F) <- row.names(Y)\n  \n  # Site constraints (vegan's 'lc' scores, scaling 1; \n  # eq. 11.18)\n  Z <- Yhat %*% U\n  row.names(Z) <- row.names(Y)\n  \n  # Canonical coefficients (eq. 11.19)\n  CC <- B %*% U\n  row.names(CC) <- colnames(X)\n  \n  # Explanatory variables\n  # Species-environment correlations\n  corXZ <- cor(X, Z)\n  \n  # Diagonal matrix of weights\n  D <- diag(sqrt(ev / trace))\n  \n  # Biplot scores of explanatory variables\n  coordX <- corXZ %*% D    # Scaling 1\n  coordX2 <- corXZ         # Scaling 2\n  row.names(coordX) <- colnames(X)\n  row.names(coordX2) <- colnames(X)\n  \n  # Scaling to sqrt of the relative eigenvalue\n  # (for scaling 2)\n  U2 <- U %*% diag(sqrt(ev))\n  row.names(U2) <- colnames(Y)\n  F2 <- F %*% diag(1/sqrt(ev))\n  row.names(F2) <- row.names(Y)\n  Z2 <- Z %*% diag(1/sqrt(ev))\n  row.names(Z2) <- row.names(Y)\n  \n  # Unadjusted R2\n  R2 <- sum(ev/trace)\n  # Adjusted R2\n  R2a <- 1 - ((n - 1)/(n - m - 1)) * (1 - R2)\n  \n  \n  # 4. PCA on residuals\n  # Write your own code as in Chapter 5. It could begin \n  # with : \n  #     eigenSres <- eigen(cov(Yres))\n  #     evr <- eigenSres$values\n  \n  \n  # 5. Output\n  \n  result <- \n    list(trace, R2, R2a, ev, CC, U, F, Z, coordX, \n         U2, F2, Z2, coordX2)\n  names(result) <- \n    c(\"Total_variance\", \"R2\", \"R2adj\", \"Can_ev\", \n      \"Can_coeff\", \"Species_sc1\", \"wa_sc1\", \"lc_sc1\", \n      \"Biplot_sc1\", \"Species_sc2\", \"wa_sc2\", \"lc_sc2\", \n      \"Biplot_sc2\") \n  \n  result\n}\n\n\ndoubs.myRDA <- myRDA(spe.hel, env2)\nsummary(doubs.myRDA)\n# Retrieve adjusted R-square\ndoubs.myRDA$R2adj\n\n###################################################################\n\n\n\n# Canonical correspondence analysis (CCA) =========================\n\n## CCA of the raw fish species data, constrained by all the \n## environmental variables in env3\n(spe.cca <- cca(spe ~ ., env3))\nsummary(spe.cca)  # Scaling 2 (default)\n\n# Unadjusted and adjusted R^2 - like statistics\nRsquareAdj(spe.cca)\n\n## CCA triplots (using lc site scores)\ndev.new(title = \"CCA triplot - lc scores\", width = 6, height = 12, noRStudioGD = TRUE)\npar(mfrow = c(2, 1))\n# Scaling 1: species scores scaled to the relative eigenvalues, \n# sites are weighted averages of the species\nplot(spe.cca, \n     scaling = 1, \n     display = c(\"sp\", \"lc\", \"cn\"), \n     main = \"Triplot CCA spe ~ env3 - scaling 1\"\n)\ntext(-2.3, 4.1, \"a\", cex = 1.5)\n# Default scaling 2: site scores scaled to the relative \n# eigenvalues, species are weighted averages of the sites\nplot(spe.cca, \n     display = c(\"sp\", \"lc\", \"cn\"), \n     main = \"Triplot CCA spe ~ env3 - scaling 2\")\ntext(-2.3, 2.6, \"b\", cex = 1.5)\n\ndev.new(title = \"CCA biplot - without species\", width = 9, height = 5, noRStudioGD = TRUE)\npar(mfrow = c(1, 2))\n# CCA scaling 1 biplot without species (using lc site scores)\nplot(spe.cca, \n     scaling = 1, \n     display = c(\"lc\", \"cn\"), \n     main = \"Biplot CCA spe ~ env3 - scaling 1\"\n)\n# CCA scaling 2 biplot with species but without sites\nplot(spe.cca, \n     scaling = 2, \n     display = c(\"sp\", \"cn\"), \n     main = \"Biplot CCA spe ~ env3 - scaling 2\"\n)\n\n# Permutation test of the overall analysis\nanova(spe.cca, permutations = how(nperm = 999))\n# Permutation test of each axis\nanova(spe.cca, by = \"axis\", permutations = how(nperm = 999))\n\n\n## CCA-based forward selection using vegan's ordistep()\n\n# This function allows the use of factors like 'slo' in env3\ncca.step.forward <- \n  ordistep(cca(spe ~ 1, data = env3), \n           scope = formula(spe.cca), \n           direction = \"forward\", \n           permutations = how(nperm = 199))\n\n\n## Parsimonious CCA using ele, oxy and bod\nspe.cca.pars <- cca(spe ~ ele + oxy + bod, data = env3)\nanova(spe.cca.pars, permutations = how(nperm = 999))\nanova(spe.cca.pars, permutations = how(nperm = 999), by = \"axis\")\n# R-square like statistics\nRsquareAdj(spe.cca.pars)\n# Compare variance inflation factors\nvif.cca(spe.cca)\nvif.cca(spe.cca.pars)\n\n# -----------------------------------------------------------------\n\n## A simple function to compute CCA-based variation partitioning\n## with bootstrap adjusted R-square\n\n# This function is limited to two explanatory matrices\n\nvarpart.cca <- function(Y, X, W)\n{\n  # Computation of the three CCA\n  yx.cca <- cca(Y, X)\n  yw.cca <- cca(Y, W)\n  yxw.cca <- cca(Y, cbind(X, W))\n  \n  # Computation of adjusted inertia\n  fract.ab <- RsquareAdj(yx.cca)$adj.r.squared\n  fract.bc <- RsquareAdj(yw.cca)$adj.r.squared\n  fract.abc <- RsquareAdj(yxw.cca)$adj.r.squared\n  fract.a <- fract.abc-fract.bc\n  fract.b <- fract.ab-fract.a\n  fract.c <- fract.abc-fract.ab\n  fract.d <- 1-fract.abc\n  \n  # Output of results\n  res <- matrix(0, 7, 1)\n  rownames(res) <- \n    c(\"[ab]\", \"[bc]\", \"[abc]\", \"[a]\", \"[b]\", \"[c]\", \"[d]\")\n  colnames(res) <- \"Value\"\n  res[1, 1] <- round(fract.ab, 4)\n  res[2, 1] <- round(fract.bc, 4)\n  res[3, 1] <- round(fract.abc, 4)\n  res[4, 1] <- round(fract.a, 4)\n  res[5, 1] <- round(fract.b, 4)\n  res[6, 1] <- round(fract.c, 4)\n  res[7, 1] <- round(fract.d, 4)\n  \n  res\n}\n\n# -----------------------------------------------------------------\n## Three-dimensional interactive ordination plots\n## (requires vegan3d package)\nif(!require(vegan3d)){install.packages(\"vegan3d\")}\nlibrary(vegan3d)\n\n# Plot of the sites only (wa scores)\nordirgl(spe.cca.pars, type = \"t\", scaling = 1)\n\n# Connect weighted average scores to linear combination scores\norglspider(spe.cca.pars, scaling = 1, col = \"purple\")\n\n# Plot the sites (wa scores) with a clustering result\n# Colour sites according to cluster membership\ngr <- cutree(hclust(vegdist(spe.hel, \"euc\"), \"ward.D2\"), 4)\nordirgl(spe.cca.pars, \n        type = \"t\", \n        scaling = 1, \n        ax.col = \"black\", \n        col = gr + 1\n)\n# Connect sites to cluster centroids\norglspider(spe.cca.pars, gr, scaling = 1)\n\n# Complete CCA 3D triplot\nordirgl(spe.cca.pars, type = \"t\", scaling = 2)\norgltext(spe.cca.pars, \n         display = \"species\", \n         type = \"t\", \n         scaling = 2, \n         col = \"cyan\"\n)\n\n# Plot species groups (Jaccard dissimilarity, useable in R mode)\ngs <- \n  cutree(\n    hclust(vegdist(t(spe), method = \"jaccard\"), \"ward.D2\"), \n    k = 4)\nordirgl(spe.cca.pars, \n        display = \"species\", \n        type = \"t\", \n        col = gs + 1)\n\n\n## Linear discriminant analysis (LDA)\n\n# Ward clustering result of Hellinger-transformed species data, \n# cut into 4 groups\ngr <- cutree(hclust(vegdist(spe.hel, \"euc\"), \"ward.D2\"), k = 4)\n\n# Environmental matrix with only 3 variables (ele, oxy and bod)\nenv.pars2 <- as.matrix(env2[, c(1, 9, 10)])\n\n# Verify multivariate homogeneity of within-group covariance\n# matrices using the betadisper() function {vegan}\nenv.pars2.d1 <- dist(env.pars2)\n(env.MHV <- betadisper(env.pars2.d1, gr))\nanova(env.MHV)\npermutest(env.MHV)  # Permutational test\n\n# Log transform ele and bod\nenv.pars3 <- cbind(log(env2$ele), env2$oxy, log(env2$bod))\ncolnames(env.pars3) <- c(\"ele.ln\", \"oxy\", \"bod.ln\") \nrownames(env.pars3) <- rownames(env2)\nenv.pars3.d1 <- dist(env.pars3)\n(env.MHV2 <- betadisper(env.pars3.d1, gr))\npermutest(env.MHV2)\n\n# Preliminary test :  do the means of the explanatory variable \n# differ among groups?\n# Compute Wilk'S lambda test\n# First way: with function Wilks.test() of package rrcov, Ï2 test\nWilks.test(env.pars3, gr)\n# Second way: with function manova() of stats, which uses\n#             an F-test approximation\nlw <-  manova(env.pars3 ~ as.factor(gr))\nsummary(lw, test = \"Wilks\")\n\n\n## Computation of LDA - identification functions (on unstandardized \n## variables)\n\nenv.pars3.df <- as.data.frame(env.pars3)\n(spe.lda <- lda(gr ~ ele.ln + oxy + bod.ln, data = env.pars3.df))\n# Alternate coding without formula interface :  \n#    spe.lda <- lda(env.pars3.df, gr)\n# The result object contains the information necessary to interpret \n# the LDA\nsummary(spe.lda)\n\n# Display the group means for the 3 variables\nspe.lda$means\n\n# Extract the unstandardized identification functions (matrix C, \n# eq. 11.33 in Legendre and Legendre 2012)\n(C <- spe.lda$scaling)\n\n# Classification of two new objects (identification)\n# A new object is created with two sites: \n#     (1) ln(ele) = 6.8, oxygen = 9 and ln(bod) = 0.8 \n# and (2) ln(ele) = 5.5, oxygen = 10 and ln(bod) = 1.0\nnewo <- data.frame(c(6.8, 5.5), c(9, 10), c(0.8, 1))\ncolnames(newo) <- colnames(env.pars3)\nnewo\n(predict.new <- predict(spe.lda, newdata = newo))\n\n\n## Computation of LDA - discrimination functions (on standardized \n## variables)\n\nenv.pars3.sc <- as.data.frame(scale(env.pars3.df))\nspe.lda2 <- lda(gr ~ ., data = env.pars3.sc)\n\n# Display the group means for the 3 variables\nspe.lda2$means\n\n# Extract the classification functions\n(C2 <- spe.lda2$scaling)\n\n# Compute the canonical eigenvalues\nspe.lda2$svd^2\n\n# Position the objects in the space of the canonical variates\n(Fp2 <- predict(spe.lda2)$x)\n# alternative way :  Fp2 <- as.matrix(env.pars3.sc) %*% C2\n\n# Classification of the objects\n(spe.class2 <- predict(spe.lda2)$class)\n\n# Posterior probabilities of the objects to belong to the groups\n# (rounded for easier interpretation)\n(spe.post2 <- round(predict(spe.lda2)$posterior, 2))\n\n# Contingency table of prior versus predicted classifications\n(spe.table2 <- table(gr, spe.class2))\n\n# Proportion of correct classification (classification success)\ndiag(prop.table(spe.table2, 1))\n\n# Plot the LDA results using the homemade function plot.lda()\nsource('https://raw.githubusercontent.com/zdealveindy/anadat-r/master/scripts/NumEcolR2/plot.lda.R')\nif(!require(ellipse)){install.packages(\"ellipse\")}\nlibrary(ellipse)\ndev.new(title = \"Discriminant analysis\", noRStudioGD = TRUE)\nplot.lda(lda.out = spe.lda2, \n         groups = gr, \n         plot.sites = 2, \n         plot.centroids = 1, \n         mul.coef = 2.35)\n\n# LDA with jackknife-based classification (i.e., leave-one-out \n# cross-validation)\n(spe.lda.jac <- \n    lda(gr ~ ele.ln + oxy + bod.ln, \n        data = env.pars3.sc, \n        CV = TRUE))\nsummary(spe.lda.jac)\n\n# Numbers and proportions of correct classification\nspe.jac.class <- spe.lda.jac$class\nspe.jac.table <- table(gr, spe.jac.class)\n# Classification success\ndiag(prop.table(spe.jac.table, 1))\n\n\n# NOT IN THE BOOK :  ==============================================\n# Example of Legendre and Legendre (2012, p. 683)\n\ngrY <- c(1, 1, 1, 2, 2, 3, 3)\nx1 <- c(1, 2, 2, 8, 8, 8, 9)\nx2 <- c(2, 2, 1, 7, 6, 3, 3)\nX <- as.data.frame(cbind(x1, x2))\n\n# Computation of unstandardized identification functions\nunstand.lda <- lda(grY ~ ., data = X)\n\n# Computation of standardized discriminant functions\nX.sc <- as.data.frame(scale(X))\nstand.lda <- lda(grY ~ ., data = X.sc)\n\n# END NOT IN THE BOOK ============================================= \n\n\n\n## Principal response curves (PRC)\n\n# Code from the prc() help file, with additional comments\n# Chlorpyrifos experiment and experimental design :  Pesticide\n# treatment in ditches (replicated) and followed over from 4 weeks\n# before to 24 weeks after exposure \n\n# Extract the data (available in vegan)\ndata(pyrifos)\n\n# Create factors for time (week) and treatment (dose). Create an\n# additional factor \"ditch\" representing the mesocosm, for testing \n# purposes\nweek <-\n  gl(11, 12, \n     labels = c(-4, -1, 0.1, 1, 2, 4, 8, 12, 15, 19, 24))\ndose <- \n  factor(rep(c(0.1, 0, 0, 0.9, 0, 44, 6, 0.1, 44, 0.9, 0, 6), \n             11))\nditch <- gl(12, 1, length = 132)\n\n# PRC\nmod <- prc(pyrifos, dose, week)\nmod            # Modified RDA\nsummary(mod)   # Results formatted as PRC\n\n# PRC plot; at the right of it, only species with large total\n# (log-transformed) abundances are reported\nlogabu <- colSums(pyrifos)\ndev.new(title = \"PRC\", noRStudioGD = TRUE)\nplot(mod, select = logabu > 200,main = \"PRC\")\n\n# Statistical test\n# Ditches are randomized, we have a time series, and are only\n# interested in the first axis\nctrl <- \n  how(plots = Plots(strata = ditch, type = \"free\"), \n      within = Within(type = \"series\"), nperm = 999)\nanova(mod, permutations = ctrl, first = TRUE)\n\n## Predictive co-correspondence analysis (CoCA)\nif(!require(cocorresp)){install.packages(\"cocorresp\")}\nlibrary(cocorresp)\n\ndata(bryophyte)\ndata(vascular)\n\n# Co-correspondence analysis is computed using the function coca()\n# The default option is method = \"predictive\" \n(carp.pred <- coca(bryophyte ~ ., data = vascular))\n\n# Leave-one-out cross-validation\ncrossval(bryophyte, vascular)\n\n# Permutation test\n(carp.perm <- permutest(carp.pred, permutations = 99))\n\n# Only two significant axes: refit\n(carp.pred <- coca(bryophyte ~ ., data = vascular, n.axes = 2))\n\n# Extract the site scores and the species loadings used in\n# the biplots\ncarp.scores <- scores(carp.pred)\nload.bryo <- carp.pred$loadings$Y\nload.plant <- carp.pred$loadings$X\n\n# We have generated two plots. As in ter Braak and Schaffers\n# (2004, Fig. 3), in both plots the site scores are derived\n# from the vascular plants (carp.scores$sites$X) and the\n# species scores are the \"loadings with respect to\n# normalized site scores\"\n\n# Printing options:\n?plot.predcoca  \n\ndev.new(title = \"Predictive co-correspondence analysis (CoCA)\", width = 12, height = 6, noRStudioGD = TRUE)\npar(mfrow = c(1, 2))\nplot(carp.pred, \n     type = \"none\", \n     main = \"Bryophytes\", \n     xlim = c(-2, 3), \n     ylim = c(-3, 2))\n\npoints(carp.scores$sites$X, pch = 16, cex = 0.5)\ntext(load.bryo, \n     labels = rownames(load.bryo), \n     cex = 0.7, \n     col = \"red\"\n) \nplot(carp.pred, \n     type = \"none\", \n     main = \"Vascular plants\", \n     xlim = c(-2, 3), \n     ylim = c(-3, 2)\n)\npoints(carp.scores$sites$X, pch = 16, cex = 0.5)\ntext(load.plant, \n     labels = rownames(load.plant), \n     cex = 0.7, \n     col = \"blue\"\n) \n\n# Detach package cocorresp to avoid conflicts with ade4:\ndetach(\"package:cocorresp\", unload = TRUE)\n# If not sufficient:\nunloadNamespace(\"cocorresp\")\n\n\n## Canonical correlation analysis (CCorA)\n\n# Preparation of data (transformations to make variable \n# distributions approximately symmetrical)\nenvchem2 <- envchem\nenvchem2$pho <- log(envchem$pho)\nenvchem2$nit <- sqrt(envchem$nit)\nenvchem2$amm <- log1p(envchem$amm)\nenvchem2$bod <- log(envchem$bod)\nenvtopo2 <- envtopo\nenvtopo2$ele <- log(envtopo$ele)\nenvtopo2$slo <- log(envtopo$slo)\nenvtopo2$dis <- sqrt(envtopo$dis)\n\n# CCorA (on standardized variables)\nchem.topo.ccora <- \n  CCorA(envchem2, envtopo2, \n        stand.Y = TRUE, \n        stand.X = TRUE, \n        permutations = how(nperm = 999))\nchem.topo.ccora\ndev.new(title = \"Canonical correlation analysis (CCorA)\", width = 9, height = 6, noRStudioGD = TRUE)\nbiplot(chem.topo.ccora, plot.type = \"biplot\")\n\n\n## Co-inertia analysis\n# PCA on both matrices using ade4 functions\nif(!require(ade4)){install.packages(\"ade4\")}\nlibrary(ade4)\n\ndudi.chem <- dudi.pca(envchem2, \n                      scale = TRUE, \n                      scannf = FALSE)\ndudi.topo <- dudi.pca(envtopo2, \n                      scale = TRUE, \n                      scannf = FALSE)\n# Cumulated relative variation of eigenvalues\ncumsum(dudi.chem$eig / sum(dudi.chem$eig))\n# Cumulated relative variation of eigenvalues\ncumsum(dudi.topo$eig / sum(dudi.topo$eig))\n\n# Are the row weights equal in the 2 analyses?\nall.equal(dudi.chem$lw, dudi.topo$lw)\n\n# Co-inertia analysis\ncoia.chem.topo <- coinertia(dudi.chem, dudi.topo, \n                            scannf = FALSE, \n                            nf = 2)\nsummary(coia.chem.topo)\n\n# Relative variation on first eigenvalue\ncoia.chem.topo$eig[1] / sum(coia.chem.topo$eig)\n# Permutation test\nrandtest(coia.chem.topo, nrepet = 999)\n\n# Plot results\ndev.new(title = \"Co-inertia analysis\", noRStudioGD = TRUE)\nplot(coia.chem.topo, main = \"Co-inertia analysis\")\n\n\n# Multiple factor analysis (MFA) ==================================\n\n# MFA on 3 groups of variables : \n# Regroup the 3 tables (Hellinger-transformed species, \n# physiographic variables, chemical variables) \ntab3 <- data.frame(spe.hel, envtopo, envchem)\ndim(tab3)\n# Number of variables in each group\n(grn <- c(ncol(spe), ncol(envtopo), ncol(envchem)))\n\n# Close the previous graphic windows\ngraphics.off()\n# Compute the MFA without multiple plots\nif(!require(FactoMineR)){install.packages(\"FactoMineR\")}\nlibrary(FactoMineR)\n\nt3.mfa <- MFA(\n  tab3,\n  group = grn,\n  type = c(\"c\", \"s\", \"s\"),\n  ncp = 2,\n  name.group = c(\"Fish community\", \"Physiography\", \"Water quality\"),\n  graph = FALSE\n)\nt3.mfa\nsummary(t3.mfa)\nt3.mfa$ind\n\n# Plot the results\ndev.new(title = \"Partial axes\", noRStudioGD = TRUE)\nplot(t3.mfa,\n     choix = \"axes\",\n     habillage = \"group\",\n     shadowtext = TRUE)\ndev.new(title = \"Quantitative variables\", noRStudioGD = TRUE)\nplot(\n  t3.mfa,\n  choix = \"ind\",\n  partial = \"all\",\n  habillage = \"group\")\ndev.new(title = \"Sites\", noRStudioGD = TRUE)\nplot(t3.mfa,\n     choix = \"var\",\n     habillage = \"group\",\n     shadowtext = TRUE)\ndev.new(title = \"Groups\", noRStudioGD = TRUE)\nplot(t3.mfa, choix = \"group\")\n\n\n# RV coefficients with tests (p-values above the diagonal of \n# the matrix)\nrvp <- t3.mfa$group$RV\nrvp[1, 2] <- coeffRV(spe.hel, scale(envtopo))$p.value\nrvp[1, 3] <- coeffRV(spe.hel, scale(envchem))$p.value\nrvp[2, 3] <- coeffRV(scale(envtopo), scale(envchem))$p.value\nround(rvp[-4, -4], 6)\n\n# Eigenvalues, scree plot and broken stick model\nev <- t3.mfa$eig[, 1]\nnames(ev) <- paste(\"MFA\", 1 : length(ev))\nsource('https://raw.githubusercontent.com/zdealveindy/anadat-screestick.R')\ndev.new(title = \"MFA eigenvalues and broken stick model\", noRStudioGD = TRUE)\nscreestick(ev, las = 2)\n\n# Alternative to the standard, automatic MFA plots : \n# Plot only the significant variables (correlations)\n\n# Select the most characteristic variables\naa <- dimdesc(t3.mfa, axes = 1:2, proba = 0.0001)\n\n# Plot\ndev.new(title = \"MFA :  correlations among significant variables\", noRStudioGD = TRUE)\nvarsig <- \n  t3.mfa$quanti.var$cor[unique(c(rownames(aa$Dim.1$quanti), \n                                 rownames(aa$Dim.2$quanti))), ]\nplot(varsig[, 1:2], \n     asp = 1, \n     type = \"n\", \n     xlim = c(-1, 1),\n     ylim = c(-1, 1)\n)\nabline(h = 0, lty = 3)\nabline(v = 0, lty = 3)\nsymbols(0, 0, circles = 1, inches = FALSE, add = TRUE)\narrows(0, 0, varsig[, 1], varsig[, 2], length = 0.08, angle = 20)\nfor (v in 1 : nrow(varsig))\n{\n  if (abs(varsig[v, 1]) > abs(varsig[v, 2]))\n  {\n    if (varsig[v, 1] >=  0) pos <- 4\n    else pos <- 2\n  }\n  else\n  {\n    if (varsig[v, 2] >=  0) pos <- 3\n    else pos <- 1\n  }\n  text(varsig[v, 1], varsig[v, 2], \n       labels = rownames(varsig)[v], \n       pos = pos)\n}\n\n\n\n## RLQ and fourth-corner analyses\ndata(aravo)\ndim(aravo$spe)\ndim(aravo$traits)\ndim(aravo$env)\n\n# Preliminary analyses: CA, Hill-Smith and PCA\nafcL.aravo <- dudi.coa(aravo$spe, scannf = FALSE)\nacpR.aravo <- dudi.hillsmith(aravo$env, \n                             row.w = afcL.aravo$lw,\n                             scannf = FALSE)\nacpQ.aravo <- dudi.pca(aravo$traits, \n                       row.w = afcL.aravo$cw,\n                       scannf = FALSE)\n\n# RLQ analysis\nrlq.aravo <- rlq(\n  dudiR = acpR.aravo, \n  dudiL = afcL.aravo, \n  dudiQ = acpQ.aravo,\n  scannf = FALSE)\ndev.new(title = \"RLQ\", noRStudioGD = TRUE)\nplot(rlq.aravo)\n# Traits by environment crossed table\nrlq.aravo$tab\n\n\n# Since the plots are crowded, one can plot them one by one \n# in large graphical windows.\ndev.new(title = \"RLQ - site (L) scores\", noRStudioGD = TRUE)\ns.label(rlq.aravo$lR,  plabels.boxes.draw = FALSE,  ppoints.alpha = 0, psub.text = \"a\", psub.cex = 2,  psub.position = \"topleft\")\n\ndev.new(title = \"RLQ - species abundances\", noRStudioGD = TRUE)\ns.label(rlq.aravo$lQ,  plabels.boxes.draw = FALSE,   ppoints.alpha = 0,  psub.text = \"b\", psub.cex = 2,  psub.position = \"topleft\")\n\ndev.new(title = \"RLQ - environmental variables\", noRStudioGD = TRUE)\ns.arrow(rlq.aravo$l1, psub.text = \"c\", psub.cex = 2, psub.position = \"topleft\")\ndev.new(title = \"RLQ - species traits\", noRStudioGD = TRUE)\ns.arrow(rlq.aravo$c1,psub.text = \"d\",psub.cex = 2, psub.position = \"topleft\")\n\n# Global test\nrandtest(rlq.aravo, nrepet = 999, modeltype = 6)\n\n## Fourth-corner analysis (takes time with 49999 permutations!)\nfourth.aravo <- fourthcorner(\n  tabR = aravo$env, \n  tabL = aravo$spe, \n  tabQ = aravo$traits,\n  modeltype = 6,\n  p.adjust.method.G = \"none\", \n  p.adjust.method.D = \"none\", \n  nrepet = 49999)\n# Correction for multiple testing, here using FDR\nif(!require(ade4)){install.packages(\"ade4\")}\nlibrary(ade4)\nfourth.aravo.adj <- p.adjust.4thcorner(\n  fourth.aravo,\n  p.adjust.method.G = \"fdr\", \n  p.adjust.method.D = \"fdr\", \n  p.adjust.D = \"global\") \n\n# Plot significant associations\ndev.new(title = \"Fourth-corner analysis\", noRStudioGD = TRUE)\nplot(fourth.aravo.adj, alpha = 0.05, stat = \"D2\")\n\n# Biplot combining RLQ and fourth-corner results\ndev.new(title = \"Combining RLQ and Fourth-corner results\", noRStudioGD = TRUE)\nplot(fourth.aravo.adj, \n     x.rlq = rlq.aravo, \n     alpha = 0.05, \n     stat = \"D2\", \n     type = \"biplot\")\n\n\n###################################################################\n\n# RLQ and fourth-corner analyses (Doubs data) ######\nsummary(fishtraits)\nrownames(fishtraits)\nnames(spe)\nnames(fishtraits)\ntra <- fishtraits[ , 6:15]\ntra\n\n# Preliminary analyses: CA, Hill-Smith and PCA\nafcL.doubs <- dudi.coa(spe, scannf = FALSE)\nacpR.doubs <- dudi.hillsmith(env3,\n                             row.w = afcL.doubs$lw,\n                             scannf = FALSE)\nacpQ.doubs <- dudi.pca(tra, \n                       row.w = afcL.doubs$cw,\n                       scannf = FALSE)\n\n# RLQ analysis\nrlq.doubs <- rlq(\n  dudiR = acpR.doubs, \n  dudiL = afcL.doubs, \n  dudiQ = acpQ.doubs,\n  scannf = FALSE)\ndev.new(title = \"RLQ\",width = 12,height = 7,noRStudioGD = TRUE)\nplot(rlq.doubs)\n# Traits by environment crossed table\nrlq.doubs$tab\n\n\n# Since the plots are crowded, one can plot them one by one \n# in large graphical windows:\ndev.new(title = \"RLQ - site (L) scores\", noRStudioGD = TRUE)\ns.label(rlq.doubs$lR, \n        plabels.boxes.draw = FALSE, \n        ppoints.alpha = 0,\n        psub.text = \"a\",\n        psub.cex = 2, \n        psub.position = \"topleft\")\ndev.new(title = \"RLQ - species abundances\", noRStudioGD = TRUE)\ns.label(rlq.doubs$lQ, \n        plabels.boxes.draw = FALSE, \n        ppoints.alpha = 0,\n        psub.text = \"b\",\n        psub.cex = 2, \n        psub.position = \"topleft\")\ndev.new(title = \"RLQ - environmental variables\", noRStudioGD = TRUE)\ns.arrow(rlq.doubs$l1,\n        psub.text = \"c\",\n        psub.cex = 2, \n        psub.position = \"topleft\")\ndev.new(title = \"RLQ - species traits\", noRStudioGD = TRUE)\ns.arrow(rlq.doubs$c1,\n        psub.text = \"d\",\n        psub.cex = 2, \n        psub.position = \"topleft\")\n\n# Global test\nrandtest(rlq.doubs, nrepet = 999, modeltype = 6)\n\n\n# Fourth-corner analysis (takes time with 49999 permutations!) ######\n?fourthcorner\n\nfourth.doubs2 <- fourthcorner(\n  tabR = env3,\n  tabL = spe,\n  tabQ = tra,\n  modeltype = 2,\n  p.adjust.method.G = \"fdr\",\n  p.adjust.method.D = \"fdr\",\n  nrepet = 49999\n)\nfourth.doubs2\nsummary(fourth.doubs2)\n\nfourth.doubs <- fourthcorner(\n  tabR = env2, \n  tabL = spe, \n  tabQ = tra,\n  modeltype = 6,\n  p.adjust.method.G = \"none\", \n  p.adjust.method.D = \"none\", \n  nrepet = 49999)\n# Correction for multiple testing, here using FDR\nfourth.doubs.adj <- p.adjust.4thcorner(\n  fourth.doubs,\n  p.adjust.method.G = \"fdr\", \n  p.adjust.method.D = \"fdr\", \n  p.adjust.D = \"global\") \n\nfourth.doubs.adj\nsummary(fourth.doubs.adj)\n\n# Plot\ndev.new(title = \"Fourth-corner analysis\", noRStudioGD = TRUE)\nplot(fourth.doubs.adj, alpha = 0.05, stat = \"D2\")\nplot(fourth.doubs2, stat = \"D2\")\nplot(fourth.doubs2, stat = \"G\")\n\n# Biplot combining RLQ and fourth-corner results\ndev.new(title = \"Combining RLQ and Fourth-corner results\", noRStudioGD = TRUE)\nplot(fourth.doubs.adj, \n     x.rlq = rlq.doubs, \n     alpha = 0.05, \n     stat = \"D2\", \n     type = \"biplot\")\n\nplot(fourth.doubs2,\n     x.rlq = rlq.doubs,\n     alpha = 0.05,\n     stat = \"D2\",\n     type = \"biplot\")\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:15:42+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik7_solution_stat7/",
    "title": "Musterloesung",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik7",
      "Statistik"
    ],
    "contents": "\n\n\n\nMusterloesung Aufgabe 7.1: RDA\nR-Skript als Download\nLoesungstext\nÜbungsaufgabe (hier so ausführlich formuliert, wie dies auch in der Klausur der Fall sein wird)\nLadet die library dave, welche den Moordatensatz enthält. sveg beinhaltet presenceabsence-Daten aller untersuchten Arten in den Plots; ssit beinhaltet 18 metrische Umweltdaten sowie Koordinaten der Plots\nFührt eine RDA und eine Varianzpartizionierung in die Variablengruppen Physiographie (Waterlev.max, Waterlev.av, Waterlev.min, log.peat.lev, log slope.deg) und Chemie (alle übrigen) durch.\nFormuliert abschliessend einen Methoden- und Ergebnisteil (ggf. incl. adäquaten Abbildungen) zu dieser Untersuchung in der Form einer wissenschaftlichen Arbeit (ausformulierte schriftliche Zusammenfassung, mit je einem Absatz von ca. 60-100 Worten, resp. 3-8 Sätzen für den Methoden- und Ergebnisteil). D. h. alle wichtigen Informationen sollten enthalten sein, unnötige Redundanz dagegen vermieden werden.\nWährend im Text normalerweise die Variablen ausgeschrieben werden solltet, genügt es hier (da ihr die entsprechenden Infos nicht bekommen habt und nur raten könntet), wenn ihr die Abkürzungen aus dem dataframe nehmt.\nMoordatensatz laden\n\n\nif(!require(dave)){install.packages(\"dave\")}\nlibrary(dave)\ndata(sveg)\ndata(ssit)\nsummary(sveg)\nsummary(ssit)\nstr(ssit)\n\n# x.axis and y.axis vom data frame data frame ssit entfernen\nenv2 <- ssit[, -c(19,20)]\n\n\n\nBetrachtung der Daten zeigt, dass die Koordinaten in Spalten 19 und 20 sind, die daraufhin entfernt werden.\n\n\n# Generiere zwei subset der erklärenden Variablen\n# Physiografie (upstream-downstream-Gradient)\nenvtopo <- env2[, c(11 : 15)]\nnames(envtopo)\n# Chemie\nenvchem <- env2[, c(1:10,16:18)]\nnames(envchem)\n\n# Hellinger-transform the species dataset\nlibrary(vegan)\nspe.hel <- decostand(sveg, \"hellinger\")\nspe.hel\n\n\n\nVorstehend wurden die Variablen in die zwei Gruppen Chemistry und Physiography aufgteilt. Die Hellilnger-Transformation wird gemeinhin empfohlen (wobei dahingestellt sei, ob sie auch bei presence-absence-Daten nötig ist). Die weiteren Analysen führen wir mit der default-Einstellung „Scaling 2“ durch. (Je nach Bedarf bzw. persönlichen Vorlieben könnte auch Scaling 1 genommen werden).\nRedundancy analysis (RDA)\nRDA of the Hellinger-transformed mire species data, constrained by all the environmental variables contained in env2\n\n\n## RDA der Hellinger-transformireten Moorarten-Daten, constrained\n## mit allen Umweltvarialben die in env2 enthalten sind\n(spe.rda <- rda(spe.hel ~ ., env2)) # Observe the shortcut formula\n\nsummary(spe.rda)  # Skalierung 2 (default)\n\n# Canonical coefficients from the rda object\ncoef(spe.rda)\n# Unadjusted R^2 retrieved from the rda object\n(R2 <- RsquareAdj(spe.rda)$r.squared)\n# Adjusted R^2 retrieved from the rda object\n(R2adj <- RsquareAdj(spe.rda)$adj.r.squared)\n\n\n\nMan erhält R²adj. = 0.376 Jetzt kann man den Triplot erstellen\n\n## Triplots of the rda results (lc scores)\n## Site scores as linear combinations of the environmental variables\ndev.new(title = \"RDA scaling 1 and 2 + lc\",width = 15,height = 6,noRStudioGD = TRUE)\npar(mfrow = c(1, 2))\n\n# 1 und 2 Achse\nplot(spe.rda, display = c(\"sp\", \"lc\", \"cn\"), \n     main = \"Triplot RDA spe.hel ~ env2 - scaling 2 - lc scores\")\nspe.sc2 <- scores(spe.rda, choices = 1:2, display = \"sp\")\narrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92,length = 0,\n       lty = 1,col = \"red\")\ntext(-0.82, 0.55, \"b\", cex = 1.5)\n\n#1 und 3 Achse\nplot(spe.rda, display = c(\"sp\", \"lc\", \"cn\"), choices = c(1,3),\n     main = \"Triplot RDA spe.hel ~ env2 - scaling 2 - lc scores\")\nspe.sc2 <- scores(spe.rda, choices =c(1,3), display = \"sp\")\narrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92,length = 0,\n       lty = 1,col = \"red\")\ntext(-0.82, 0.55, \"b\", cex = 1.5)\n\n\n## Triplots of the rda results (wa scores)\n## Site scores as weighted averages (vegan's default)\n# Scaling 1 :  distance triplot\ndev.new(title = \"RDA scaling 2 + wa\",width = 7,height = 6,noRStudioGD = TRUE)\n\n# Scaling 2 (default) :  correlation triplot\nplot(spe.rda, main = \"Triplot RDA spe.hel ~ env3 - scaling 2 - wa scores\")\narrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92, length = 0, lty = 1, col\n\nAuswahl der höchstkorrelierten Arten (Grenzwert kann subjektiv nach Bedarf gesetzt werden, hier 0.5).\n\n\n# Select species with goodness-of-fit at least 0.6 in the \n# ordination plane formed by axes 1 and 2\nspe.good <- goodness(spe.rda)\nsel.sp <- which(spe.good[, 2] >= 0.6)\nsel.sp\n\n# Triplots with homemade function triplot.rda()\nsource(\"19_Statistik7/triplot.rda.R\")\n\ndev.new(title = \"RDA plot with triplot.rda\", width = 7, height = 6, noRStudioGD = TRUE)\n\ntriplot.rda(spe.rda, site.sc = \"lc\", cex.char2 = 0.7, pos.env = 3, \n            pos.centr = 1, mult.arrow = 1.1, mar.percent = 0.05, select.spe = sel.sp)\n\n\n# Global test of the RDA result\nanova(spe.rda, permutations = how(nperm = 999))\n# Tests of all canonical axes\nanova(spe.rda, permutations = how(nperm = 999))\nanova(spe.rda, by = \"axis\", permutations = how(nperm = 999))\n\n\n\nDie ersten drei RDA-Achsen sind also signifikant. Man könnte also auch noch eine Visualisierung von RDA 3 vs. RDA 1 machen.\nPartielle RDA\nSimple syntax; X and W may be in separate tables of quantitative\nvariables\n\n\nspechem.physio <- rda(spe.hel, envchem, envtopo)\nsummary(spechem.physio)\n\n# Formula interface; X and W variables must be in the same \n# data frame\n(spechem.physio2 <- \n    rda(spe.hel ~ pH.peat + log.ash.perc + Ca_peat +Mg_peat + Na_peat\n       + K_peat + Acidity.peat + CEC.peat + Base.sat.perc + P.peat\n       + pH.water + log.cond.water + log.Ca.water\n       + Condition(Waterlev.max + Waterlev.av + Waterlev.min + log.peat.lev\n       + log.slope.deg), data = env2))\n\n# Test of the partial RDA, using the results with the formula \n# interface to allow the tests of the axes to be run\nanova(spechem.physio2, permutations = how(nperm = 999))\nanova(spechem.physio2, permutations = how(nperm = 999), by = \"axis\")\n\n# Partial RDA triplots (with fitted site scores) \n# with function triplot.rda\ndev.new(title = \"Partial RDA\", width = 7, height = 6, noRStudioGD = TRUE)\n\ntriplot.rda(spechem.physio, site.sc = \"lc\", scaling = 2, \n            cex.char2 = 0.8, pos.env = 3, mult.spe = 1.1, mar.percent = 0.04)\ntext(-3.34, 3.64, \"b\", cex = 2)\n\n\n\nVarianzpartitionierung\n\n\n## 1. Variation partitioning with all explanatory variables\n(spe.part.all <- varpart(spe.hel, envchem, envtopo))\n\n# Plot of the partitioning results\ndev.new(title = \"Variation partitioning\",width = 7,height = 7,noRStudioGD = TRUE)\n\nplot(spe.part.all, digits = 2, bg = c(\"red\", \"blue\"),\n     Xnames = c(\"Chemistry\", \"Physiography\"), id.size = 0.7)\n\n\n\nDie durch die erhobenen Umweltvariablen insgesamt erklärte Varianz (37.6%, s.o.) entfällt zu 19.4% auf chemische Variablen, 3.6% auf physiographische Variablen und zu 14.6% auf gemeinsame Erklärung.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:15:46+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik8_Abstract/",
    "title": "Statistik",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik8",
      "Statistik"
    ],
    "contents": "\n\n\n\nStatistik 8 (17.11.2020)\nIn Statistik 8 lernen die Studierenden Clusteranalysen/Klassifikationen als eine den Ordinationen komplementäre Technik der deskriptiven Statistik multivariater Datensätze kennen. Es gibt Partitionierungen (ohne Hierarchie), divisive und agglomerative Clusteranalysen (die jeweils eine Hierarchie produzieren). Etwas genauer gehen wir auf die k-means Clusteranalyse (eine Partitionierung) und eine Reihe von agglomerativen Clusterverfahren ein. Hierbei hat das gewählte Distanzmass und der Modus für die sukzessive Fusion von Clustern einen grossen Einfluss auf das Endergebnis. Wir besprechen ferner, wie man die Ergebnisse von Clusteranalysen adäquat visualisieren und mit anderen statistischen Prozeduren kombinieren kann. Im Abschluss von Statistik 8 werden wir dann die an den acht Statistiktagen behandelten Verfahren noch einmal rückblickend betrachten und thematisieren, welches Verfahren wann gewählt werden sollte. Ebenfalls ist Platz, um den adäquaten Ablauf statistischer Analysen vom Einlesen der Daten bis zur Verschriftlichung der Ergebnisse, einschliesslich der verschiedenen zu treffenden Entscheidungen, zu thematisieren.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:15:48+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik8_assigment_stat8/",
    "title": "Uebungen",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik8",
      "Statistik"
    ],
    "contents": "\n\n\n\nUebungen 8\nUebung 8.1: Clusteranalyse (sozioökonomisch)\nDatensatz crime2.csv\nRaten von 7 Kriminalitätsformen pro 100000 Einwohner und Jahr für die Bundesstaaten der USA\n(a) Führt eine k-means- und eine agglomerative Clusteranalyse eurer Wahl durch.\n(b) Überlegt in beiden Fällen, wie viele Cluster sinnvoll sind (k-means z. B.visuelle Betrachtung einer PCA, agglomerative Clusteranalyse z. B. SilhouettePlot).\n(c) Abschliessend entscheidet euch für eine Clusterung und vergleicht die erhaltenen Cluster bezüglich der Kriminalitätsformen mittels ANOVA und interpretiert die Cluster entsprechend.\nHinweis:\nWegen der sehr ungleichen Varianzen muss auf jeden Fall eine Standardisierung stattfinden, damit Distanzen zwischen den verschiedenen Kriminalitätsraten sinnvoll berechnet werden können\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:15:51+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik8_Demo_Statistik_8/",
    "title": "Demo",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik8",
      "Statistik"
    ],
    "contents": "\n\n\n\n\n\nknitr::opts_chunk$set(echo = TRUE,include = T, results = \"hide\",collapse=TRUE, message = FALSE)\n\n\n\nDemo: Statistik 8\nCluster-Analysen (c) Juergen Dengler\nDemoscript als Download\nDatensatz Doubs.RData\nFunktion drawmap.R drawmap.R\nFunktion hcoplot.R hcoplot.R\nk-means clustering\n\n\n# das Moordatenset aus Wildi...\nif(!require(dave)){install.packages(\"dave\")}\nlibrary(dave)\npca <- rda(sveg^0.25, scale=TRUE)\nca <- cca(sveg^0.5)\n\nkmeans.1 <- kmeans(sveg, 4)\nkmeans.1\nplot(ca, type = \"n\")\npoints(ca, display = \"sites\", col=kmeans.1[[1]])\n\nkmeans.2 <- kmeans(sveg, 3)\nplot(pca, type = \"n\")\npoints(pca, display = \"sites\", pch=19, col=kmeans.2[[1]])\n\nplot(pca, choices=c(1,3), type = \"n\")\npoints(pca, choices=c(1,3), display = \"sites\", pch=19, col=kmeans.2[[1]])\n\n# k-means partitioning, 2 to 10 groups\nKM.cascade <- cascadeKM(sveg,  inf.gr = 2, sup.gr = 10, iter = 100, criterion = \"ssi\")\nsummary(KM.cascade)\nKM.cascade$results\nKM.cascade$partition\n\n# k-means visualisation\nplot(KM.cascade, sortg = TRUE)\n\n\n\nAgglomarative Clusteranalyse mit Daten und Skripten aus Borcard et al. (2018)\n\n\nload(\"Doubs.Rdata\")\n\n# Remove empty site 8\nspe <- spe[-8, ]\nenv <- env[-8, ]\nspa <- spa[-8, ]\nlatlong <- latlong[-8, ]\n\n\n\nDendogramme berechnen und ploten\n\n\n## Hierarchical agglomerative clustering of the species abundance \n\n# Compute matrix of chord distance among sites\nspe.norm <- decostand(spe, \"normalize\")\nspe.ch <- vegdist(spe.norm, \"euc\")\n\n# Attach site names to object of class 'dist'\nattr(spe.ch, \"Labels\") <- rownames(spe)\n\npar(mfrow = c(1, 1))\n\n# Compute single linkage agglomerative clustering\nspe.ch.single <- hclust(spe.ch, method = \"single\")\n# Plot a dendrogram using the default options\nplot(spe.ch.single, labels = rownames(spe), main = \"Chord - Single linkage\")\n\n# Compute complete-linkage agglomerative clustering\nspe.ch.complete <- hclust(spe.ch, method = \"complete\")\nplot(spe.ch.complete, labels = rownames(spe), main = \"Chord - Complete linkage\")\n\n# Compute UPGMA agglomerative clustering\nspe.ch.UPGMA <- hclust(spe.ch, method = \"average\")\nplot(spe.ch.UPGMA, labels = rownames(spe), main = \"Chord - UPGMA\")\n\n# Compute centroid clustering\nspe.ch.centroid <- hclust(spe.ch, method = \"centroid\")\nplot(spe.ch.centroid, labels = rownames(spe),  main = \"Chord - Centroid\")\n\n# Compute Ward's minimum variance clustering\nspe.ch.ward <-hclust(spe.ch, method = \"ward.D2\")\nplot(spe.ch.ward, labels = rownames(spe),  main = \"Chord - Ward\")\n\n# Compute beta-flexible clustering using cluster::agnes()\n# beta = -0.1\nspe.ch.beta1 <- agnes(spe.ch, method = \"flexible\", par.method = 0.55)\n# beta = -0.25\nspe.ch.beta2 <- agnes(spe.ch, method = \"flexible\", par.method = 0.625)\n# beta = -0.5\nspe.ch.beta3 <- agnes(spe.ch, method = \"flexible\", par.method = 0.75)\n# Change the class of agnes objects\nclass(spe.ch.beta1)\nspe.ch.beta1 <- as.hclust(spe.ch.beta1)\nclass(spe.ch.beta1)\nspe.ch.beta2 <- as.hclust(spe.ch.beta2)\nspe.ch.beta3 <- as.hclust(spe.ch.beta3)\n\npar(mfrow = c(2, 2))\nplot(spe.ch.beta1, labels = rownames(spe), main = \"Chord - Beta-flexible (beta=-0.1)\")\nplot(spe.ch.beta2, labels = rownames(spe), main = \"Chord - Beta-flexible (beta=-0.25)\")\nplot(spe.ch.beta3,  labels = rownames(spe),  main = \"Chord - Beta-flexible (beta=-0.5)\")\n\n# Compute Ward's minimum variance clustering\nspe.ch.ward <- hclust(spe.ch, method = \"ward.D2\")\nplot(spe.ch.ward, labels = rownames(spe), main = \"Chord - Ward\")\n\n\n\nCophenetic correlations\n\n\n# Single linkage clustering\nspe.ch.single.coph <- cophenetic(spe.ch.single)\ncor(spe.ch, spe.ch.single.coph)\n\n# Complete linkage clustering\nspe.ch.comp.coph <- cophenetic(spe.ch.complete)\ncor(spe.ch, spe.ch.comp.coph)\n\n# Average clustering\nspe.ch.UPGMA.coph <- cophenetic(spe.ch.UPGMA)\ncor(spe.ch, spe.ch.UPGMA.coph)\n\n# Ward clustering\nspe.ch.ward.coph <- cophenetic(spe.ch.ward)\ncor(spe.ch, spe.ch.ward.coph)\n\n# Shepard-like diagrams\npar(mfrow = c(2, 2))\nplot(\n  spe.ch,\n  spe.ch.single.coph,\n  xlab = \"Chord distance\",\n  ylab = \"Cophenetic distance\",\n  asp = 1,\n  xlim = c(0, sqrt(2)),\n  ylim = c(0, sqrt(2)),\n  main = c(\"Single linkage\", paste(\"Cophenetic correlation =\",\n                                   round(\n                                     cor(spe.ch, spe.ch.single.coph), 3\n                                   )))\n)\nabline(0, 1)\nlines(lowess(spe.ch, spe.ch.single.coph), col = \"red\")\n\nplot(\n  spe.ch,\n  spe.ch.comp.coph,\n  xlab = \"Chord distance\",\n  ylab = \"Cophenetic distance\",\n  asp = 1,\n  xlim = c(0, sqrt(2)),\n  ylim = c(0, sqrt(2)),\n  main = c(\"Complete linkage\", paste(\"Cophenetic correlation =\",\n                                     round(\n                                       cor(spe.ch, spe.ch.comp.coph), 3\n                                     )))\n)\nabline(0, 1)\nlines(lowess(spe.ch, spe.ch.comp.coph), col = \"red\")\n\nplot(\n  spe.ch,\n  spe.ch.UPGMA.coph,\n  xlab = \"Chord distance\",\n  ylab = \"Cophenetic distance\",\n  asp = 1,\n  xlim = c(0, sqrt(2)),\n  ylim = c(0, sqrt(2)),\n  main = c(\"UPGMA\", paste(\"Cophenetic correlation =\",\n                          round(\n                            cor(spe.ch, spe.ch.UPGMA.coph), 3\n                          )))\n)\nabline(0, 1)\nlines(lowess(spe.ch, spe.ch.UPGMA.coph), col = \"red\")\n\nplot(\n  spe.ch,\n  spe.ch.ward.coph,\n  xlab = \"Chord distance\",\n  ylab = \"Cophenetic distance\",\n  asp = 1,\n  xlim = c(0, sqrt(2)),\n  ylim = c(0, max(spe.ch.ward$height)),\n  main = c(\"Ward\", paste(\"Cophenetic correlation =\",\n                         round(\n                           cor(spe.ch, spe.ch.ward.coph), 3\n                         )))\n)\nabline(0, 1)\nlines(lowess(spe.ch, spe.ch.ward.coph), col = \"red\")\n\n\n\nOptimale Anzahl Cluster\n\n\n## Select a dendrogram (Ward/chord) and apply three criteria\n## to choose the optimal number of clusters\n\n# Choose and rename the dendrogram (\"hclust\" object)\nhc <- spe.ch.ward\n# hc <- spe.ch.beta2\n# hc <- spe.ch.complete\n\npar(mfrow = c(1, 2))\n\n# Average silhouette widths (Rousseeuw quality index)\nSi <- numeric(nrow(spe))\nfor (k in 2:(nrow(spe) - 1))\n{\n  sil <- silhouette(cutree(hc, k = k), spe.ch)\n  Si[k] <- summary(sil)$avg.width\n}\n\nk.best <- which.max(Si)\nplot(1:nrow(spe),Si,type = \"h\",\n  main = \"Silhouette-optimal number of clusters\",\n  xlab = \"k (number of clusters)\",\n  ylab = \"Average silhouette width\")\naxis(1,k.best,paste(\"optimum\", k.best, sep = \"\\n\"),\n  col = \"red\",\n  font = 2,\n  col.axis = \"red\")\npoints(k.best,max(Si), pch = 16, col = \"red\",cex = 1.5)\n\n# Optimal number of clusters according to matrix correlation \n# statistic (Pearson)\n\n# Homemade function grpdist from Borcard et al. (2018)\ngrpdist <- function(X)\n{\n  require(cluster)\n  veg <- as.data.frame(as.factor(X))\n  distgr <- daisy(veg,\"gower\")\n  distgr\n} \n\nkt <- data.frame(k = 1:nrow(spe), r = 0)\nfor (i in 2:(nrow(spe) - 1)) \n{\n  gr <- cutree(hc, i)\n  distgr <- grpdist(gr)\n  mt <- cor(spe.ch, distgr, method = \"pearson\")\n  kt[i, 2] <- mt\n}\n\nk.best <- which.max(kt$r)\nplot(kt$k,kt$r, type = \"h\",\n  main = \"Matrix correlation-optimal number of clusters\",\n  xlab = \"k (number of clusters)\",\n  ylab = \"Pearson's correlation\")\naxis(1, k.best, paste(\"optimum\", k.best, sep = \"\\n\"),\n  col = \"red\", font = 2,col.axis = \"red\")\npoints(k.best, max(kt$r), pch = 16,col = \"red\", cex = 1.5)\n\n# Optimal number of clusters according as per indicator species\n# analysis (IndVal, Dufrene-Legendre; package: labdsv)\nIndVal <- numeric(nrow(spe))\nng <- numeric(nrow(spe))\nfor (k in 2:(nrow(spe) - 1))\n{\n  iva <- indval(spe, cutree(hc, k = k), numitr = 1000)\n  gr <- factor(iva$maxcls[iva$pval <= 0.05])\n  ng[k] <- length(levels(gr)) / k\n  iv <- iva$indcls[iva$pval <= 0.05]\n  IndVal[k] <- sum(iv)\n}\n\nk.best <- which.max(IndVal[ng == 1]) + 1\ncol3 <- rep(1, nrow(spe))\ncol3[ng == 1] <- 3\n\npar(mfrow = c(1, 2))\nplot(1:nrow(spe),IndVal,\n  type = \"h\",\n  main = \"IndVal-optimal number of clusters\",\n  xlab = \"k (number of clusters)\",\n  ylab = \"IndVal sum\",\n  col = col3)\naxis(1,k.best,paste(\"optimum\", k.best, sep = \"\\n\"),\n  col = \"red\", font = 2, col.axis = \"red\")\n\npoints(which.max(IndVal),max(IndVal),pch = 16,col = \"red\",cex = 1.5)\ntext(28, 15.7, \"a\", cex = 1.8)\n\nplot(1:nrow(spe),ng,\n  type = \"h\",\n  xlab = \"k (number of clusters)\",\n  ylab = \"Ratio\",\n  main = \"Proportion of clusters with significant indicator species\",\n  col = col3)\naxis(1,k.best,paste(\"optimum\", k.best, sep = \"\\n\"),\n     col = \"red\", font = 2, col.axis = \"red\")\npoints(k.best,max(ng), pch = 16, col = \"red\", cex = 1.5)\ntext(28, 0.98, \"b\", cex = 1.8)\n\n\n\nFinal dendrogram with the selected clusters\n\n\n# Choose the number of clusters\nk <- 4\n# Silhouette plot of the final partition\nspech.ward.g <- cutree(spe.ch.ward, k = k)\nsil <- silhouette(spech.ward.g, spe.ch)\nrownames(sil) <- row.names(spe)\n\nplot(sil,main = \"Silhouette plot - Chord - Ward\", cex.names = 0.8,col = 2:(k + 1),nmax = 100)\n\n# Reorder clusters\nif(!require(gclus)){install.packages(\"gclus\")}\nlibrary(\"gclus\")\nspe.chwo <- reorder.hclust(spe.ch.ward, spe.ch)\n\n# Plot reordered dendrogram with group labels\npar(mfrow = c(1, 1))\nplot(spe.chwo,hang = -1,\n  xlab = \"4 groups\",\n  sub = \"\",\n  ylab = \"Height\",\n  main = \"Chord - Ward (reordered)\",\n  labels = cutree(spe.chwo, k = k))\nrect.hclust(spe.chwo, k = k)\n\n# Plot the final dendrogram with group colors (RGBCMY...)\n# Fast method using the additional hcoplot() function:\n# Usage:\n# hcoplot(tree = hclust.object,\n#   diss = dissimilarity.matrix,\n#   lab = object labels (default NULL),\n#   k = nb.clusters,\n#   title = paste(\"Reordered dendrogram from\",deparse(tree$call),\n#   sep=\"\\n\"))\nsource(\"hcoplot.R\")\nhcoplot(spe.ch.ward, spe.ch, lab = rownames(spe), k = 4)\n\n# Plot the Ward clusters on a map of the Doubs River\n# (see Chapter 2)\nsource(\"drawmap.R\")\ndrawmap(xy = spa,clusters = spech.ward.g, main = \"Four Ward clusters along the Doubs River\")\n\n\n\nMiscellaneous graphical outputs\n\n\n# Heat map of the dissimilarity matrix ordered with the dendrogram\nheatmap(as.matrix(spe.ch),Rowv =NULL , symm = TRUE,margin = c(3, 3))\n\n# Ordered community table\n# Species are ordered by their weighted averages on site scores.\n# Dots represent absences.\nlibrary(vegan)\nor <- vegemite(spe, spe.chwo)\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:15:58+02:00",
    "input_file": {}
  },
  {
    "path": "statistik/Statistik8_solution_stat8/",
    "title": "Musterloesung",
    "description": {},
    "author": [],
    "date": "2021-08-18",
    "categories": [
      "Statistik8",
      "Statistik"
    ],
    "contents": "\n\n\n\nMusterloesung Aufgabe 8.1: Clusteranalysen\nR-Skript als Download\nLoesungstext\nÜbungsaufgabe (hier so ausführlich formuliert, wie dies auch in der Klausur der Fall sein wird)\nLadet den Datensatz crime2.csv. Dieser enthält Raten von 7 Kriminatlitätsformen pro 100000 Einwohner und Jahr für die Bundesstaaten der USA.\nFührt eine k-means- und eine agglomerative Clusteranalyse eurer Wahl durch. Bitte beachet, dass wegen der sehr ungleichen Varianzen in jedem Fall eine Standardisierung stattfinden muss, damit die Distanzen zwischen den verschiedenen Kriminalitätsraten sinnvoll berechnet werden können.\nÜberlegt in beiden Fällen, wie viele Cluster sinnvoll sind (k-means: z. B. visuelle Betrachtung einer PCA, agglomertive Clusteranalyse: z. B. Silhoutte-Plot).\nEntscheidet euch dann für eine der beiden Clusterungen und vergleicht dann die erhaltenen Cluster bezüglich der Kriminalitätsformen und interpretiert die Cluster entsprechend.\nBitte erklärt und begründet die einzelnen Schritte, die ihr unternehmt, um zu diesem Ergebnis zu kommen. Dazu erstellt bitte ein Word-Dokument, in das ihr Schritt für Schritt den verwendeten R-Code, die dazu gehörigen Ausgaben von R, eure Interpretation derselben und die sich ergebenden Schlussfolgerungen für das weitere Vorgehen dokumentieren.\nFormuliert abschliessend einen Methoden- und Ergebnisteil (ggf. incl. adäquaten Abbildungen) zu dieser Untersuchung in der Form einer wissenschaftlichen Arbeit (ausformulierte schriftliche Zusammenfassung, mit je einem Absatz von ca. 60-100 Worten, resp. 3-8 Sätzen für den Methoden- und Ergebnisteil). D. h. alle wichtigen Informationen sollten enthalten sein, unnötige Redundanz dagegen vermieden werden.\nAbzugeben sind am Ende (a) Ein lauffähiges R-Skript; (b) begründeter Lösungsweg (Kombination aus R-Code, R Output und dessen Interpretation) und (c) ausformulierter Methoden- und Ergebnisteil (für eine wiss. Arbeit).\nUebung 8.1 - Clusteranalysen – Loesung\n\n\ncrime <- read.csv(\"crime2.csv\",sep=\";\")\ncrime\n\n\n\nIm mitgelieferten R-Skript habe ich die folgenden Analysen zunächst mit untransformierten, dann mit standardisierten Kriminalitätsraten berechnet. Ihr könnt die Ergebnisse vergleichen und seht, dass sie sehr unterschiedlich ausfallen.\n\n\ncrimez <- crime\ncrimez[,c(2:8)] <- lapply(crime[, c(2:8)], scale)\ncrimez\n\n\n\n„scale“ führt eine Standardisierung (z-Transformation) durch, so dass alle Variablen anschiessen einen Mittelwert von 0 und eine SD von 1 haben, ausgenommen natürlich die 1. Spalte mit den Kürzeln der Bundesstaaten. Anschliessend wird das SSI-Kriterium getestet und zwar für Partitionierungen von 2 bis 6 Gruppen (wie viele Gruppen man maximal haben will, muss man pragmatisch nach der jeweiligen Fragestelltung entscheiden).\n\n\nlibrary(vegan)\ncrimez.KM.cascade <-\n cascadeKM(\n crimez[,c(2:8)],\n inf.gr = 2,\n sup.gr = 6,\n iter = 100,\n criterion = \"ssi\"\n )\nsummary(crimez.KM.cascade)\ncrimez.KM.cascade$results\ncrimez.KM.cascade$partition\n\n# k-means visualisation\nlibrary(cclust)\nplot(crimez.KM.cascade, sortg = TRUE)\n\n\n\nNach SSI ist die 4-Gruppenlösung die beste, mit dieser wird also weitergerechnet.\n\n\n# 4 Kategorien sind nach SSI offensichtlich besonders gut\nmodelz <- kmeans(crimez[,c(2:8)],4)\nmodelz\n\n#File für ANOVA (Originaldaten der Vorfälle, nicht die ztransformierten)\ncrime.KM4 <- data.frame(crime,modelz[1])\ncrime.KM4$cluster <- as.factor(crime.KM4$cluster)\ncrime.KM4\nstr(crime.KM4)\n\n\n\nVon den agglomerativen Clusterverfahren habe ich mich für Ward’s minimum variance clustering entschieden, da dieses allgemein als besonders geeignet gilt.\nVor der Berechnung von crime.norm und crime.ch muss man die Spalte mit den Bundesstaatenkürzeln entfern.\n\n\n#Agglomerative Clusteranalyse\ncrime2 <- crime[,-1]\ncrime.norm <- decostand(crime2, \"normalize\")\ncrime.ch <- vegdist(crime.norm, \"euc\")\n# Attach site names to object of class 'dist'\nattr(crime.ch, \"Labels\") <- crime[,1]\n\n#Ward's minimum variance clustering\ncrime.ch.ward <- hclust(crime.ch, method = \"ward.D2\")\npar(mfrow = c(1, 1))\nplot(crime.ch.ward,\n labels = crime[,1],\n main = \"Chord - Ward\")\n\n# Choose and rename the dendrogram (\"hclust\" object)\nhc <- crime.ch.ward\n# hc <- spe.ch.beta2\n# hc <- spe.ch.complete\ndev.new(\n title = \"Optimal number of clusters\",\n width = 12,\n height = 8,\n noRStudioGD = TRUE\n)\ndev.off()\npar(mfrow = c(1, 2))\n\n\n# Average silhouette widths (Rousseeuw quality index)\nlibrary(cluster)\nSi <- numeric(nrow(crime))\nfor (k in 2:(nrow(crime) - 1))\n{\n sil <- silhouette(cutree(hc, k = k), crime.ch)\n Si[k] <- summary(sil)$avg.width\n}\nk.best <- which.max(Si)\nplot(\n 1:nrow(crime),\n Si,\n type = \"h\",\n main = \"Silhouette-optimal number of clusters\",\n xlab = \"k (number of clusters)\",\n ylab = \"Average silhouette width\"\n)\naxis(\n 1,\n k.best,\n paste(\"optimum\", k.best, sep = \"\\n\"),\n col = \"red\",\n font = 2,\n col.axis = \"red\"\n)\npoints(k.best,\n max(Si),\n pch = 16,\n col = \"red\",\n cex = 1.5\n)\n\n\n\nDemnach wären beim Ward’s-Clustering nur zwei Gruppen die optimale Lösung.\nFür die Vergleiche der Bundesstaatengruppen habe ich mich im Folgenden für die k-meansClusterung mit 4 Gruppen entschieden.\nDamit die Boxplots und die ANOVA direkt interpretierbar sind, werden für diese, anders als für die Clusterung, die untransformierten Incidenz-Werte verwendet (also crime statt crimez). Die Spalte mit der Clusterzugehörigkeit im Fall von k-means mit 4 Clustern hängt man als Spalte an (Achtung: muss als Faktor definiert werden!).\nAnschliessend kann man die 7 ANOVAs rechnen, die Posthoc-Vergleiche durchführen und die zugehörigen Boxplots mit Buchstaben für die homogenen Gruppen erzeugen. Sinnvollerweise gruppiert man die Abbildungen gleich, z. B. je 2 x 2. Das Skript ist hier simple für jede Verbrechensart wiederholt (nur die erste und letzte gezeigt). Erfahrenere R-Nutzer können das Ganze hier natürlich durch eine Schleife abkürzen.\n\n\nlibrary(multcomp)\npar(mfrow=c(2,2))\nANOVA.Murder <- aov(Murder~cluster, data=crime.KM4)\nsummary (ANOVA.Murder)\nletters <- cld(glht(ANOVA.Murder, linfct=mcp(cluster=\"Tukey\")))\nboxplot(Murder~cluster, data=crime.KM4, xlab=\"Cluster\",\nylab=\"Murder\")\nmtext(letters$mcletters$Letters, at=1:4)\n\nANOVA.Vehicle <- aov(Vehicle~cluster, data=crime.KM4)\nsummary (ANOVA.Vehicle)\nletters <- cld(glht(ANOVA.Vehicle, linfct=mcp(cluster=\"Tukey\")))\nboxplot(Vehicle~cluster, data=crime.KM4, xlab=\"Cluster\",\nylab=\"Vehicle\")\nmtext(letters$mcletters$Letters, at=1:4)\n\n\n\nDie Boxplots erlauben jetzt auch eine Beurteilung der Modelldiagnostik: sind die Residuen hinreichen normalverteilt (symmetrisch) und sind die Varianzen zwischen den Kategorien einigermassen ähnlich. Mit der Symmetrie/Normalverteilung sieht es OK aus. Die Varianzhomogenität ist nicht optimal – meist deutlich grössere Varianz bei höheren Mittelwerten. Eine log-Transformation hätte das verbessert und könnte hier gut begründet werden. Da die p-Werte sehr niedrig waren und die Varianzheterogenität noch nicht extrem war, habe ich aber von einer Transformation abgesehen, da jede Transformation die Interpretation der Ergebnisse erschwert. Jetzt muss man nur noch herausfinden, welche Bundesstaaten überhaupt zu welchem der vier Cluster gehören, sonst ist das ganze schöne Ergebnis nutzlos. Z. B. kann man in R auf den Dataframe clicken und ihn nach cluster sortieren.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T11:16:02+02:00",
    "input_file": {}
  }
]
