[
  {
    "path": "fallstudien/BE_S_1_Einleitung/",
    "title": "Einleitung",
    "description": {},
    "author": [
      {
        "name": "Adrian Hochreutener",
        "url": {}
      }
    ],
    "date": "2021-09-07",
    "categories": [
      "Biodiversity & Ecosystems (S)"
    ],
    "contents": "\r\nEinleitung\r\nHintergrund\r\nDas rund 1100 ha grosse Naturschutzgebiet Wildnispark Zürich Sihlwald, welches im periurbanen Raum südlich von Zürich liegt, gilt seit dem 1. Januar 2010 als erster national anerkannter Naturerlebnispark. Er ist Teil des Wildnisparks Zürich. Seine Rolle als Naherholungsgebiet für die Stadt Zürich ist von grosser Bedeutung.\r\n\r\n\r\n\r\n\r\nIm Perimeter gelten verschiedene Regeln. So darf z. B. nur auf bestimmten Wegen mit den Velo gefahren und Hunde müssen an der Leine geführt werden. Damit soll im Schutzgebiet die Balance zwischen Schutz und Nutzen bewahrt werden, denn einerseits sollen die Besuchenden den Wald erleben dürfen, andererseits soll sich dieser, in der Kernzone, frei entwicklen dürfen.\r\n\r\n\r\n\r\nDamit diese Balance erreicht werden kann, muss das Management auf solide, empirisch erhobene Daten zur Natur und zu den Besuchenden zurückgreifen können. Das Besuchermonitoring deckt den zweiten Teil dieser notwendigen Daten ab.\r\nIm Wildnispark Zürich sind dazu mehrere automatische Zählstellen in Betrieb. Die Zählstellen erfassen stundenweise Besuchende. Einige Zählstellen erfassen richtungsgetrennt und / oder können zwischen verschiedenen Nutzergruppen wie Personen, die zu Fuss gehen, und Velofahrenden unterscheiden.\r\nIm Rahmen des Moduls Research Methods werden in der Fallstudie Profil S mehrere dieser automatischen Zählstellen genauer untersucht. Die Daten, welche im Besitz des WPZ sind, wurden bereits kalibriert. Das heisst, Zählungen während Wartungsarbeiten, bei Felhbetrieb o.ä. wurden bereits ausgeschlossen. Dies ist eine Zeitintensive Arbeit und wir dürfen hier mit einem wahren, sauber aufbereiteten “Datenschatz” arbeiten.\r\nDer Wildnispark wertet die Zahlen auf verschiedene Weise aus. So sind z. B. Jahresgänge (an welchen Monaten herrscht besonders viel Betrieb) und Nutzungszahlen bekannt. Vertiefte Auswertungen, die beispielsweise den Zusammenhang zwischen Besuchszahlen und dem Wetter untersuchen, werden nicht gemacht, da dies die Kapazitäten übersteigen würde.\r\nUnsere Analysen in diesem Modul helfen dem Management, ein besseres Verständnis zum Verhalten der Besuchenden zu erlangen und bilden Grundlagen für Managemententscheide in der Praxis.\r\nZiele\r\nIn dieser Fallstudie zeigen wir, welche Einfluss der Lockdown während der Covid19-Pandemie im Frühjahr 2020 sowie jener im Winter 2020/2021 auf die täglichen Besuchszahlen im Wildnispark Zürich hatte.\r\nErgänzend beschreiben wir den Zusammenhang der Besuchszahlen mit verschiedenen Wetterparametern. Die Hypothese lautet, je mehr Sonnenstunden und je höher die Temperatur, desto mehr Besuchende sind im Untersuchungsgebiet unterwegs; je mehr Niederschlag gemessen wird, desto weniger Besuchende werden gezählt.\r\nDa neben dem Wetter aber auch saisonale Muster, wie z.B. Schulferien, einen grossen Einfluss auf Besuchszahlen haben können, ziehen wir diese und weitere Parameter (Wochentage, Kalenderwoche, Jahr) ebenfalls in die Auswertung ein.\r\nDiese kombinierte, statistisch schliesssende, Betrachtung erlaubt uns Aussagen darüber, ob “nur” aufgrund des schönen Frühlings 2021 mehr Menschen in Wald unterwegs waren, oder ob der Lockdown tatsächlich einen so deutlich positiven Einfluss auf die Besuche hatte.\r\nGrundlagen\r\nZur Verfügung stehen:\r\ndie stündlichen, richtungsgetrennten Zählungen von Velos an drei Zählstellen\r\nMeteodaten (Temperatur, Sonnenscheindauer, Niederschlagssumme)\r\nR-Skripte mit Hinweisen zur Auswertung\r\n\r\n\r\n\r\n",
    "preview": "fallstudien/BE_S_1_Einleitung/Perimeter.png",
    "last_modified": "2021-09-07T12:10:58+02:00",
    "input_file": "Einleitung.knit.md",
    "preview_width": 2001,
    "preview_height": 1051
  },
  {
    "path": "fallstudien/BE_S_2_Felderhebung/",
    "title": "Felderhebung Grüntal",
    "description": {},
    "author": [
      {
        "name": "Adrian Hochreutener",
        "url": {}
      }
    ],
    "date": "2021-09-07",
    "categories": [
      "Biodiversity & Ecosystems (S)"
    ],
    "contents": "\r\nEinführung\r\nEs gibt eine Vielzahl an möglichen Methoden zur Erfassung der Besucherzahlen. Automatische Zählgeräte bieten die Möglichkeit lange und durchgehende Zeitreihen zu erfassen. Diese müssen aber natürlich auch ausgewertet werden. Hier erhaltet ihr erste Inputs dazu.\r\nZiele\r\nDie Studierenden können das eingesetzte Gerät installieren und kennen die Vor- und Nachteile verschiedener Methoden.\r\nSie können die Daten auslesen und explorativ analysieren.\r\nGrundlagen\r\nDie Geräte werden innerhalb der auf Abbildung 1 gekennzeichneten Standorte platziert. Damit soll überprüft werden, wie stark frequentiert die Waldränder der ökologisch aufgewerteten Seeparzelle sind.\r\n\r\n\r\nknitr::include_graphics(\"Perimeter_Felderhebung.png\")\r\n\r\n\r\n\r\n\r\nDatenschutz ist ein wichtiges Thema. Die Besuchenden werden über den Zweck der Kameras informiert, die Daten nach der Bearbeitung wieder gelöscht und nicht weitergegeben.\r\n\r\n\r\nknitr::include_graphics(\"Begleitzettel_Kamera.png\")\r\n\r\n\r\n\r\n\r\nNun geht es ins Feld uns die Geräte werden installiert.\r\nAUFGABE ab dem 12.10.2021\r\nNachdem die Kameras für zwei Wochen im Einsatz standen, werden die Daten ausgelesen, die Sichtungen in Excel festgehalten und die explorativen Analysen durchgeführt.\r\nBereits beim Detektieren der Sichtungen muss einem klar sein, was man auswerten möchte. Nur so können die relevanten Variablen erfasst werden.\r\nIm Rahmen dieser Felderhebung erhaltet ihr von Adrian eine Excel-Vorlage zur Erfassung der Sichtungen.\r\nSobald alle Sichtungen erfasst sind, geht es ins R!\r\nDatenanalyse in R\r\nVorbereitungen\r\nFuer diese Aufgabe benoetigen wir folgende Bibliotheken:\r\n\r\n\r\n# Benoetigte Bibliotheken ####\r\nlibrary(tidyverse) # Data wrangling und piping\r\nlibrary(lubridate) # Arbeiten mit Datumsformaten\r\nlibrary(data.table)# schnelles Dateneinlesen\r\n\r\n\r\n\r\nLese nun zuerst den bereitsgestellen, respektiven den selbst erstellten Datensatz (csv) mithilfe von fread() oder read.csv() ein und nennt ihn cam.\r\nPruefe die Daten. Wurden sie richtig eingelesen? Wie sieht die Struktur der Daten aus?\r\nTipp: Brauch zum pruefen den Befehl str() sowie head().\r\nAufgabe 1: Datentypen\r\nViele Befehle zum Einlesen erkennen die Datentypen automatisch. Bei Faktoren funktioniert das aber nicht (sie sind ja eigentlich einfach Text und R weiss nicht, was wir damit wollen).\r\nAuch das Datum muss vielfach manuell definiert werden (hier muessen wir R sagen, wie das Format dieses aussieht).\r\n\r\n\r\ncam <- cam %>% \r\n  mutate(Datum = as.Date(Datum, format = \"%d.%m.%Y\"))%>%\r\n  mutate(Kamerastandort = factor(Kamerastandort))%>%\r\n  ...\r\n\r\n\r\n\r\nDefiniert nun die restlichen (relevanten) Variablen als Faktor.\r\nAufgabe 2: Datensatz trennen\r\nUnser Datensatz enthaellt die Angeben zu ost und west. Wir wollen die Auswertungen aber pro Standort machen.\r\nTrennt den Datensatz aufgrund des Standorts. Nutzt dazu filter().\r\n\r\n\r\nost <- filter(DATENSATZ, SPALTENNAME == \"Attribut\")\r\nwest <- ...\r\n\r\n\r\n\r\nAufgabe 3: Verteilung pruefen\r\nBei explorativen Analysen macht es immer Sinn sich die Verteilung der Daten anzuschauen. Pruefe daher die Verteilung pro Datensatz mittels Histogram und Scatterplot.\r\nBeim Histogram sollen nur die Menschen angezeigt und die 0er ausgeschlossen werden. Das kann mit folgendem Code erreicht werden:\r\n\r\n\r\nhist(west$Anzahl[west$Art==\"Mensch\" &\r\n                  !west$Anzahl==0], # das \"!\" bedeutet \"nicht gleich\"\r\n     breaks = 10)                   # wie viele Balken brauchen wir im Histogram?\r\n\r\n\r\n\r\nBeim Scatterplot soll auf der x-Achse das Datum stehen, auf der y-Achse die Anzahl der Personen. Auch hier wollen wir keine Wildtiere im Plot.\r\nAufgabe 3: Daten ausschliessen\r\nFuer die weiteren Analysen schliessen wir die Wildtiere komplett aus.\r\nNutzt dazu wiederum den Befehl filter() und ueberschreibt die Datensaetze ost und west.\r\nDennoch wolle wir auch wissen, welche Tiere auf dem Areal (ost und west zusammen, also df cam) unterwegs sind.\r\nDafuer gibts einen separaten Datensatz namens Tiere. Nutzt dazu den Befehl filter().\r\nAufgabe 4: Explorative Analysen\r\nBerechnet zuerst die totale Anzahl Menschen / Standort mit sum(DATENSATZ$SPALTENNAME).\r\nGruppieren und summieren:\r\nBerechnet nun die Anzahl Menschen pro Aktivität sowie die Anzahl Begleittier pro Kategorie pro Standort.\r\nUntenstehender Code eigent sich dazu ganz gut:\r\n\r\n\r\nAkt_Ost <- ost %>%\r\n  group_by(Aktivitaet)%>%      # Hier sagen wir nach was wir gruppieren \r\n  summarise (n = n()) %>%      # und dann sagen wir, dass R zusammenfassen soll und zwar die Anzahl\r\n  mutate(freq = n / sum(n))%>% # und dann soll und R das prozentuale Verhaeltniss berechnen\r\n  arrange(desc(n))             # und dann das ganze absteigend sortieren\r\n\r\n\r\n\r\nNun soll noch berechnet werden, wie viele unterschiedliche Wildtiere auf dem ganzen Areal gezaehlt wurden.\r\nRecycelt dazu obenstenenden Code.\r\nAufgabe 5: Visualisieren\r\nVerteilung der Aktivitäten als Pie Chart\r\nZuerst eine Palette mit 5 Farben definieren:\r\n\r\n\r\npal <- hcl.colors(5, palette = \"heat\")\r\n\r\n\r\n\r\nDann als Kreisdiagramm plotten. Haltet euch an untenstehenden Plot:\r\n\r\n\r\npie(Akt_West$n, labels = c(\"Anderes\", \"Biker\", \"Landwirtschaft\", \"Spaziergaenger\", \"unbestimmbar\"),\r\n    main = \"Prozentuales Verhaeltnis West\",\r\n    col = pal) \r\n\r\n\r\n\r\n\r\nFRAGE: eignen sich Pie Charts überhaupt für solche Darstellungen? Wie könnten die Aktivitäten auch noch dargestellt werden? Welches sind eure eigenen Ideen zur Visualisierung?\r\nBegleittier als Bar Chart\r\n\r\n\r\n# Begleittier als Bar Chart ####\r\nggplot(Begleit_ost,                      # hier den Datensatz spezifizieren\r\n       mapping=aes(x=Begleittier, y = n))+ # Absolute Anzahl darstellen\r\n  geom_col(width=0.9,position = \"dodge\")+# hier sage ich, dass ich ein Balkendiagramm will\r\n  labs(x=\"Begleittier\", y= \"Anzahl\")+    # Achsenbeschriftung setzen\r\n  theme_classic(base_size = 15)+         # Und zu guter letzt: Stil definieren\r\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) # sowie Achsenbeschr.ausrichten\r\n\r\n\r\n\r\n\r\nBei Bedraf koennen die selben Plots fuer den zweiten Standort gemacht werden.\r\nUnd schliesslich: Wildtier als Bar Chart Stellt hier auf der y-Achse die Anzahl nicht total sondern relativ (in Prozent) dar.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "fallstudien/BE_S_2_Felderhebung/Perimeter_Felderhebung.png",
    "last_modified": "2021-09-07T10:56:28+02:00",
    "input_file": {},
    "preview_width": 1268,
    "preview_height": 894
  },
  {
    "path": "fallstudien/BE_S_2_Felderhebung_Loesung/",
    "title": "Musterloesung: Felderhebung Grüntal",
    "description": {},
    "author": [
      {
        "name": "Adrian Hochreutener",
        "url": {}
      }
    ],
    "date": "2021-09-07",
    "categories": [
      "Biodiversity & Ecosystems (S) Musterloesung"
    ],
    "contents": "\r\n\r\n\r\n#.###############################################################################################\r\n# Besuchermonitoring Grüntal - Auswertung der Besucherzahlen ####\r\n# Modul Research Methods, HS20. Adrian Hochreutener ####\r\n#.################################################################################################\r\n#.##############################################################################################\r\n# METADATA UND DEFINITIONEN ####\r\n#.################################################################################################\r\n# Ordnerstruktur ####\r\n# Im Ordner in dem das R-Projekt abgelegt ist muessen folgende Unterordner bestehen:\r\n# - Skripts\r\n# - Felderhebungen (Rohdaten hier ablegen)\r\n# - Results\r\n# Benoetigte Bibliotheken ####\r\nlibrary(tidyverse) # Data wrangling und piping\r\nlibrary(lubridate) # Arbeiten mit Datumsformaten\r\nlibrary(data.table)# schnelles Dateneinlesen\r\n\r\n#.###############################################################################################\r\n# 1. DATENIMPORT #####\r\n#.###############################################################################################\r\n\r\n# 1.1 Einlesen ####\r\n# lese die Daten mithilfe von data.table ein. Je nach Bedarf muss der Speicherort sowie der\r\n# Dateiname angepasst werden\r\ncam <- fread(\"DummyData.csv\")\r\n\r\n\r\n\r\n\r\n#.###############################################################################################\r\n# 2. VORBEREITUNG DER DATEN #####\r\n#.###############################################################################################\r\n\r\n# 2.1 erstes Sichten und anpassen der Datentypen ####\r\nstr(cam)\r\nhead(cam)\r\n\r\ncam <- cam %>% \r\n  mutate(Datum = as.Date(Datum, format = \"%d.%m.%Y\"))%>%\r\n  mutate(Kamerastandort = factor(Kamerastandort))%>%\r\n  mutate(Art = factor(Art))%>%\r\n  mutate(Richtung = factor(Richtung))%>%\r\n  mutate(Aktivität = factor(Aktivitaet))%>%\r\n  mutate(Begleittier = factor(Begleittier))%>%\r\n  mutate(Wildtier = factor(Wildtier))\r\n\r\n# Datensatz trennen ####\r\n# Kamera ost und West sind noch in einem Datensatz.\r\n# Wir betrachten jeden Standort einzeln --> trennen aufgrund Name Standort\r\nost <- filter(cam, Kamerastandort == \"ost\")\r\nwest <- filter(cam, Kamerastandort == \"west\")\r\n\r\n# 2.3 Verteilung pruefen ####\r\n# mittels Histogram \r\n# bei explorativen Analysen macht es immer Sinn sich die Verteilung der Daten anzuschauen\r\nhist(ost$Anzahl[ost$Art==\"Mensch\" &# wir sind vorerst nur an den Menschen interessiert\r\n                  !ost$Anzahl==0], # hier schliesse ich die Nuller aus der Visualisierung aus\r\n     breaks = 10) \r\n\r\nhist(west$Anzahl[west$Art==\"Mensch\" &\r\n                  !west$Anzahl==0], \r\n     breaks = 10) \r\n\r\n\r\n\r\n# 2.4 mittels Scatterplot ####\r\nplot(x=ost$Datum[ost$Art==\"Mensch\" &\r\n                   !ost$Anzahl==0], \r\n     y=ost$Anzahl[ost$Art==\"Mensch\" &\r\n                    !ost$Anzahl==0], \r\n     xlab = \"Datum\")\r\n\r\n\r\n\r\nplot(x=west$Datum[west$Art==\"Mensch\" &\r\n                   !west$Anzahl==0], \r\n     y=west$Anzahl[west$Art==\"Mensch\" &\r\n                    !west$Anzahl==0], \r\n     xlab = \"Datum\")\r\n\r\n\r\n\r\n# Filter ####\r\n# fuer die weiteren Analysen schliessen wir die Wildtiere komplett aus\r\nost <- filter(ost, Art == \"Mensch\")\r\nwest <- filter(west, Art == \"Mensch\")\r\n\r\n# Dennoch wolle wir auch wissen, welche Tiere auf dem Areal unterwegs sind\r\n# Dafuer gibts einen separaten Datensatz\r\nTiere <- filter(cam, cam$Art == \"Wildtier\")\r\n\r\n\r\n\r\n\r\n#.##############################################################################################\r\n# 3. ANALYSE #####\r\n#.###############################################################################################\r\n\r\n# Fuer die Analyse Eigenschaften Datensatz anschauen\r\nsummary(ost)\r\nsummary(west)\r\n\r\n# Anzahl Total / standort ####\r\nAnzahl_Ost <- sum(ost$Anzahl)\r\nAnzahl_West <- sum(west$Anzahl)\r\n\r\n# Meiste Aktivitaet ####\r\nAkt_Ost <- ost %>%\r\n  group_by(Aktivität)%>%       # Hier sagen wir nach was wir gruppieren \r\n  summarise (n = n()) %>%      # und dann sagen wir, dass R zusammenfassen soll und zwar die Anzahl\r\n  mutate(freq = n / sum(n))%>% # und dann soll und R das prozentuale Verhaeltniss berechnen\r\n  arrange(desc(n))             # und dann das ganze absteigend sortieren\r\n\r\n# das ganze wiederholen wir fuer den zweiten Standort\r\n# Jetzt kommt die grosse Staerke von R. \r\n# Wir haben den Code zur Berechnung der Anzahl pro Gruppe bereits geschrieben.\r\n# fuer die folgenden Auswertungen koennen wir ihn einfach \"recyceln\"\r\n Akt_West<- west %>%\r\n  group_by(Aktivität)%>%\r\n  summarise (n = n()) %>%\r\n  mutate(freq = n / sum(n))%>%\r\n  arrange(desc(n))\r\n\r\nAktivitaet_West <- west %>%\r\n  group_by(Aktivität)%>%\r\n  summarise (n = n()) %>%\r\n  mutate(freq = n / sum(n))%>%\r\n  arrange(desc(n))\r\n\r\n# Begleittier\r\nBegleit_ost <- ost %>%\r\n  group_by(Begleittier)%>%\r\n  summarise (n = n()) %>%\r\n  mutate(freq = n / sum(n))%>%\r\n  arrange(desc(n))\r\n# uns interessiert es nicht, wie viele Leute kein Begleittier dabei hatten\r\nBegleit_ost <- filter(Begleit_ost, !Begleittier == \"0\")\r\n\r\nBegleit_west <- west %>%\r\n  group_by(Begleittier)%>%\r\n  summarise (n = n()) %>%\r\n  mutate(freq = n / sum(n))%>%\r\n  arrange(desc(n))\r\n\r\nBegleit_west <- filter(Begleit_west, !Begleittier == \"0\")\r\n\r\n# Wildtier\r\nWildtier <- Tiere %>%\r\n  group_by(Wildtier)%>%\r\n  summarise (n = n()) %>%\r\n  mutate(freq = n / sum(n))%>%\r\n  arrange(desc(n))\r\n\r\n\r\n\r\n#.###############################################################################################\r\n# 4. VISUALISIERUNG #####\r\n#.###############################################################################################\r\n\r\n# Verteilung der Aktivitaeten als Pie Chart ####\r\n# Zuerst eine Palette mit 5 Farben definieren\r\npal <- hcl.colors(5, palette = \"heat\")\r\n# Dann als Kreisdiagramm plotten\r\npie(Akt_West$n, labels = c(\"Anderes\", \"Biker\", \"Landwirtschaft\", \"Spaziergaenger\", \"unbestimmbar\"),\r\n    main = \"Prozentuales Verhaeltnis West\",\r\n    col = pal) \r\n\r\n\r\n\r\n# Begleittier als Bar Chart ####\r\nggplot(Begleit_ost,                      # hier den Datensatz spezifizieren\r\n       mapping=aes(x=Begleittier, y = n))+ # Absolute Anzahl darstellen\r\n  geom_col(width=0.9,position = \"dodge\")+# hier sage ich, dass ich ein Balkendiagramm will\r\n  labs(x=\"Begleittier\", y= \"Anzahl\")+    # Achsenbeschriftung setzen\r\n  theme_classic(base_size = 15)+         # Und zu guter letzt: Stil definieren\r\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) # sowie Achsenbeschr.ausrichten\r\n\r\n\r\n\r\n# Wildtier als Bar Chart ####\r\nggplot(Wildtier, mapping=aes(x=Wildtier, y=freq*100))+ # kann auch prozentual dargestellt werden\r\n  geom_col(width=0.9,position = \"dodge\")+\r\n  labs(x=\"Begleittier\", y= \"Prozent [%]\")+\r\n  theme_classic(base_size = 15)+\r\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\r\n\r\n\r\n\r\n# Bei Bedraf koennen die selben Plots fuer den zweiten Standort gemacht werden.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "fallstudien/BE_S_2_Felderhebung_Loesung/Musterloesung_Felderhebung_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2021-09-07T10:59:30+02:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "fallstudien/BE_S_3_Aufgabenstellung/",
    "title": "Aufgabenstellung Wildnispark",
    "description": {},
    "author": [
      {
        "name": "Adrian Hochreutener",
        "url": {}
      }
    ],
    "date": "2021-09-07",
    "categories": [
      "Biodiversity & Ecosystems (S)"
    ],
    "contents": "\r\nAbschlussbericht über die multivariate Analyse\r\nZiele\r\nBisher habt ihr euch mit dem Untersuchungsgebiet beschäftigt und habt selbst ein (kleines) Besuchermonitoring durchgeführt. Das Besuchermonitoring Grüntal ist nun abgeschlossen und wir beschäftigen uns voll und ganz mit dem Wildnispark Zürich.\r\nIm Rahmen dessen programmieren wir multivariate Modelle, welche den Zusammenhang zwischen der Anzahl Besuchenden und verschiedenen Einflussfaktoren (Lockdown, Wetter, Ferien, Wochentag, Kalenderwoche) beschreiben. Dank ihnen können wir sagen, wie die Besucher:innen auf die untersuchten Faktoren reagieren (siehe dazu [Einleitung], Ziele).\r\nKonkret sollen folgende Fragestellungen beantwortet werden:\r\n\r\nWelchen Einfluss haben neben den Lockdowns auch die Wetterparameter (Sonnenscheindauer, Tageshöchsttemperatur, Niederschlagssumme) sowie der Wochentag, die Ferien, die Kalenderwoche und das Jahr auf die Besuchszahlen?\r\nDabei interessiert uns besonders, wie stark die jeweiligen Einflüsse sind, welche Effektrichtungen beobachtbar sind und welche der untersuchten Parameter signifikant sind.\r\nKönnen deutliche Unterschiede zwischen den “normalen”, vor-Covid19-Jahren und danach bei Tages-, Wochen-, und / oder Saisongang sowie den wichtigsten, deskriptiven Kennzahlen gefunden werden?\r\n\r\nIm Bericht sollen die Informationen und Erfahrungen aus dem gesamten Verlauf der Fallstudie in geeigneter Weise einfliessen. Bezüglich der Felderhebung erwarten wir keine Angaben.\r\n\r\n\r\nknitr::include_graphics(\"Aufbau_Fallstudie_Profil_S.png\")\r\n\r\n\r\n\r\n\r\nErwartungen\r\nStruktur / Aufbau\r\nFragestellung (siehe oben; die Fragestellung ist vorgegeben, darf aber natürlich für den Bericht geschärft und optimal formuliert und konkretisiert werden.)\r\nMethoden (kurzes Kapitel mit den statistischen Analysen)\r\nResultate (deskriptive Statistik, multivariates Modell; kurzer Fliesstext sowie die notwendigen Tabellen und eine Auswahl möglichst informativer Grafiken)\r\nDiskussion (Diskussion der deskriptiven Analysen und der Modellergebnisse; dieser Abschnitt sollte die eigenen Resultate auch im Zusammenhang mit aktueller Fachliteratur reflektieren.)\r\nLiteraturverzeichnis (Tipp: Das Literaturverzeichnis sollte vollständig sein, sowie formal korrekt und einheitlich daherkommen. Wir erwarten speziell in der Diskussion eine Abstützung auf aktuelle Fachliteratur. Auf Moodle haben wir Euch eine Auswahl relevanter Papers bereitgestellt.)\r\nAnhang (für alle Auswertungen relevanter R-Code in geeigneter Form)\r\nGesamtumfang max. 7500 Zeichen (inkl. Leerzeichen; exkl. Einleitung, Tabellen, Literaturverzeichnis und Anhang)\r\nAbgabe am 8.1.2022 auf Moodle oder per Mail an hoce@zhaw.ch\r\nBewertungskriterien\r\nIst die Methode klar und verständlich formuliert?\r\nSind die deskriptiven Analysen klar beschrieben und geeignet visualisiert?\r\nIst die Variablenselektion klar beschrieben, plausibel und nachvollziehbar?\r\nSind die Modellresultate in Text- und Tabellenform korrekt beschrieben und geeignet visualisiert?\r\nIst die Diskussion klar formuliert und inhaltlich schlüssig?\r\nWie gut ist die Diskussion auf relevante und aktuelle Fachliteratur abgestützt?\r\nZusätzliche bewerten wir die inhaltliche Dichte der Arbeit und die formale Qualität (Sprache, Struktur, Aufbau, Darstellung, Literaturverzeichnis, Umgang mit Literatur im Text)\r\nZusammensetzung der Fallstudiennote: - Fallstudie-Leistungsnachweis 1 - Forschungsplan: 30% - Fallstudie-Leistungsnachweis 2 - Multivariate Analyse: 70%\r\n\r\n\r\n\r\n",
    "preview": "fallstudien/BE_S_3_Aufgabenstellung/Aufbau_Fallstudie_Profil_S.png",
    "last_modified": "2021-09-07T11:19:21+02:00",
    "input_file": "Aufgabenstellung.knit.md",
    "preview_width": 1429,
    "preview_height": 903
  },
  {
    "path": "fallstudien/BE_S_4_Projektierung/",
    "title": "Aufgabenstellung Wildnispark",
    "description": {},
    "author": [
      {
        "name": "Adrian Hochreutener",
        "url": {}
      }
    ],
    "date": "2021-09-07",
    "categories": [
      "Biodiversity & Ecosystems (S)"
    ],
    "contents": "\r\nEinfuehrung\r\nVor den eigentlichen Auswertungen muessen einige Vorbereitungen unternommen werden. Die Zeit, die man hier investiert, wird in der spaeteren Projektphase um ein Mehrfaches eingespart.\r\nIch empfehle generell mit Projekten zu arbeiten, da diese sehr einfach ausgetauscht (auf verschiedene Rechner) und somit auch reproduziert werden koennen. Wichtig ist, dass es keine absoluten Arbeitspfade sondern nur relative gibt. Der Datenimport (und -export) kann mithilfe dieser relativen Pfade stark vereinfacht werden. –> Kurz gesagt: Projekte helfen alles am richtigen Ort zu behalten (mehr zur Arbeit mit Projekten: https://support.rstudio.com/hc/en-us/articles/200526207-Using-Projects).\r\nErstellt an einem passenden Speicherort ein neues Projekt mit einem treffenden Namen:\r\n–> File / New Project\r\nAufgabe 1: Projektaufbau\r\nNutzt fuer allen Text, welcher nicht im Code integriert ist, das Symbol #. Wenn ihr den Text als Titel definieren wollt, so dass er in der UEbersicht erscheint, muessen vor dem Wort # und nach dem Wort #### eingefuegt werden.\r\n\r\n\r\n# Texte, vor denen ein # und nach denen #### stehen, sind Titel\r\n# Texte, vor denen ein # steht, erklaeren den Ablauf\r\n# Zeilen ohne vorangehendes # sind Operationen\r\n\r\n# Wenn man rechts neben \"Source\" und links neben \"Environment\" klickt (oder CTRL + SHIFT + O --> Show document Outline), \r\n# oeffnet sich die UEbersicht zu den UEberschriften\r\n\r\n\r\n\r\nTipp:\r\nAlt + - = <-\r\nCtrl + Shift + M = %>%\r\nCtrl + Shift + C = # vor der ausgewaehlten Zeile\r\nZuerst immer den Titel des Projekts sowie den Autor/ die Autorin des Skripts nennen. Hier soll auch die Herkunft der Daten ersichtlich sein und falls externe Daten verwendet werden, sollte geklaert werden, wer Dateneigentuemer ist (Wildnispark und Meteo Schweiz).\r\nIm Skript soll immer die Ordnerstruktur des Projekts genannt werden. So kann der Arbeitsvorgang auf verschiedenen Rechnern einfach reproduziert werden (ich verwende hier ein Projektornder mit den Unterordnern Skripts, Data, Results, Results_compare und Meteo).\r\nBeschreibt zudem folgendes die verwendete Meteodaten (siehe dazu Metadata Meteodaten, –> order_83583_legend.txt)\r\nEin Skript soll in R eigentlich immer (mehr oder weniger) nach dem selbem Schema aufgebaut sein. Dieses Schema enthaellt (nach den bereits erwaehnten Definitionen) 4 Kapitel: 1. Datenimport, 2. Vorbereitung, 3. Deskriptive Analyse und Visualisierung und 4. Multifaktorielle Analyse und Visualisierung.\r\nBereitet euer Sktipt mit diesen Kapitel vor.\r\n\r\n\r\n#.################################################################################################\r\n# Einfluss von COVID19 auf das Naherholungsverhalten in WPZ ####\r\n# Fallstudie Modul Research Methods, HS21. Autor/in ####\r\n#\r\n#.################################################################################################\r\n\r\n#.###############################################################################################\r\n# METADATA UND DEFINITIONEN ####\r\n#.################################################################################################\r\n\r\n# Datenherkunft ####\r\n# ...\r\n\r\n#.###############################################################################################\r\n# 1. DATENIMPORT #####\r\n#.################################################################################################\r\n\r\n\r\n\r\nAufgabe 2: Laden der Bibliotheken\r\nGeplottet wird mit ggplot, daher wird tidyverse geladen. Diese Bibliothek ergaenzt BASE R in vielerlei Hinsicht uns ist eigentlich fast immer nötig. Da wir es bei Besucherdaten immer mit einem zeitlichen Bezug zu tun haben, benoetigen wir eine passende Bibliothek. Ich arbeite hier mit lubridate, POSIXct waere natuerlich auch moeglich. Base R bietet verschiedene Funktionen um Daten einzulesen. data.table ergaenzt diese Basisfunktionen aber sehr gut. GGally, PerformanceAnalytics, MuMIn, AICcmodavg, fitdistrplus, lme4 und sjPlot werden fuer die spaeteren multivariaten Analysen benoetigt. Die Modellguete werden wir mittels lattice, blmeco und lattice pruefen.\r\nLadet nun also die benoetigten Bibliotheken.\r\nAllenfalls muessen diese zuerst mit install.packages(“NAME_BIB”) installiert werden.\r\n\r\n\r\n# Benoetigte Bibliotheken ####\r\nlibrary(tidyverse) # Data wrangling und piping\r\nlibrary(lubridate) # Arbeiten mit Datumsformaten\r\nlibrary(data.table)# schnelles Dateneinlesen\r\nlibrary(GGally)    # plotten von mehreren Plots gleichzeitig\r\nlibrary(PerformanceAnalytics) # Plotte Korrelationsmatrix\r\nlibrary(MuMIn)     # Multi-Model Inference\r\nlibrary(AICcmodavg)# Modellaverageing\r\nlibrary(fitdistrplus)# Prueft die Verteilung in Daten\r\nlibrary(lme4)      # Multivariate Modelle\r\nlibrary(blmeco)    # Bayesian data analysis using linear models\r\nlibrary(sjPlot)    # Plotten von Modellergebnissen (tab_model)\r\nlibrary(lattice)   # einfaches plotten von Zusammenhaengen zwischen Variablen\r\n\r\n\r\n\r\nAufgabe 3: Zeitliche Definitionen\r\nDefiniert den zeitlichen Horizont, also Start sowie Ende der Untersuchungen. Der Start- sowie der Endtermin fuer unsere Untersuchungen sollen das Jahr 2019 und das Jahr 2020 umfassen:\r\n\r\n\r\ndepo_start <- as.Date(\"2019-01-01\")\r\ndepo_end <- ...\r\n\r\n\r\n\r\nWichtiger Teil unserer Auswertungen ist der Einfluss des Lockdown auf das Besuchsverhalten. Wir muessen also Start und Ende des “harten” Lockdowns in der Schweiz definieren:\r\n\r\n\r\nlock_start <- as.Date(\"2020-03-16\")\r\nlock_end <- as.Date(\"2020-05-11\")\r\n\r\n\r\n\r\nEbenfalls muessen die erste und letzte Kalenderwoche der Untersuchungsfrist definiert werden. Diese werden bei wochenweisen Analysen ausgeklammert da sie i.d.R. unvollstaendig sind (das ist ein spaeterer Arbeitsschritt). Geht wie oben vor. Tipp: der Befehl week() liefert euch die Kalenderwoche.\r\nFerienzeiten koennen einen grossen Einfluss auf das Besueraufkommen haben. Die relevanten Ferienzeitraeume (fuer das Jahr 2019 und das erste Halbjahr 2020) muessen daher bekannt sein. Zur Definition der Ferien kann z.B. folgend vorgegangen werden:\r\n\r\n\r\n# (https://www.schulferien.org/schweiz/ferien/2020/)\r\nFruehlingsferien_2019_start <- as.Date(\"2019-04-13\")\r\nFruehlingsferien_2019_ende <- as.Date(\"2019-04-28\")\r\nSommerferien_2019_start <- as.Date(\"2019-07-6\")\r\nSommerferien_2019_ende <- as.Date(\"2019-08-18\")\r\nHerbstferien_2019_start <- as.Date(\"2019-10-05\")\r\nHerbstferien_2019_ende <- as.Date(\"2019-10-20\")\r\nWinterferien_2019_start <- as.Date(\"2019-12-21\")\r\nWinterferien_2019_ende <- as.Date(\"2020-01-02\")\r\n\r\nFruehlingsferien_start <- as.Date(\"2020-04-11\")\r\nFruehlingsferien_ende <- as.Date(\"2020-04-26\")\r\nSommerferien_start <- as.Date(\"2020-07-11\")\r\nSommerferien_ende <- as.Date(\"2020-08-16\")\r\n\r\n\r\n\r\nNun sind alle Vorbereitungen gemacht, die Projektstruktur aufgebaut und die eigentliche Arbeit kann beginnen.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-09-07T11:22:55+02:00",
    "input_file": "Projektierung.knit.md"
  }
]
