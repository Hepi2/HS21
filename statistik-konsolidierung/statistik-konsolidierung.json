[
  {
    "path": "statistik-konsolidierung/Statistik_Konsolidierung1_Demo_assoziationen/",
    "title": "Demo",
    "description": {},
    "author": [],
    "date": "2021-08-19",
    "categories": [
      "Statistik_Konsolidierung1",
      "Statistik"
    ],
    "contents": "\n\n\n\nDemo: Statistik Konsolidierung 1\n\nDownload R-Skript\n\nDemo für Assoziationen\n\n\n\n# state: november 2020\n# author: gian-andrea egeler\n\n#lade Packages\nlibrary(tidyverse)\nlibrary(magrittr)\nlibrary(here)\nlibrary(lubridate)\n\n#mytheme\nmytheme <- \n  theme_classic() + \n  theme(\n    axis.line = element_line(color = \"black\"), \n    axis.text = element_text(size = 20, color = \"black\"), \n    axis.title = element_text(size = 20, color = \"black\"), \n    axis.ticks = element_line(size = 1, color = \"black\"), \n    axis.ticks.length = unit(.5, \"cm\")\n  )\n\n\n\n\n\n\n#lade dateien\n# mehr info darüber hier: https://cran.r-project.org/web/packages/explore/vignettes/explore_mtcars.html\nmtcars %<>% \n  as_tibble() %>% # da \"nur\" data frame kann glimplse nichts damit anfangen \n  # summary() %>% \n  mutate(test_test = if_else(.$vs == 0, \"normal\", \"v-type\"))\n\nsummary(as_tibble(mtcars))\n\n\n      mpg             cyl             disp             hp       \n Min.   :10.40   Min.   :4.000   Min.   : 71.1   Min.   : 52.0  \n 1st Qu.:15.43   1st Qu.:4.000   1st Qu.:120.8   1st Qu.: 96.5  \n Median :19.20   Median :6.000   Median :196.3   Median :123.0  \n Mean   :20.09   Mean   :6.188   Mean   :230.7   Mean   :146.7  \n 3rd Qu.:22.80   3rd Qu.:8.000   3rd Qu.:326.0   3rd Qu.:180.0  \n Max.   :33.90   Max.   :8.000   Max.   :472.0   Max.   :335.0  \n      drat             wt             qsec             vs        \n Min.   :2.760   Min.   :1.513   Min.   :14.50   Min.   :0.0000  \n 1st Qu.:3.080   1st Qu.:2.581   1st Qu.:16.89   1st Qu.:0.0000  \n Median :3.695   Median :3.325   Median :17.71   Median :0.0000  \n Mean   :3.597   Mean   :3.217   Mean   :17.85   Mean   :0.4375  \n 3rd Qu.:3.920   3rd Qu.:3.610   3rd Qu.:18.90   3rd Qu.:1.0000  \n Max.   :4.930   Max.   :5.424   Max.   :22.90   Max.   :1.0000  \n       am              gear            carb        test_test        \n Min.   :0.0000   Min.   :3.000   Min.   :1.000   Length:32         \n 1st Qu.:0.0000   1st Qu.:3.000   1st Qu.:2.000   Class :character  \n Median :0.0000   Median :4.000   Median :2.000   Mode  :character  \n Mean   :0.4062   Mean   :3.688   Mean   :2.812                     \n 3rd Qu.:1.0000   3rd Qu.:4.000   3rd Qu.:4.000                     \n Max.   :1.0000   Max.   :5.000   Max.   :8.000                     \n\n\n# kline daten\nmtcars %>% \n  as_tibble() %>% \n  mutate(vs = if_else(.$vs == 0, \"normal\", \"v-type\")) -> df\n\n#assoziation zwischen anzahl zylinder und motorentyp ()\ntable(df$vs, df$am) # zur visualisierung: sieht aus, als gäbe es weniger v motoren bei den handgeschalteten\n\n\n        \n          0  1\n  normal 12  6\n  v-type  7  7\n\n\n#lass und das überprüfen\n#im wide format\nchi_sq <- chisq.test(df$am, df$vs)\n\n#fisher exakter test\nfisher.test(df$am, df$vs)\n\n\n\n    Fisher's Exact Test for Count Data\n\ndata:  df$am and df$vs\np-value = 0.4727\nalternative hypothesis: true odds ratio is not equal to 1\n95 percent confidence interval:\n  0.3825342 10.5916087\nsample estimates:\nodds ratio \n  1.956055 \n\ntitlke\njsldkfjsldkfj sdjfsldkfj 0.5555115.\n\n\n\n# t-test zwischen getriebe (v- vs. s-motor) und ps (pferdestärke)\n# visualisierung\nggplot(df, aes(y = hp, x = vs)) +\n  # stat_boxplot(geom ='errorbar', width = .25) +\n  # geom_boxplot() +\n  geom_violin()\n\n\n\n  labs(x = \"\\nBauform Motor\", y = \"Pferdestärke (PS)\\n\") +\n  mytheme\n\n\nNULL\n\n       \nboxplot(df$hp~df$vs) # sieht ganz ok aus\n\n\n\n\n# t-test oder auch anova möglich\nttest <- t.test(df$hp ~ df$vs)\naov.1 <- aov(df$hp ~ df$vs)\n\n#zeige resultate\nttest\n\n\n\n    Welch Two Sample t-test\n\ndata:  df$hp by df$vs\nt = 6.2908, df = 23.561, p-value = 1.82e-06\nalternative hypothesis: true difference in means between group normal and group v-type is not equal to 0\n95 percent confidence interval:\n  66.06161 130.66854\nsample estimates:\nmean in group normal mean in group v-type \n           189.72222             91.35714 \n\nsummary.lm(aov.1)\n\n\n\nCall:\naov(formula = df$hp ~ df$vs)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-98.72 -25.61  -4.04  22.55 145.28 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   189.72      11.35  16.720  < 2e-16 ***\ndf$vsv-type   -98.37      17.16  -5.734 2.94e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 48.14 on 30 degrees of freedom\nMultiple R-squared:  0.5229,    Adjusted R-squared:  0.507 \nF-statistic: 32.88 on 1 and 30 DF,  p-value: 2.941e-06\n\n\n\n# für mehr infos here: https://cran.r-project.org/web/packages/datasauRus/vignettes/Datasaurus.html\n\n\nlibrary(datasauRus)\nif(requireNamespace(\"dplyr\")){\n  suppressPackageStartupMessages(library(dplyr))\n  dt <- datasaurus_dozen %>% \n    group_by(dataset) %>% \n    summarize(\n      mean_x    = mean(x),\n      mean_y    = mean(y),\n      std_dev_x = sd(x),\n      std_dev_y = sd(y),\n      corr_x_y  = cor(x, y)\n    )\n}\n\n# check data structure\nglimpse(dt)\n\n\n# plot two examples  \nif(requireNamespace(\"ggplot2\")){\n  library(ggplot2)\n  \n  dt = filter(datasaurus_dozen, dataset == \"dino\" | dataset == \"slant_up\")\n  \n  ggplot(dt, aes(x=x, y=y, colour=dataset))+\n    geom_point()+\n    theme_bw() +\n    theme(legend.position = \"none\") +\n    facet_wrap(~dataset) +\n    geom_smooth(method = \"lm\", se = FALSE)\n  \n}\n\n\n\n\n\n\n\n\n\n",
    "preview": "statistik-konsolidierung/Statistik_Konsolidierung1_Demo_assoziationen/distill-preview.png",
    "last_modified": "2021-10-22T08:00:21+00:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "statistik-konsolidierung/Statistik_Konsolidierung1_suggest_datasets/",
    "title": "Vorgeschlagene",
    "description": {},
    "author": [],
    "date": "2021-08-19",
    "categories": [
      "Statistik_Konsolidierung1",
      "Statistik"
    ],
    "contents": "\n\n\n\nVorgeschlagene Datensaetze zur Repetition der Uebungen\nR data sets\nchickwts\niris\nmtcars\nTitanic (achtung hat das table Datenformat)\nstarwars (dplyr package)\nResearch Methods data sets\nNOVANIMAL (Kassendaten oder Gästebefragung)\nUkraine (Demoskript 3)\nIpomopsis (Demoskript 3)\n\n\n\n",
    "preview": {},
    "last_modified": "2021-10-22T08:00:21+00:00",
    "input_file": {}
  },
  {
    "path": "statistik-konsolidierung/Statistik_Konsolidierung4_Demo_GLM/",
    "title": "Konsolidierung 4: GLM",
    "description": {},
    "author": [
      {
        "name": "Gian-Andrea Egeler",
        "url": {}
      }
    ],
    "date": "2021-10-22",
    "categories": [
      "Statistik_Konsolidierung4"
    ],
    "contents": "\n\n\n  |                                                                  \n  |                                                            |   0%\n  |                                                                  \n  |....................                                        |  33%\n  |                                                                  \n  |........................................                    |  67%\n  |                                                                  \n  |............................................................| 100%\n[1] \"Demo_GLM_Konsolidierung4.R\"\n\nDemo GLM\n\nDownload R-Skript\n\n\n\n############\n# quasipoisson regression\n############\n\ncars <- mtcars %>% \n   mutate(kml = (235.214583/mpg))\n\nglm.poisson <- glm(hp ~ kml, data = cars, family = poisson(link = log))\n\nsummary(glm.poisson) # klare overdisperion\n\n\n\nCall:\nglm(formula = hp ~ kml, family = poisson(link = log), data = cars)\n\nDeviance Residuals: \n   Min      1Q  Median      3Q     Max  \n-6.438  -2.238  -1.159   2.457  10.576  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) 3.894293   0.050262   77.48   <2e-16 ***\nkml         0.081666   0.003414   23.92   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 958.27  on 31  degrees of freedom\nResidual deviance: 426.59  on 30  degrees of freedom\nAIC: 645.67\n\nNumber of Fisher Scoring iterations: 4\n\n# deshalb quasipoisson\nglm.quasipoisson <- glm(hp ~ mpg, data = cars, family = quasipoisson(link = log))\n\nsummary(glm.quasipoisson)\n\n\n\nCall:\nglm(formula = hp ~ mpg, family = quasipoisson(link = log), data = cars)\n\nDeviance Residuals: \n   Min      1Q  Median      3Q     Max  \n-4.335  -2.042  -1.334   1.886   9.229  \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  6.30196    0.17530  35.950  < 2e-16 ***\nmpg         -0.06921    0.00938  -7.379 3.21e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for quasipoisson family taken to be 10.83975)\n\n    Null deviance: 958.27  on 31  degrees of freedom\nResidual deviance: 303.86  on 30  degrees of freedom\nAIC: NA\n\nNumber of Fisher Scoring iterations: 4\n\n# visualisiere\nggplot2::ggplot(cars, aes(x = mpg, y = hp)) + \n    geom_point(size = 8) + \n    geom_smooth(method = \"glm\", method.args = list(family = \"poisson\"), se = F,\n                color = \"green\", size = 2) + \n    scale_x_continuous(limits = c(0,35)) + \n    scale_y_continuous(limits = c(0,400)) + \n    theme_classic()\n\n\n\n#Rücktransformation meiner Variablen\n\n\n\n\n\n############\n# logistische regression\n############\ncars <- mtcars\n\n# erstelle das modell\nglm.binar <- glm(vs ~ hp, data = cars, family = binomial(link = logit)) \n\n\nsummary(glm.binar)\n\n\n\nCall:\nglm(formula = vs ~ hp, family = binomial(link = logit), data = cars)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-2.12148  -0.20302  -0.01598   0.51173   1.20083  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)   \n(Intercept)  8.37802    3.21593   2.605  0.00918 **\nhp          -0.06856    0.02740  -2.502  0.01234 * \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 43.860  on 31  degrees of freedom\nResidual deviance: 16.838  on 30  degrees of freedom\nAIC: 20.838\n\nNumber of Fisher Scoring iterations: 7\n\n# überprüfe das modell\ncars$predicted <- predict(glm.binar, type = \"response\")\n\n\n# visualisiere\nggplot(cars, aes(x = hp, y = vs)) +    \n    geom_point(size = 8) +\n    geom_point(aes(y = predicted), shape  = 1, size = 6) +\n    guides(color = F) +\n    geom_smooth(method = \"glm\", method.args = list(family = 'binomial'), \n                se = FALSE,\n                size = 2) +\n    # geom_smooth(method = \"lm\", color = \"red\", se = FALSE) +\n    mytheme\n\n\n\n#Modeldiagnostik (wenn nicht signifikant, dann OK)\n1 - pchisq(glm.binar$deviance,glm.binar$df.resid)  \n\n\n[1] 0.9744718\n\n#Modellgüte (pseudo-R²)\n1 - (glm.binar$dev / glm.binar$null)  \n\n\n[1] 0.6161072\n\n#Steilheit der Beziehung (relative Änderung der odds von x + 1 vs. x)\nexp(glm.binar$coefficients[2])\n\n\n       hp \n0.9337368 \n\n#LD50 (wieso negativ: weil zweiter koeffizient negative steigung hat)\nabs(glm.binar$coefficients[1]/glm.binar$coefficients[2])\n\n\n(Intercept) \n   122.1986 \n\n# kreuztabelle (confusion matrix): fasse die ergebnisse aus predict und \"gegebenheiten, realität\" zusammen\ntab1 <- table(cars$predicted>.5, cars$vs)\ndimnames(tab1) <- list(c(\"M:S-type\",\"M:V-type\"), c(\"T:S-type\", \"T:V-type\"))\ntab1\n\n\n         T:S-type T:V-type\nM:S-type       15        2\nM:V-type        3       12\n\nprop.table(tab1, 2)\n\n\n          T:S-type  T:V-type\nM:S-type 0.8333333 0.1428571\nM:V-type 0.1666667 0.8571429\n\n#Rücktransformation meiner Variablen\n\n\n\n\n\n###########\n# LOESS & GAM\n###########\n\nggplot2::ggplot(mtcars, aes(x = mpg, y = hp)) + \n  geom_point(size = 8) + \n  geom_smooth(method = \"gam\", se = F, color = \"green\", size = 2, formula = y ~ s(x, bs = \"cs\")) + \n  geom_smooth(method = \"loess\", se = F, color = \"red\", size = 2) + \n  geom_smooth(method = \"glm\", size = 2, color = \"blue\", se = F) + \n  scale_x_continuous(limits = c(0,35)) + \n    scale_y_continuous(limits = c(0,400)) + \n    mytheme\n\n\n\nggplot2::ggplot(mtcars, aes(x = mpg, y = hp)) + \n  geom_point(size = 8) + \n  geom_smooth(method = \"gam\", se = F, color = \"green\", size = 2, formula = y ~ s(x, bs = \"cs\")) + \n    # geom_smooth(method = \"loess\", se = F, color = \"red\", size = 2) + \n  geom_smooth(method = \"glm\", size = 2, color = \"grey\", se = F) + \n  scale_x_continuous(limits = c(0,35)) + \n  scale_y_continuous(limits = c(0,400)) + \n  mytheme\n\n\n\n\n\n\n\n",
    "preview": "statistik-konsolidierung/Statistik_Konsolidierung4_Demo_GLM/distill-preview.png",
    "last_modified": "2021-10-22T08:00:21+00:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  }
]
