1555599658421:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1555599658429:delim = ";",
1555599658431:na = c(" ", "-99"),
1555599658434:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1555599658448:drop_na(Patientencode) %>%
1555599658451:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1555599658452:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention")
1555599663421:)
1555599669379:library(tidyverse)
1555599670487:library(drake)
1555599670516:library(foreign)
1555599691615:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1555599691618:delim = ";",
1555599691619:na = c(" ", "-99"),
1555599691621:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1555599691622:drop_na(Patientencode) %>%
1555599691624:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1555599691627:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"))
1555599699086:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960"
1555599703573:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y")
1555602336294:pattern2 <- c("T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T1_gad")
1555602361009:print(names)
1555602366477:for (names in pattern2) {
1555602366479:print(names)
1555602366482:}
1555602447699:sub_dat_ <- data.frame(lapply(sub_dat, function(x)as.numeric(x)))
1555602451347:for (nam in pattern2) {
1555602451350:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555602451352:sub_dat_ <- data.frame(lapply(sub_dat, function(x)as.numeric(x)))
1555602451355:}
1555602455915:View(sub_dat_)
1555602506464:View(sub_dat)
1555602681300:for (nam in pattern2) {
1555602681302:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555602681303:sub_dat$rowsum <-rowSums(sub_dat)
1555602681306:}
1555602684614:View(sub_dat)
1555602730858:retrun(sub_dat)
1555602734953:for (nam in pattern2) {
1555602734954:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555602734957:sub_dat$name <-rowSums(sub_dat, na.rm = T)
1555602734960:retrun(sub_dat)
1555602734968:}
1555602738189:View(sub_dat)
1555602824621:x <- paste(sum, nam)
1555602838230:x <- paste("sum_, nam)
1555602838232:sub_dat$x <-rowSums(sub_dat, na.rm = T)
1555602838236:retrun(sub_dat)
1555602838238:}
1555602838247:names(ret)[2] <- 'name' # rename second column
1555602838248:#ret <- filter(ret, !ret$Artikel == "Total") # another way to filter data
1555602838251:ret <- ret[1:grep('Total*',ret$Artikel)[1], ] # greps every row until the sting in Artikel "Total ", because there are two cell containing the string total, take the first one
1555602838253:ret <- ret[ ,!grepl('X',names(ret))] # skip all rows containg an X as variable name
1555602838254:ret$source <- filename # new variable source takes the name of the file
1555602838256:ret$year <- 2015 # new variable year
1555602838257:return(ret)
1555602838258:}
1555602842653:x <- paste("sum_", nam)
1555602898483:empy <- tibble()
1555602987079:d <- 5
1555602987080:for(i in 1:10) {
1555602987082:nam <- paste("A", i, sep = "")
1555602987083:assign(nam, rnorm(3)+d)
1555602987085:}
1555603027601:for (nam in pattern2) {
1555603027604:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555603027606:x <- paste("sum_", nam, sep = "")
1555603027607:assign(x, rowSums(sub_dat, na.rm = T))
1555603027610:retrun(sub_dat)
1555603027612:}
1555603045533:for (nam in pattern2) {
1555603045536:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555603045538:x <- paste("sum_", nam, sep = "")
1555603045539:assign(x, rowSums(sub_dat, na.rm = T))
1555603045542:returnn(sub_dat)
1555603045543:}
1555603051189:for (nam in pattern2) {
1555603051192:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555603051194:x <- paste("sum_", nam, sep = "")
1555603051195:assign(x, rowSums(sub_dat, na.rm = T))
1555603051198:return(sub_dat)
1555603051199:}
1555603066297:View(sub_dat)
1555603066469:View(sub_dat)
1555603083377:for (nam in pattern2) {
1555603083380:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555603083382:x <- paste("sum_", nam, sep = "")
1555603083383:assign(x, rowSums(sub_dat, na.rm = T))
1555603083386:}
1555603091666:View(sub_dat)
1555603273466:for (nam in pattern2) {
1555603273470:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555603273471:x <- paste("sum_", nam, sep = "")
1555603273473:return(x, rowSums(sub_dat, na.rm = T))
1555603273477:}
1555603391130:bind_rows(dat,sub_dat)
1555603416573:for (nam in pattern2) {
1555603416579:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555603416581:x <- paste("sum_", nam, sep = "")
1555603416583:dat <- rbind(assign(x, rowSums(sub_dat, na.rm = T)))
1555603416585:bind_rows(dat,sub_dat)
1555603416591:}
1555603424857:for (nam in pattern2) {
1555603424859:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555603424865:x <- paste("sum_", nam, sep = "")
1555603424869:dat <- rbind(assign(x, rowSums(sub_dat, na.rm = T)))
1555603424879:}
1555603429621:View(dat)
1555603444181:dat <- (assign(x, rowSums(sub_dat, na.rm = T)))
1555603447929:for (nam in pattern2) {
1555603447932:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555603447937:x <- paste("sum_", nam, sep = "")
1555603447944:dat <- (assign(x, rowSums(sub_dat, na.rm = T)))
1555603447951:}
1555603489345:for (nam in pattern2) {
1555603489347:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555603489349:x <- paste("sum_", nam, sep = "")
1555603489351:dat <- bind_cols(assign(x, rowSums(sub_dat, na.rm = T)))
1555603489356:}
1555603516121:assign(x, rowSums(sub_dat, na.rm = T)
1555603520253:)
1555603647357:for (nam in pattern2) {
1555603647358:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555603647359:dat$sum <- paste("sum_", nam, sep = "")
1555603647361:empty[[nam]] <- rowSums(sub_dat, na.rm = T)
1555603647365:# dat <- bind_cols(assign(x, rowSums(sub_dat, na.rm = T)))
1555603647369:}
1555603707698:for (nam in pattern2) {
1555603707699:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555603707700:dat <- rowSums(sub_dat, na.rm = T)
1555603707702:dat$sum <- paste("sum_", nam, sep = "")
1555603707704:empty[[nam]] <- dat
1555603707707:# dat <- bind_cols(assign(x, rowSums(sub_dat, na.rm = T)))
1555603707711:}
1555603713687:View(dat)
1555603746001:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555603752541:sub_dat
1555603787145:sub_dat$sum_row <- rowSums(sub_dat, na.rm = T)
1555603807654:empy <- list()
1555603808061:for (nam in pattern2) {
1555603808063:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555603808066:sub_dat$sum_row <- rowSums(sub_dat, na.rm = T)
1555603808068:sub_dat$sum <- paste("sum_", nam, sep = "")
1555603808070:empty[[nam]] <- sub_dat
1555603808077:# dat <- bind_cols(assign(x, rowSums(sub_dat, na.rm = T)))
1555603808086:}
1555603818985:for (nam in pattern2) {
1555603818989:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555603818993:sub_dat$sum_row <- rowSums(sub_dat, na.rm = T)
1555603819012:sub_dat$sum <- paste("sum_", nam, sep = "")
1555603819017:empy[[nam]] <- sub_dat
1555603819025:# dat <- bind_cols(assign(x, rowSums(sub_dat, na.rm = T)))
1555603819032:}
1555603822774:View(empy)
1555603862303:empy <- list()
1555603862671:for (nam in pattern2) {
1555603862673:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555603862674:sum_row <- rowSums(sub_dat, na.rm = T)
1555603862676:sum_row$sum <- paste("sum_", nam, sep = "")
1555603862678:empy[[nam]] <- sub_row
1555603862681:# dat <- bind_cols(assign(x, rowSums(sub_dat, na.rm = T)))
1555603862684:}
1555603917031:empty <- list()
1555603917480:for (nam in pattern2) {
1555603917483:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555603917484:sub_dat$sum_row <- rowSums(sub_dat, na.rm = T)
1555603917486:sub_dat$sum <- paste("sum_", nam, sep = "")
1555603917487:empty[[nam]] <- sub_dat
1555603917490:# dat <- bind_cols(assign(x, rowSums(sub_dat, na.rm = T)))
1555603917493:}
1555603926141:View(empty)
1555603975430:do.call(bind_cols,empty)
1555603980947:data <- do.call(bind_cols,empty)
1555603984300:View(data)
1555604069839:names(raw_data)
1555604391378:raw_data[, 1:23]
1555604408417:# slice raw_data
1555604408418:data2 <- raw_data[, c(1:23,26:32)]
1555604416613:View(data2)
1555604429493:raw_data[, 1:23]
1555604432913:names(raw_data)
1555604450254:# slice raw_data
1555604450255:data2 <- raw_data[, c(1:23,69:78)]
1555604454706:View(data2)
1555604510255:raw_data <- bind_rows(data, data2)
1555604514394:View(raw_data)
1555604543327:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1555604543329:delim = ";",
1555604543330:na = c(" ", "-99"),
1555604543332:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1555604543334:drop_na(Patientencode) %>%
1555604543337:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1555604543338:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"))
1555604559552:raw_data2 <- bind_rows(data2, data)
1555604571253:View(raw_data2)
1555604605110:raw_data2 <- bind_cols(data2, data)
1555604608116:View(raw_data2)
1555604787452:names(sub_dat$sum)
1555604792964:names(sub_dat$sum_row)
1555604825024:name(data)
1555604830243:names(data)
1555604835972:names(data$T1_phq9_a)
1555604840872:names(data$T1_phq9_a) <- test
1555604848100:names(data$T1_phq9_a) <- "test"
1555604861434:View(data)
1555604881594:names(data)
1555604936679:empty <- tibble()
1555604937037:for (nam in pattern2) {
1555604937038:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555604937040:sub_dat$sum_row <- rowSums(sub_dat, na.rm = T)
1555604937042:sub_dat$sum_row <- rename(paste("sum_", nam, sep = "")
1555604937043:empty[nam] <- sub_dat
1555604937045:}
1555604937048:data <- do.call(bind_cols,empty)
1555604937051:# slice raw_data
1555604937052:data2 <- raw_data[, c(1:23,69:78)]
1555604937054:raw_data2 <- bind_cols(data2, data)
1555604937059:names(ret)[2] <- 'name' # rename second column
1555604937060:#ret <- filter(ret, !ret$Artikel == "Total") # another way to filter data
1555604937061:ret <- ret[1:grep('Total*',ret$Artikel)[1], ] # greps every row until the sting in Artikel "Total ", because there are two cell containing the string total, take the first one
1555604937065:ret <- ret[ ,!grepl('X',names(ret))] # skip all rows containg an X as variable name
1555604937067:ret$source <- filename # new variable source takes the name of the file
1555604937068:ret$year <- 2015 # new variable year
1555604937069:return(ret)
1555604937071:}
1555604947249:for (nam in pattern2) {
1555604947250:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555604947252:sub_dat$sum_row <- rowSums(sub_dat, na.rm = T)
1555604947253:sub_dat$sum_row <- rename(paste("sum_", nam, sep = "")
1555604947255:empty[nam] <- sub_dat
1555604947256:}
1555604947259:data <- do.call(bind_cols,empty)
1555604947262:# slice raw_data
1555604947264:data2 <- raw_data[, c(1:23,69:78)]
1555604947265:raw_data2 <- bind_cols(data2, data)
1555604947279:names(ret)[2] <- 'name' # rename second column
1555604947280:#ret <- filter(ret, !ret$Artikel == "Total") # another way to filter data
1555604947282:ret <- ret[1:grep('Total*',ret$Artikel)[1], ] # greps every row until the sting in Artikel "Total ", because there are two cell containing the string total, take the first one
1555604947283:ret <- ret[ ,!grepl('X',names(ret))] # skip all rows containg an X as variable name
1555604947285:ret$source <- filename # new variable source takes the name of the file
1555604947286:ret$year <- 2015 # new variable year
1555604947288:return(ret)
1555604947289:}
1555604962698:for (nam in pattern2) {
1555604977938:for (nam in pattern2) {
1555604977940:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555604977942:sub_dat$sum_row <- rowSums(sub_dat, na.rm = T)
1555604977943:sub_dat$sum_row <- rename(paste("sum_", nam, sep = ""))
1555604977944:empty[nam] <- sub_dat
1555604977946:}
1555604981841:empty <- tibble()
1555604982210:for (nam in pattern2) {
1555604982212:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555604982214:sub_dat$sum_row <- rowSums(sub_dat, na.rm = T)
1555604982215:sub_dat$sum_row <- rename(paste("sum_", nam, sep = ""))
1555604982217:empty[nam] <- sub_dat
1555604982218:}
1555605004976:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1555605008346:for (nam in pattern2) {
1555605008348:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555605008349:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1555605008351:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1555605008352:empty[nam] <- sub_dat
1555605008354:}
1555605015513:empty <- tibble()
1555605015713:for (nam in pattern2) {
1555605015714:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555605015716:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1555605015717:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1555605015719:empty[nam] <- sub_dat
1555605015721:}
1555605021633:warnings()
1555605039274:empty <- data.frame()
1555605065666:for (nam in pattern2) {
1555605065728:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555605065730:sum <- rowSums(sub_dat, na.rm = T)
1555605065732:# $sum_row <- paste("sum_", nam, sep = "")
1555605065734:empty[nam] <- sub_dat
1555605065736:}
1555605076081:for (nam in pattern2) {
1555605076082:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555605076084:sum <- rowSums(sub_dat, na.rm = T)
1555605076085:# $sum_row <- paste("sum_", nam, sep = "")
1555605076087:empty[nam] <- sum
1555605076088:}
1555605085150:empty <- data.frame("")
1555605086279:for (nam in pattern2) {
1555605086281:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555605086282:sum <- rowSums(sub_dat, na.rm = T)
1555605086284:# $sum_row <- paste("sum_", nam, sep = "")
1555605086285:empty[nam] <- sum
1555605086286:}
1555605095704:empty[nam]
1555605105698:for (nam in pattern2) {
1555605105700:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555605105706:sum <- rowSums(sub_dat, na.rm = T)
1555605105708:# $sum_row <- paste("sum_", nam, sep = "")
1555605105709:empty[] <- sum
1555605105711:}
1555605110860:for (nam in pattern2) {
1555605110861:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555605110863:sum <- rowSums(sub_dat, na.rm = T)
1555605110864:# $sum_row <- paste("sum_", nam, sep = "")
1555605110867:empty <- sum
1555605110868:}
1555605326788:data <- data[, grep("*sum", names(data), value = T)]
1555605335687:empty <- list() # somehow shuld it be possible with dataframe and notb only with list
1555605336085:for (nam in pattern2) {
1555605336087:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555605336089:sub_dat$sum_row <- rowSums(sub_dat, na.rm = T)
1555605336090:sub_dat$sum_row <- rename(paste("sum_", nam, sep = "")
1555605336092:empty[[nam]] <- sub_dat
1555605336093:}
1555605336098:data <- do.call(bind_cols,empty)
1555605336108:# slice raw_data and paste back
1555605336109:data2 <- raw_data[, c(1:23,69:78)]
1555605336111:data <- data[, grep("*sum", names(data), value = T)]
1555605336116:# raw_data2 <- bind_cols(data2, data) # cbind
1555605336121:# select only
1555605336127:names(ret)[2] <- 'name' # rename second column
1555605336129:#ret <- filter(ret, !ret$Artikel == "Total") # another way to filter data
1555605336130:ret <- ret[1:grep('Total*',ret$Artikel)[1], ] # greps every row until the sting in Artikel "Total ", because there are two cell containing the string total, take the first one
1555605336132:ret <- ret[ ,!grepl('X',names(ret))] # skip all rows containg an X as variable name
1555605336134:ret$source <- filename # new variable source takes the name of the file
1555605336135:ret$year <- 2015 # new variable year
1555605336137:return(ret)
1555605336139:}
1555605347692:for (nam in pattern2) {
1555605347696:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555605347699:sub_dat$sum_row <- rowSums(sub_dat, na.rm = T)
1555605347700:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1555605347701:empty[[nam]] <- sub_dat
1555605347703:}
1555605349123:data <- do.call(bind_cols,empty)
1555605350876:data <- data[, grep("*sum", names(data), value = T)]
1555605353284:View(data)
1555605362319:data <- data[, grep("sum", names(data), value = T)]
1555605382157:data <- do.call(bind_cols,empty)
1555605385274:dat <- data[, grep("sum", names(data), value = T)]
1555605387874:View(dat)
1555605398828:names(data)
1555605429149:empty <- list() # somehow shuld it be possible with dataframe and notb only with list
1555605429555:for (nam in pattern2) {
1555605429556:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555605429560:sub_dat$sum_row <- rowSums(sub_dat, na.rm = T)
1555605429565:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1555605429567:empty[[nam]] <- sub_dat
1555605429569:}
1555605430411:data <- do.call(bind_cols,empty)
1555605433189:View(data)
1555605450098:empty <- list() # somehow shuld it be possible with dataframe and notb only with list
1555605450347:for (nam in pattern2) {
1555605450349:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1555605450351:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1555605450353:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1555605450354:empty[[nam]] <- sub_dat
1555605450356:}
1555605450924:data <- do.call(bind_cols,empty)
1555605453226:# slice raw_data and paste back
1555605453231:data2 <- raw_data[, c(1:23,69:78)]
1555605453828:dat <- data[, grep("sum", names(data), value = T)]
1555605456308:View(dat)
1555605484149:raw_data2 <- bind_cols(data2, dat) # cbind
1555605487132:View(raw_data2)
1556043955969:library(tidyverse)
1556043957053:library(drake)
1556043957055:library(foreign)
1556043967541:install.packages("drake")
1556043984229:orig_data <- read.spss("TIDe_Gesamt_20190404_kopie.sav",
1556043984230:to.data.frame = T,
1556043984232:add.undeclared.levels = "append")
1556044005997:orig_data <- read.spss("TIDe_Gesamt_20190404_kopie.sav",
1556044006000:to.data.frame = T,
1556044006002:add.undeclared.levels = "append")
1556044020326:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556044020328:delim = ";",
1556044020330:na = c(" ", "-99"),
1556044020331:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556044020333:drop_na(Patientencode) %>%
1556044020334:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556044020336:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"))
1556044031461:plan <- drake_plan(
1556044031464:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556044031466:delim = ";",
1556044031467:na = c(" ", "-99"),
1556044031470:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556044031473:drop_na(Patientencode) %>%
1556044031475:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556044031477:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention")),
1556044031478:# Schulabschluss = recode(.$Schulabschluss, ???)),
1556044031480:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960",
1556044031481:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y"),
1556044031484:)
1556044036629:plan <- drake_plan(
1556044036631:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556044036632:delim = ";",
1556044036633:na = c(" ", "-99"),
1556044036635:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556044036636:drop_na(Patientencode) %>%
1556044036638:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556044036639:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention")),
1556044036641:# Schulabschluss = recode(.$Schulabschluss, ???)),
1556044036642:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960",
1556044036643:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y"),
1556044036646:)
1556044042042:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960",
1556044042043:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y"),
1556044052754:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960"
1556044058412:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y")
1556044132060:pattern2 <- c("T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T1_gad")
1556044132831:empty <- list() # somehow shuld it be possible with dataframe and notb only with list
1556044133093:for (nam in pattern2) {
1556044133096:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556044133099:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556044133101:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1556044133104:empty[[nam]] <- sub_dat
1556044133106:}
1556044135809:data <- do.call(bind_cols,empty)
1556044159952:# slice raw_data and paste back
1556044159953:data2 <- raw_data[, c(1:23,69:78)]
1556044160238:dat <- data[, grep("sum", names(data), value = T)]
1556044160557:raw_data2 <- bind_cols(data2, dat) # cbind
1556044170313:View(raw_data2)
1556044193746:install.packages("Amelia")
1556044249799:library(Amelia)
1556044266056:View(orig_data)
1556044388899:levels(orig_data$T0_Schulabschluss)
1556044424526:orig_data$T0_Schulabschluss
1556044431927:levels(orig_data$T0_Schulabschluss)
1556045104717:plan <- drake_plan(
1556045104718:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556045104720:delim = ";",
1556045104721:na = c(" ", "-99"),
1556045104722:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556045104724:drop_na(Patientencode) %>%
1556045104726:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556045104727:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556045104729:Schulabschluss = recode(.$Schulabschluss, '1' = "noch in der Schule",
1556045104730:'2' = "ohne Schulabschluss",
1556045104732:'3' = "Primar/Sekundarschule",
1556045104733:'4' = "Berufsmaturität",
1556045104735:'5' = "Sekundarschule",
1556045104736:'6' = "Fachmatur",
1556045104738:'7' = "Fachchule",
1556045104740:'8' = "Universität",
1556045104741:'9' = "anderes")),
1556045104743:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960",
1556045104744:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y")
1556045104747:)
1556045108218:library(drake)
1556045125347:install.packages("drake", dependencies = T)
1556045496681:library(drake)
1556045506116:plan <- drake_plan(
1556045506118:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556045506121:delim = ";",
1556045506122:na = c(" ", "-99"),
1556045506123:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556045506125:drop_na(Patientencode) %>%
1556045506126:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556045506127:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556045506129:Schulabschluss = recode(.$Schulabschluss, '1' = "noch in der Schule",
1556045506130:'2' = "ohne Schulabschluss",
1556045506131:'3' = "Primar/Sekundarschule",
1556045506133:'4' = "Berufsmaturität",
1556045506134:'5' = "Sekundarschule",
1556045506136:'6' = "Fachmatur",
1556045506137:'7' = "Fachchule",
1556045506138:'8' = "Universität",
1556045506140:'9' = "anderes")),
1556045506141:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960",
1556045506142:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y")
1556045506145:)
1556045527761:plan <- drake_plan(
1556045527764:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556045527766:delim = ";",
1556045527767:na = c(" ", "-99"),
1556045527769:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556045527770:drop_na(Patientencode) %>%
1556045527772:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556045527773:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556045527779:Schulabschluss = recode(.$Schulabschluss, '1' = "noch in der Schule",
1556045527781:'2' = "ohne Schulabschluss",
1556045527782:'3' = "Primar/Sekundarschule",
1556045527783:'4' = "Berufsmaturität",
1556045527785:'5' = "Sekundarschule",
1556045527786:'6' = "Fachmatur",
1556045527788:'7' = "Fachchule",
1556045527789:'8' = "Universität",
1556045527790:'9' = "anderes")),
1556045527792:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb = "01.1960",
1556045527793:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y")
1556045527797:)
1556045551144:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556045551146:delim = ";",
1556045551147:na = c(" ", "-99"),
1556045551148:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556045551150:drop_na(Patientencode) %>%
1556045551151:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556045551152:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556045551154:Schulabschluss = recode(.$Schulabschluss, '1' = "noch in der Schule",
1556045551155:'2' = "ohne Schulabschluss",
1556045551156:'3' = "Primar/Sekundarschule",
1556045551158:'4' = "Berufsmaturität",
1556045551159:'5' = "Sekundarschule",
1556045551160:'6' = "Fachmatur",
1556045551162:'7' = "Fachchule",
1556045551163:'8' = "Universität",
1556045551164:'9' = "anderes"))
1556045611011:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556045611012:delim = ";",
1556045611014:na = c(" ", "-99"),
1556045611015:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556045611017:drop_na(Patientencode) %>%
1556045611018:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556045611019:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556045611021:Schulabschluss = recode(.$Schulabschluss,
1556045611022:'1' = "noch in der Schule",
1556045611024:'2' = "ohne Schulabschluss",
1556045611025:'3' = "Primar/Sekundarschule",
1556045611026:'4' = "Berufsmaturität",
1556045611028:'5' = "Sekundarschule",
1556045611029:'6' = "Fachmatur",
1556045611031:'7' = "Fachchule",
1556045611032:'8' = "Universität",
1556045611034:'9' = "anderes"))
1556045637739:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556045637744:delim = ";",
1556045637748:na = c(" ", "-99"),
1556045637752:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556045637758:drop_na(Patientencode) %>%
1556045637762:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556045637766:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556045637771:Schulabschluss = recode(.$T0_Schulabschluss,
1556045637776:'1' = "noch in der Schule",
1556045637778:'2' = "ohne Schulabschluss",
1556045637781:'3' = "Primar/Sekundarschule",
1556045637784:'4' = "Berufsmaturität",
1556045637787:'5' = "Sekundarschule",
1556045637792:'6' = "Fachmatur",
1556045637795:'7' = "Fachchule",
1556045637798:'8' = "Universität",
1556045637801:'9' = "anderes"))
1556045662384:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960"
1556045666460:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y")
1556045670199:pattern2 <- c("T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T1_gad")
1556045671436:empty <- list() # somehow shuld it be possible with dataframe and notb only with list
1556045671458:for (nam in pattern2) {
1556045671461:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556045671463:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556045671465:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1556045671466:empty[[nam]] <- sub_dat
1556045671468:}
1556045673747:data <- do.call(bind_cols,empty)
1556045686838:# slice raw_data and paste back
1556045686839:data2 <- raw_data[, c(1:23,69:78)]
1556045687933:dat <- data[, grep("sum", names(data), value = T)]
1556045689081:raw_data2 <- bind_cols(data2, dat) # cbind
1556045740966:#missing map
1556045740968:missmap(raw_data2)
1556045972573:raw_data2[55,]
1556046030745:raw_data2[55,] <- NULL
1556046043957:raw_data2[-55,]
1556046061350:raw_data2 <- raw_data2[-55,]
1556046067794:#missing map
1556046067796:missmap(raw_data2) # 20 percent are missing especially schulabschluss
1556046493893:library(reshape2)
1556046551636:# melt into long format
1556046551639:raw_data3 <- melt(raw_data2,id.vars = "Patientencode")
1556046595285:View(raw_data3)
1556046610146:# melt into long format
1556046610149:raw_data3 <- melt(raw_data2)
1556046620409:View(raw_data3)
1556046723189:names(raw_data2)
1556047594725:raw_data2 <- raw_data2 %>%
1556047594728:select(Patientencode, GRUPPENZUTEILUNG,
1556047594729:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, sum, sum_row,
1556047594730:sum1, sum_row2, sum3, sum_row3, sum4, sum_row4) %>%
1556047594732:rename(GRUPPENZUTEILUNG = condit, T0_Datum = date, T0_sex = gender, T0_Schulabschluss = educ,
1556047594733:sum_row = T1_phq9, sum_row1 = T0_phq15, sum_row2 = T1_phq15, sum_row3 = T0_fptm, sum_row4 = T1_gad)
1556047715951:raw_data2 <- raw_data2 %>%
1556047715954:select(Patientencode, GRUPPENZUTEILUNG,
1556047715955:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, sum, sum_row,
1556047715957:sum1, sum_row2, sum3, sum_row3, sum4, sum_row4) %>%
1556047715959:rename(condit GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss,
1556047715964:T1_phq9 = sum_row, T0_phq15 = sum_row1, T1_phq15 = sum_row2, T0_fptm = sum_row3, T1_gad = sum_row4)
1556047722570:raw_data2 <- raw_data2 %>%
1556047722573:select(Patientencode, GRUPPENZUTEILUNG,
1556047722575:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, sum, sum_row,
1556047722579:sum1, sum_row2, sum3, sum_row3, sum4, sum_row4) %>%
1556047722582:rename(condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss,
1556047722584:T1_phq9 = sum_row, T0_phq15 = sum_row1, T1_phq15 = sum_row2, T0_fptm = sum_row3, T1_gad = sum_row4)
1556047782436:raw_data2 <- raw_data2 %>%
1556047782440:select(Patientencode, GRUPPENZUTEILUNG,
1556047782443:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, sum, sum_row,
1556047782446:sum1, sum_row1, sum2, sum_row2, sum3, sum_row3, sum4, sum_row4) %>%
1556047782450:rename(condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss,
1556047782453:T1_phq9 = sum_row, T0_phq15 = sum_row1, T1_phq15 = sum_row2, T0_fptm = sum_row3, T1_gad = sum_row4)
1556047799929:View(raw_data2)
1556047838751:paste("sum", 1:4)
1556047846500:paste("sum", 1:4, sep = "")
1556047862182:# melt into long format
1556047862187:raw_data3 <- melt(raw_data2, measure.vars = paste("sum", 1:4, sep = ""))
1556047866777:View(raw_data3)
1556047894385:# melt into long format
1556047894387:raw_data3 <- melt(raw_data2, measure.vars = paste("sum", 0:4, sep = ""))
1556047924589:# melt into long format
1556047924594:raw_data3 <- melt(raw_data2, measure.vars = c("sum", "sum1", "sum2", "sum3", "sum4"))
1556047930607:View(raw_data3)
1556047964211:raw_data2 <- raw_data2 %>%
1556047964213:select(Patientencode, GRUPPENZUTEILUNG,
1556047964214:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, sum, sum_row,
1556047964216:sum1, sum_row1, sum2, sum_row2, sum3, sum_row3, sum4, sum_row4) %>%
1556047964218:rename(condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss)
1556047970057:# slice raw_data and paste back
1556047970059:data2 <- raw_data[, c(1:23,69:78)]
1556047970657:dat <- data[, grep("sum", names(data), value = T)]
1556047971240:raw_data2 <- bind_cols(data2, dat) # cbind
1556047974710:# drop all usless variables and rename
1556047974713:raw_data2 <- raw_data2[-55,] # contains only NA
1556047975286:raw_data2 <- raw_data2 %>%
1556047975288:select(Patientencode, GRUPPENZUTEILUNG,
1556047975291:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, sum, sum_row,
1556047975293:sum1, sum_row1, sum2, sum_row2, sum3, sum_row3, sum4, sum_row4) %>%
1556047975297:rename(condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss)
1556047993303:# melt into long format
1556047993307:raw_data3 <- melt(raw_data2, id.vars = c("sum_row1") measure.vars = c("sum", "sum1", "sum2", "sum3", "sum4"))
1556048002794:# melt into long format
1556048002797:raw_data3 <- melt(raw_data2, id.vars = c("sum_row1"), measure.vars = c("sum", "sum1", "sum2", "sum3", "sum4"))
1556048007218:View(raw_data3)
1556048029108:?melt
1556048076698:# melt into long format
1556048076702:raw_data3 <- melt(raw_data2, id.vars = c("sum_row","sum_row1", "sum_row2", "sum_row3", "sum_row4"), measure.vars = c("sum", "sum1", "sum2", "sum3", "sum4"))
1556048080104:View(raw_data3)
1556048136447:# melt into long format
1556048136449:raw_data3 <- melt(raw_data2,  measure.vars = c("sum", "sum1", "sum2", "sum3", "sum4"))
1556048139411:View(raw_data3)
1556048243574:?cast
1556048263316:?gather
1556048319047:raw_data4 <- gather(raw_data2, value = c("sum", "sum1", "sum2", "sum3", "sum4"))
1556048328571:raw_data4 <- dplyr::gather(raw_data2, value = c("sum", "sum1", "sum2", "sum3", "sum4"))
1556048338164:raw_data4 <- tidyr::gather(raw_data2, value = c("sum", "sum1", "sum2", "sum3", "sum4"))
1556048365946:raw_data4 <- tidyr::gather(raw_data2, key = c("row_sum"),  value = c("sum", "sum1", "sum2", "sum3", "sum4"))
1556048836211:# melt into long format
1556048836214:raw_data3 <- melt(raw_data2,  measure.vars = c("row_sum","sum", "sum1", "sum2", "sum3", "sum4"))
1556048851289:# melt into long format
1556048851293:raw_data3 <- melt(raw_data2,  measure.vars = c("sum_row","sum", "sum1", "sum2", "sum3", "sum4"))
1556048910804:# melt into long format
1556048910807:raw_data3 <- melt(raw_data2,  measure.vars = c("sum", "sum1", "sum2", "sum3", "sum4"))
1556048943959:raw_data4 <- tidyr::gather(raw_data2, key = c("row_sum"),  value = c("sum", "sum1", "sum2", "sum3", "sum4"))
1556048952436:raw_data4 <- tidyr::gather(raw_data2)
1556048960232:View(raw_data4)
1556049172232:raw_data4 <- tidyr::gather(raw_data2, c("row_sum", "row_sum2"))
1556049182381:raw_data4 <- tidyr::gather(raw_data2, key = c("row_sum", "row_sum2"))
1556049289917:raw_data4 <- tidyr::gather(raw_data2, key = c(`row_sum`, `row_sum2`))
1556049302749:raw_data4 <- tidyr::gather(raw_data2, key = c(row_sum, row_sum2))
1556049318472:raw_data4 <- tidyr::gather(raw_data2, key = row_sum)
1556049324869:View(raw_data4)
1556049460985:raw_data4 <- tidyr::gather(raw_data2, test, value, -Patientencode)
1556049529263:raw_data4 <- tidyr::gather(raw_data2, test, value, -c(`Patientencode`,`sex`, `date`, `educ`)
1556049533164:)
1556049536630:View(raw_data4)
1556049594946:raw_data4 <- tidyr::gather(raw_data2, test, value, -c(`Patientencode`,`sex`, `date`, `educ`, `condit`, `Anz_Telefonate`))
1556049598341:View(raw_data4)
1556049717281:raw_data2 <- raw_data2 %>%
1556049717284:select(Patientencode, GRUPPENZUTEILUNG,
1556049717287:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, sum, sum_row,
1556049717290:sum1, sum_row1, sum2, sum_row2, sum3, sum_row3, sum4, sum_row4) %>%
1556049717293:rename(condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss,
1556049717296:test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556049731729:data2 <- raw_data[, c(1:23,69:78)]
1556049731732:dat <- data[, grep("sum", names(data), value = T)]
1556049731735:raw_data2 <- bind_cols(data2, dat) # cbind
1556049734994:raw_data_ <- raw_data2 %>%
1556049734997:select(Patientencode, GRUPPENZUTEILUNG,
1556049735001:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, sum, sum_row,
1556049735004:sum1, sum_row1, sum2, sum_row2, sum3, sum_row3, sum4, sum_row4) %>%
1556049735007:rename(condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss,
1556049735010:test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556049740356:# melt into long format
1556049740358:raw_data3 <- melt(raw_data2,  measure.vars = c("sum", "sum1", "sum2", "sum3", "sum4"))
1556049747615:View(raw_data3)
1556049767247:# melt into long format
1556049767252:raw_data3 <- melt(raw_data_,  measure.vars = c("sum", "sum1", "sum2", "sum3", "sum4"))
1556049770778:View(raw_data3)
1556049796392:# drop all usless variables and rename
1556049796395:raw_data2 <- raw_data2[-55,] # contains only NA
1556049798835:raw_data_ <- raw_data2 %>%
1556049798839:select(Patientencode, GRUPPENZUTEILUNG,
1556049798842:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, sum, sum_row,
1556049798845:sum1, sum_row1, sum2, sum_row2, sum3, sum_row3, sum4, sum_row4) %>%
1556049798848:rename(condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss,
1556049798850:test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556049805553:# melt into long format
1556049805556:raw_data3 <- melt(raw_data_,  measure.vars = c("sum", "sum1", "sum2", "sum3", "sum4"))
1556049809475:View(raw_data3)
1556049879340:raw_data_ <- raw_data2 %>%
1556049879344:select(Patientencode, GRUPPENZUTEILUNG,
1556049879347:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, sum, sum_row,
1556049879350:sum1, sum_row1, sum2, sum_row2, sum3, sum_row3, sum4, sum_row4) %>%
1556049879353:rename(condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss,
1556049879356:test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4,
1556049879360:score = sum, score = sum1, score = sum2, score = sum3, score = sum4) # rename for melting data
1556049883066:# melt into long format
1556049883069:raw_data3 <- melt(raw_data_,  measure.vars = c("sum", "sum1", "sum2", "sum3", "sum4"))
1556049900163:# melt into long format
1556049900166:raw_data3 <- melt(raw_data_,  measure.vars = "score")
1556049905550:View(raw_data3)
1556049923025:raw_data_ <- raw_data2 %>%
1556049923028:select(Patientencode, GRUPPENZUTEILUNG,
1556049923032:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, sum, sum_row,
1556049923034:sum1, sum_row1, sum2, sum_row2, sum3, sum_row3, sum4, sum_row4) %>%
1556049923037:rename(condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss,
1556049923040:test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556049934260:raw_data_ <- raw_data2 %>%
1556049934263:select(Patientencode, GRUPPENZUTEILUNG,
1556049934266:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, sum, sum_row,
1556049934269:sum1, sum_row1, sum2, sum_row2, sum3, sum_row3, sum4, sum_row4) %>%
1556049934273:rename(condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss,
1556049934275:test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556049939322:# melt into long format
1556049939327:raw_data3 <- melt(raw_data_,  measure.vars = c("sum", "sum1", "sum2", "sum3", "sum4"))
1556049948893:# melt into long format
1556049948896:raw_data3 <- melt(raw_data_,  measure.vars = c("sum", "sum1", "sum2", "sum3", "sum4")) %>% select(-value)
1556049955615:View(raw_data3)
1556049967808:# melt into long format
1556049967811:raw_data3 <- melt(raw_data_,  measure.vars = c("sum", "sum1", "sum2", "sum3", "sum4")) %>% select(-variable)
1556049992348:View(raw_data_)
1556050039223:raw_data_ <- raw_data2 %>%
1556050039225:select(Patientencode, GRUPPENZUTEILUNG,
1556050039226:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, sum, sum_row,
1556050039228:sum1, sum_row1, sum2, sum_row2, sum3, sum_row3, sum4, sum_row4) %>%
1556050039229:rename(condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss)
1556050041470:# melt into long format => is not working, what am i missing??
1556050041472:raw_data3 <- melt(raw_data_,  measure.vars = c("sum", "sum1", "sum2", "sum3", "sum4")) %>% select(-variable)
1556050044533:View(raw_data3)
1556050071392:# melt into long format => is not working, what am i missing??
1556050071395:raw_data3 <- melt(raw_data_,  measure.vars = c("sum", "sum1", "sum2", "sum3", "sum4"))
1556050133970:# melt into long format => is not working, what am i missing??
1556050133973:raw_data3 <- melt(raw_data_,  measure.vars = c("row_sum", "row_sum1", "row_sum2", "row_sum3", "row_sum4"))
1556050165562:# melt into long format => is not working, what am i missing??
1556050165567:raw_data3 <- melt(raw_data_,  measure.vars = c("sum_row", "sum_row1", "sum_row2", "sum_row3", "sum_row4"))
1556050374947:raw_data_ <- raw_data2 %>%
1556050374950:select(Patientencode, GRUPPENZUTEILUNG,
1556050374953:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, sum, sum_row,
1556050374956:sum1, sum_row1, sum2, sum_row2, sum3, sum_row3, sum4, sum_row4) %>%
1556050374958:rename(condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss,
1556050374961:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556050374969:T1_phq9 = sum, T0_phq15 = sum1, T1_phq15 = sum2, T0_fptm = sum3, T1_gad = sum4) # rename for melting data
1556050424480:# melt into long format => is not working, what am i missing??
1556050424483:raw_data3 <- melt(raw_data_,  measure.vars = c("T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T1_gad")) %>%
1556050424486:select()
1556050432206:View(raw_data3)
1556050442805:# melt into long format => is not working, what am i missing??
1556050442809:raw_data3 <- melt(raw_data_,  measure.vars = c("T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T1_gad"))# %>%
1556050445777:View(raw_data3)
1556050508190:raw_data_ <- raw_data2 %>%
1556050508195:select(Patientencode, GRUPPENZUTEILUNG,
1556050508198:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss,
1556050508202:sum, sum1, sum2, sum3, sum4) %>%
1556050508204:rename(condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss,
1556050508208:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556050508212:T1_phq9 = sum, T0_phq15 = sum1, T1_phq15 = sum2, T0_fptm = sum3, T1_gad = sum4) # rename for melting data
1556050511363:# melt into long format => is not working, what am i missing??
1556050511370:raw_data3 <- melt(raw_data_,  measure.vars = c("T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T1_gad"))# %>%
1556050520604:View(raw_data3)
1556050561692:# slice raw_data and paste back
1556050561694:data2 <- raw_data[, c(1:23,69:78)]
1556050562162:dat <- data[, grep("sum", names(data), value = T)]
1556050562618:raw_data2 <- bind_cols(data2, dat) # cbind
1556050565019:# drop all usless variables and rename
1556050565021:raw_data2 <- raw_data2[-55,] # contains only NA
1556050565460:raw_data_ <- raw_data2 %>%
1556050565467:select(Patientencode, GRUPPENZUTEILUNG,
1556050565471:Anz_Telefonate, T0_Datum, T0_sex, Schulabschluss,
1556050565478:sum, sum1, sum2, sum3, sum4) %>%
1556050565480:rename(condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = Schulabschluss,
1556050565482:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556050565483:T1_phq9 = sum, T0_phq15 = sum1, T1_phq15 = sum2, T0_fptm = sum3, T1_gad = sum4) # rename for melting data
1556050616263:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556050616265:delim = ";",
1556050616268:na = c(" ", "-99"),
1556050616271:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556050616275:drop_na(Patientencode) %>%
1556050616278:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556050616280:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556050616283:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1556050616286:'1' = "noch in der Schule",
1556050616289:'2' = "ohne Schulabschluss",
1556050616291:'3' = "Primar/Sekundarschule",
1556050616294:'4' = "Berufsmaturität",
1556050616297:'5' = "Sekundarschule",
1556050616299:'6' = "Fachmatur",
1556050616302:'7' = "Fachchule",
1556050616304:'8' = "Universität",
1556050616307:'9' = "anderes"))
1556050624208:View(raw_data)
1556050643159:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960"
1556050646020:plan <- drake_plan(
1556050646022:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556050646024:delim = ";",
1556050646026:na = c(" ", "-99"),
1556050646029:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556050646032:drop_na(Patientencode) %>%
1556050646035:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556050646039:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556050646042:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1556050646045:'1' = "noch in der Schule",
1556050646049:'2' = "ohne Schulabschluss",
1556050646052:'3' = "Primar/Sekundarschule",
1556050646054:'4' = "Berufsmaturität",
1556050646057:'5' = "Sekundarschule",
1556050646059:'6' = "Fachmatur",
1556050646062:'7' = "Fachchule",
1556050646065:'8' = "Universität",
1556050646067:'9' = "anderes")),
1556050646070:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960",
1556050646073:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y")
1556050646079:)
1556050649778:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y")
1556050652965:pattern2 <- c("T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T1_gad")
1556050653374:empty <- list() # somehow shuld it be possible with dataframe and notb only with list
1556050653795:for (nam in pattern2) {
1556050653797:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556050653800:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556050653803:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1556050653806:empty[[nam]] <- sub_dat
1556050653809:}
1556050654457:data <- do.call(bind_cols,empty)
1556050656078:# slice raw_data and paste back
1556050656081:data2 <- raw_data[, c(1:23,69:78)]
1556050656545:dat <- data[, grep("sum", names(data), value = T)]
1556050657225:raw_data2 <- bind_cols(data2, dat) # cbind
1556050660368:# drop all usless variables and rename
1556050660370:raw_data2 <- raw_data2[-55,] # contains only NA
1556050661087:raw_data_ <- raw_data2 %>%
1556050661089:select(Patientencode, GRUPPENZUTEILUNG,
1556050661090:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss,
1556050661092:sum, sum1, sum2, sum3, sum4) %>%
1556050661093:rename(condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss,
1556050661095:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556050661096:T1_phq9 = sum, T0_phq15 = sum1, T1_phq15 = sum2, T0_fptm = sum3, T1_gad = sum4) # rename for melting data
1556050665272:# melt into long format => is not working, what am i missing??
1556050665274:raw_data3 <- melt(raw_data_,  measure.vars = c("T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T1_gad"))
1556050667932:View(raw_data3)
1556050714381:# do some descriptive plots
1556050714384:library(ggplot2)
1556050902616:ggplot(raw_data3, aes(x = variable, y = value, fill = Patientencode)) +
1556050902618:geom_point()
1556050921827:ggplot(raw_data3, aes(x = variable, y = value, color = Patientencode)) +
1556050921829:geom_point()
1556051011341:ggplot(raw_data3, aes(x = variable, y = value, color = Patientencode)) +
1556051011344:geom_point() +
1556051011347:geom_line()
1556051029194:ggplot(raw_data3, aes(x = variable, y = value, group = Patientencode)) +
1556051029197:geom_point() +
1556051029202:geom_line()
1556051052711:ggplot(raw_data3, aes(x = variable, y = value, color = Patientencode, group = Patientencode)) +
1556051052714:geom_point() +
1556051052717:geom_line() +
1556051052720:guides()
1556051065963:ggplot(raw_data3, aes(x = variable, y = value, color = Patientencode, group = Patientencode)) +
1556051065965:geom_point() +
1556051065966:geom_line()
1556051103471:ggplot(raw_data3, aes(x = variable, y = value, color = Patientencode, group = Patientencode)) +
1556051103476:geom_point() +
1556051103481:geom_line() +
1556051103483:guides(color = F)
1556051173955:grep("T0_phq15|T1_phq15", raw_data4$test)
1556051179887:grepl("T0_phq15|T1_phq15", raw_data4$test)
1556051192627:grep("T0_phq15", raw_data4$test)
1556051214278:grep("T0_phq15|T1_phq15", raw_data3$variable)
1556051231972:ggplot(raw_data3, aes(x = grep("T0_phq15|T1_phq15", raw_data3$variable), y = value, color = Patientencode, group = Patientencode)) +
1556051231974:geom_point() +
1556051231975:geom_line() +
1556051231976:guides(color = F)
1556051263628:dat <- raw_dat3 %>% filter(grep("T0_phq15|T1_phq15", raw_data3$variable))
1556051273865:dat <- raw_data3 %>% filter(grep("T0_phq15|T1_phq15", raw_data3$variable))
1556051278690:dat <- raw_data3 %>% filter(grep("T0_phq15|T1_phq15", .$variable))
1556051284634:dat <- raw_data3 %>% filter(grepl("T0_phq15|T1_phq15", .$variable))
1556051296718:ggplot(dat, aes(x = variable, y = value, color = Patientencode, group = Patientencode)) +
1556051296720:geom_point() +
1556051296721:geom_line() +
1556051296723:guides(color = F)
1556051759839:ggplot(dat, aes(x = variable, y = value, color = Patientencode, group = Patientencode, shape = Patientencode)) +
1556051759843:geom_point() +
1556051759845:geom_line() +
1556051759848:guides(color = F)
1556051800246:ggplot(dat, aes(x = variable, y = value, color = Patientencode, group = Patientencode)) +
1556051800252:geom_point(shape = 2) +
1556051800258:geom_line() +
1556051800263:guides(color = F)
1556051915137:dat <- filter(raw_data3, unique(.$Patientencode))
1556051925175:dat <- filter(raw_data3, unique(raw_data3$Patientencode))
1556051933418:unique(raw_data3$Patientencode)
1556052027779:dat <- raw_data3 %>%
1556052027780:group_by(Patientencode, sex) %>%
1556052027782:summaries(tot = n())
1556052044114:dat <- raw_data3 %>%
1556052044118:dplyr::group_by(Patientencode, sex) %>%
1556052044121:summaries(tot = n())
1556052051741:dat <- raw_data3 %>%
1556052051743:dplyr::group_by(Patientencode, sex) %>%
1556052051745:dplyr::summaries(tot = n())
1556052061167:dat <- raw_data3 %>%
1556052061169:dplyr::group_by(Patientencode, sex) %>%
1556052061170:dplyr::summarise(tot = n())
1556052064690:View(dat)
1556052321630:dat <- raw_data3 %>%
1556052321636:dplyr::group_by(sex) %>%
1556052321642:dplyr::summarise(tot = n())
1556052325424:View(dat)
1556052335502:dat <- raw_data %>%
1556052335505:dplyr::group_by(sex) %>%
1556052335508:dplyr::summarise(tot = n())
1556052342468:dat <- raw_data2 %>%
1556052342473:dplyr::group_by(sex) %>%
1556052342478:dplyr::summarise(tot = n())
1556130945372:View(dat)
1556130951972:dat <- raw_data2 %>%
1556130951973:dplyr::group_by(sex) %>%
1556130951974:dplyr::summarise(tot = n())
1556130974111:dat <- raw_data2 %>%
1556130974113:dplyr::group_by(Patientencode, sex) %>%
1556130974114:dplyr::summarise(tot = n())
1556130979481:dat <- raw_data3 %>%
1556130979483:dplyr::group_by(Patientencode, sex) %>%
1556130979484:dplyr::summarise(tot = n())
1556130984719:View(dat)
1556131067592:dat <- raw_data3 %>%
1556131067594:filter(unique(raw_data3$Patientencode)) %>%
1556131067595:dplyr::group_by(Patientencode, sex) %>%
1556131067597:dplyr::summarise(tot = n())
1556131093072:dat <- raw_data3 %>%
1556131093073:filter(!duplicated(raw_data3$Patientencode)) %>%
1556131093077:dplyr::group_by(Patientencode, sex) %>%
1556131093080:dplyr::summarise(tot = n())
1556131096102:View(dat)
1556131118087:ggplot(dat, aes(x = sex)) + geom_bar()
1556131135597:ggplot(dat, aes(x = sex, y = ..prop..)) + geom_bar()
1556131151784:ggplot(dat, aes(x = sex)) + geom_bar()
1556131162654:ggplot(dat, aes(x = sex)) + geom_bar() + geom_text()
1556131173435:ggplot(dat, aes(x = sex)) + geom_bar() + geom_text(label = ..count..)
1556131184026:ggplot(dat, aes(x = sex, y = ..count..)) + geom_bar() + geom_text(label = ..count..)
1556131190443:ggplot(dat, aes(x = sex, y = ..count..)) + geom_bar()
1556131298399:dat <- raw_data3 %>%
1556131298402:filter(!duplicated(raw_data3$Patientencode)) %>%
1556131298406:dplyr::group_by(sex) %>%
1556131298409:dplyr::summarise(tot = sum())
1556131303651:dat <- raw_data3 %>%
1556131303653:filter(!duplicated(raw_data3$Patientencode)) %>%
1556131303654:dplyr::group_by(sex) %>%
1556131303656:dplyr::summarise(tot = n())
1556131306362:View(dat)
1556131327448:dat <- raw_data3 %>%
1556131327449:filter(!duplicated(raw_data3$Patientencode)) %>%
1556131327451:dplyr::group_by(sex) %>%
1556131327453:dplyr::summarise(tot = n()) %>%
1556131327454:mutate(pct = tot / sum(tot))
1556131334684:ggplot(dat, aes(x = sex, y = pct)) + geom_bar()
1556131348614:ggplot(dat, aes(x = sex, y = pct)) + geom_bar(label = tot)
1556131354812:ggplot(dat, aes(x = sex, y = pct)) + geom_bar(label = dat$tot)
1556131363642:ggplot(dat, aes(x = sex, y = pct)) + geom_bar())
1556131366572:ggplot(dat, aes(x = sex, y = pct)) + geom_bar()
1556131376683:ggplot(dat, aes(x = sex, y = pct)) + geom_bar(stat = "identity")
1556131406302:ggplot(dat, aes(x = sex, y = pct)) + geom_bar(stat = "identity") +
1556131406303:geom_text(aes(label = tot))
1556131459522:ggplot(dat, aes(x = sex, y = pct)) +
1556131459523:geom_bar(stat = "identity") +
1556131459525:geom_text(aes(label = tot), position = position_dodge())
1556131466749:ggplot(dat, aes(x = sex, y = pct)) +
1556131466750:geom_bar(stat = "identity") +
1556131466752:geom_text(aes(label = tot), position = position_dodge(width = 1))
1556131480585:ggplot(dat, aes(x = sex, y = pct)) +
1556131480588:geom_bar(stat = "identity") +
1556131480591:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25)
1556131519739:ggplot(dat, aes(x = sex, y = pct)) +
1556131519740:geom_bar(stat = "identity") +
1556131519742:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25) +
1556131519743:theme_classic()
1556131526249:ggplot(dat, aes(x = sex, y = pct)) +
1556131526252:geom_bar(stat = "identity") +
1556131526255:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25) +
1556131526258:theme_bw()
1556131560978:ggplot(dat, aes(x = sex, y = pct)) +
1556131560981:geom_bar(stat = "identity") +
1556131560983:scale_y_continuous(labels = scales::percent)
1556131572153:ggplot(dat, aes(x = sex, y = pct)) +
1556131572155:geom_bar(stat = "identity") +
1556131572158:scale_y_continuous(scales::percent)
1556131575379:labels =
1556131578734:ggplot(dat, aes(x = sex, y = pct)) +
1556131578737:geom_bar(stat = "identity") +
1556131578739:scale_y_continuous(labels = scales::percent) +
1556131578742:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25) +
1556131578745:theme_bw()
1556131620802:dat <- raw_data3 %>%
1556131620804:filter(!duplicated(raw_data3$Patientencode)) %>%
1556131620807:dplyr::group_by(condit) %>%
1556131620809:dplyr::summarise(tot = n()) %>%
1556131620813:mutate(pct = tot / sum(tot))
1556131633091:ggplot(dat, aes(x = condit, y = pct)) +
1556131633093:geom_bar(stat = "identity") +
1556131633094:scale_y_continuous(labels = scales::percent) +
1556131633096:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25) +
1556131633097:theme_bw()
1556131781827:library(gmodels)
1556131791883:install.packages("gmodels")
1556131805693:library(gmodels)
1556131852268:CrossTable(!duplicated(raw_data3$sex), !duplicated(raw_data3$educ))
1556131878982:View(raw_data2)
1556132003883:# drop all usless variables and rename
1556132003885:raw_data2 <- raw_data2[-55,] # contains only NA
1556132004235:raw_data_wide <- raw_data2 %>%
1556132004237:select(Patientencode, GRUPPENZUTEILUNG,
1556132004239:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss,
1556132004240:sum, sum1, sum2, sum3, sum4) %>%
1556132004241:rename(condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss,
1556132004243:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556132004244:T1_phq9 = sum, T0_phq15 = sum1, T1_phq15 = sum2, T0_fptm = sum3, T1_gad = sum4) # rename for melting data
1556132009707:# melt into long format => is not working, what am i missing??
1556132009709:raw_data_long <- melt(raw_data_wide,  measure.vars = c("T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T1_gad"))
1556132013883:View(raw_data_wide)
1556132029517:dat <- raw_data_wide %>%
1556132029519:# filter(!duplicated(raw_data3$Patientencode)) %>%
1556132029520:dplyr::group_by(sex) %>%
1556132029521:dplyr::summarise(tot = n()) %>%
1556132029523:mutate(pct = tot / sum(tot))
1556132031180:View(dat)
1556132072290:CrossTable(raw_data_wide$sex,raw_data_wide$educ)
1556132085964:CrossTable(raw_data_wide$educ, raw_data_wide$sex)
1556132558169:View(raw_data)
1556132659713:raw_data$age <- raw_data$T0_Geb - 2018
1556132698711:library(lubridate)
1556132716400:raw_data$age <- 2018- year($T0_Geb)
1556132734420:raw_data$Alter <- 2018- year(raw_data$T0_Geb)
1556132740050:pattern2 <- c("T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T1_gad")
1556132740682:empty <- list() # somehow shuld it be possible with dataframe and notb only with list
1556132741055:for (nam in pattern2) {
1556132741056:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556132741057:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556132741059:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1556132741060:empty[[nam]] <- sub_dat
1556132741062:}
1556132741820:data <- do.call(bind_cols,empty)
1556132756059:names(raw_data[, c(1:23,69:78)])
1556132786771:names(raw_data)
1556132836457:# slice raw_data and paste back
1556132836459:data2 <- raw_data[, c(1:23,69:78, 108)]
1556132849052:# lade daten csv
1556132849056:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556132849060:delim = ";",
1556132849063:na = c(" ", "-99"),
1556132849067:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556132849071:drop_na(Patientencode) %>%
1556132849076:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556132849080:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556132849082:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1556132849089:'1' = "noch in der Schule",
1556132849093:'2' = "ohne Schulabschluss",
1556132849096:'3' = "Primar/Sekundarschule",
1556132849100:'4' = "Berufsmaturität",
1556132849102:'5' = "Sekundarschule",
1556132849106:'6' = "Fachmatur",
1556132849110:'7' = "Fachchule",
1556132849114:'8' = "Universität",
1556132849118:'9' = "anderes"))
1556132850029:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960" # bei einer Altersangabe fehlt Monat => nehme Januar
1556132850340:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y") # Ändere Alter in Datum
1556132850708:raw_data$Alter <- 2018- year(raw_data$T0_Geb)
1556132851098:pattern2 <- c("T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T1_gad")
1556132851492:empty <- list() # somehow shuld it be possible with dataframe and notb only with list
1556132851802:for (nam in pattern2) {
1556132851805:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556132851809:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556132851815:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1556132851818:empty[[nam]] <- sub_dat
1556132851822:}
1556132852297:data <- do.call(bind_cols,empty)
1556132854050:# slice raw_data and paste back
1556132854054:data2 <- raw_data[, c(1:23,69:78, 108)]
1556132854547:dat <- data[, grep("sum", names(data), value = T)]
1556132855088:raw_data2 <- bind_cols(data2, dat) # cbind
1556132863514:#missing map
1556132863516:missmap(raw_data2) # 20 percent are missing especially schulabschluss
1556132898159:View(raw_data)
1556132912620:# drop all usless variables and rename
1556132912623:raw_data2 <- raw_data2[-55,] # contains only NA
1556132919702:data_wide <- raw_data2 %>%
1556132919705:select(Patientencode, GRUPPENZUTEILUNG,
1556132919707:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss,
1556132919709:sum, sum1, sum2, sum3, sum4) %>%
1556132919710:rename(condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss,
1556132919715:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556132919716:T1_phq9 = sum, T0_phq15 = sum1, T1_phq15 = sum2, T0_fptm = sum3, T1_gad = sum4) # rename for melting data
1556132927433:# melt into long format => is not working, what am i missing??
1556132927435:data_long <- melt(raw_data_wide,  measure.vars = c("T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T1_gad"))
1556132964172:View(data_long)
1556133028439:dat <- data_wide %>%
1556133028440:# filter(!duplicated(raw_data3$Patientencode)) %>%
1556133028442:dplyr::group_by(sex) %>%
1556133028443:dplyr::summarise(tot = n()) %>%
1556133028445:mutate(pct = tot / sum(tot))
1556133030540:ggplot(dat, aes(x = sex, y = pct)) +
1556133030543:geom_bar(stat = "identity") +
1556133030546:scale_y_continuous(labels = scales::percent) +
1556133030549:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25) +
1556133030553:theme_bw()
1556133051181:dat <- data_wide %>%
1556133051184:# filter(!duplicated(raw_data3$Patientencode)) %>%
1556133051187:dplyr::group_by(condit) %>%
1556133051190:dplyr::summarise(tot = n()) %>%
1556133051194:mutate(pct = tot / sum(tot))
1556133055794:ggplot(dat, aes(x = condit, y = pct)) +
1556133055796:geom_bar(stat = "identity") +
1556133055799:scale_y_continuous(labels = scales::percent) +
1556133055802:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25) +
1556133055804:theme_bw()
1556133085957:library(psych)
1556133092466:install.packages("psych")
1556133124368:library(psych)
1556133218953:levels(orig_data$REKRUTIERUNG)
1556133276779:# lade daten csv
1556133276782:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556133276784:delim = ";",
1556133276787:na = c(" ", "-99"),
1556133276790:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556133276792:drop_na(Patientencode) %>%
1556133276795:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556133276798:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556133276801:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1556133276803:'1' = "noch in der Schule",
1556133276808:'2' = "ohne Schulabschluss",
1556133276810:'3' = "Primar/Sekundarschule",
1556133276813:'4' = "Berufsmaturität",
1556133276816:'5' = "Sekundarschule",
1556133276819:'6' = "Fachmatur",
1556133276821:'7' = "Fachchule",
1556133276824:'8' = "Universität",
1556133276827:'9' = "anderes"),
1556133276830:REKRUTIERUNG = recode(.$REKRUTIERUNG, '0' = "PR", '1' = "SR"))
1556133280353:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960" # bei einer Altersangabe fehlt Monat => nehme Januar
1556133280823:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y") # Ändere Alter in Datum
1556133281331:raw_data$Alter <- 2018- year(raw_data$T0_Geb)
1556133283011:pattern2 <- c("T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T1_gad")
1556133283324:empty <- list() # somehow shuld it be possible with dataframe and notb only with list
1556133283609:for (nam in pattern2) {
1556133283612:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556133283613:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556133283615:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1556133283616:empty[[nam]] <- sub_dat
1556133283618:}
1556133284072:data <- do.call(bind_cols,empty)
1556133300501:names(raw_data)
1556133311897:# slice raw_data and paste back
1556133311898:data2 <- raw_data[, c(1:23,69:78, 108)]
1556133312440:dat <- data[, grep("sum", names(data), value = T)]
1556133331437:raw_data2 <- bind_cols(data2, dat) # cbind
1556133337873:# drop all usless variables and rename
1556133337875:raw_data2 <- raw_data2[-55,] # contains only NA
1556133394146:data_wide <- raw_data2 %>%
1556133394148:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1556133394151:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss,
1556133394154:sum, sum1, sum2, sum3, sum4) %>%
1556133394156:rename(transfer = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss,
1556133394159:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556133394162:T1_phq9 = sum, T0_phq15 = sum1, T1_phq15 = sum2, T0_fptm = sum3, T1_gad = sum4) # rename for melting data
1556133407265:# melt into long format => is not working, what am i missing??
1556133407268:data_long <- melt(data_wide,  measure.vars = c("T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T1_gad"))
1556133491445:data_wide <- raw_data2 %>%
1556133491448:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1556133491451:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, Alter,
1556133491458:sum, sum1, sum2, sum3, sum4) %>%
1556133491466:rename(transfer = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss, age = Alter,
1556133491472:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556133491475:T1_phq9 = sum, T0_phq15 = sum1, T1_phq15 = sum2, T0_fptm = sum3, T1_gad = sum4) # rename for melting data
1556133492991:# melt into long format => is not working, what am i missing??
1556133492994:data_long <- melt(data_wide,  measure.vars = c("T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T1_gad"))
1556133509831:# alter
1556133509834:describe(data_wide$age)
1556133591546:dat <- data_wide %>%
1556133591548:# filter(!duplicated(raw_data3$Patientencode)) %>%
1556133591550:dplyr::group_by(transfer) %>%
1556133591552:dplyr::summarise(tot = n()) %>%
1556133591555:mutate(pct = tot / sum(tot))
1556133592549:ggplot(dat, aes(x = condit, y = pct)) +
1556133592554:geom_bar(stat = "identity") +
1556133592556:scale_y_continuous(labels = scales::percent) +
1556133592557:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25) +
1556133592560:theme_bw()
1556133680672:# geschlecht, alter, bildung über alles
1556133680673:library(Hmsic)
1556133691275:install.packages("Hmsic")
1556133697615:install.packages("Hmisc")
1556133726497:# geschlecht, alter, bildung über alles
1556133726499:library(Hmisc)
1556133730654:library(psych)
1556133925433:names(raw_data)
1556204446737:View(data_wide)
1556204512977:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556204512978:delim = ";",
1556204512981:na = c(" ", "-99"),
1556204512983:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556204512984:drop_na(Patientencode) %>%
1556204512985:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556204512987:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556204512988:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1556204512989:'1' = "noch in der Schule",
1556204512990:'2' = "ohne Schulabschluss",
1556204512992:'3' = "Primar/Sekundarschule",
1556204512993:'4' = "Berufsmaturität",
1556204512996:'5' = "Sekundarschule",
1556204512998:'6' = "Fachmatur",
1556204512999:'7' = "Fachchule",
1556204513000:'8' = "Universität",
1556204513002:'9' = "anderes"),
1556204513003:REKRUTIERUNG = recode(.$REKRUTIERUNG, '0' = "PR", '1' = "SR"))
1556204513091:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960" # bei einer Altersangabe fehlt Monat => nehme Januar
1556204513094:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y") # Ändere Alter in Datum
1556204513110:raw_data$Alter <- 2018- year(raw_data$T0_Geb)
1556204515933:pattern2 <- c("T0_phq9" ,"T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T0_gad", "T1_gad")
1556204517572:empty <- list() # somehow shuld it be possible with dataframe and notb only with list
1556204519068:for (nam in pattern2) {
1556204519070:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556204519071:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556204519072:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1556204519074:empty[[nam]] <- sub_dat
1556204519075:}
1556204520105:data <- do.call(bind_cols,empty)
1556204525693:# slice raw_data and paste back
1556204525695:data2 <- raw_data[, c(1:23,69:78, 108)]
1556204529881:View(data)
1556204616668:pattern2 <- c("T0_phq9" ,"T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm23", "T0_gad", "T1_gad")
1556204617265:empty <- list() # somehow shuld it be possible with dataframe and notb only with list
1556204617534:for (nam in pattern2) {
1556204617536:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556204617537:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556204617539:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1556204617540:empty[[nam]] <- sub_dat
1556204617542:}
1556204618014:data <- do.call(bind_cols,empty)
1556204621609:# slice raw_data and paste back
1556204621611:data2 <- raw_data[, c(1:23,69:78, 108)]
1556204622203:dat <- data[, grep("sum", names(data), value = T)]
1556204623029:raw_data2 <- bind_cols(data2, dat) # cbind
1556204626223:#missing map
1556204626224:missmap(raw_data2) # 20 percent are missing especially schulabschluss
1556204632932:# drop all usless variables and rename
1556204632934:raw_data2 <- raw_data2[-55,] # contains only NA
1556204648525:names(raw_data2)
1556204657481:View(raw_data2)
1556204752292:data_wide <- raw_data2 %>%
1556204752294:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1556204752296:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, Alter,
1556204752299:sum, sum1, sum2, sum3, sum4) %>%
1556204752302:rename(transfer = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss, age = Alter,
1556204752307:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556204752309:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, T0_fptm23 = sum4, T0_gad = sum5, T1_gad = sum6) # rename for melting data
1556204769906:# drop all usless variables and rename
1556204769910:raw_data2 <- raw_data2[-55,] # contains only NA
1556204772477:data_wide <- raw_data2 %>%
1556204772479:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1556204772483:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, Alter,
1556204772485:sum, sum1, sum2, sum3, sum4) %>%
1556204772488:rename(transfer = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss, age = Alter,
1556204772492:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556204772498:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, T0_fptm23 = sum4, T0_gad = sum5, T1_gad = sum6) # rename for melting data
1556204802649:names(raw_data2)
1556204862597:data_wide <- raw_data2 %>%
1556204862598:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1556204862600:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, Alter,
1556204862601:sum, sum1, sum2, sum3, sum4) %>%
1556204862602:rename(transfer = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss, age = Alter,
1556204862604:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556204862605:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, T0_fptm23 = sum4, T1_gad = sum6) # rename for melting data
1556204872400:View(raw_data2)
1556204897052:data_wide <- raw_data2 %>%
1556204897053:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1556204897055:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, Alter,
1556204897058:sum, sum1, sum2, sum3, sum4, sum5, sum6) %>%
1556204897060:rename(transfer = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss, age = Alter,
1556204897061:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556204897063:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, T0_fptm23 = sum4, T0_gad = sum5, T1_gad = sum6) # rename for melting data
1556204946044:table(data_wide$sex)
1556204947658:psych::describe(data_wide$age)
1556204957241:psych::describe(data_wide$age, na.rm = T)
1556204983713:which(is.na(data_wide$age))
1556205021521:Hmisc::describe(data_wide$educ)
1556205047802:# geschlecht, alter, bildung nach transfer
1556205047803:CrossTable(data_wide$sex, data_wide$transfer)
1556205060205:CrossTable(data_wide$age, data_wide$transfer)
1556205164477:CrossTable(data_wide$educ, data_wide$transfer)
1556205183295:# geschlecht, alter, bildung nach transfer
1556205183296:CrossTable(data_wide$sex, data_wide$transfer, chisq = T) # one missing
1556205185883:CrossTable(data_wide$educ, data_wide$transfer, chisq = T)
1556205262208:ggplot(data_wide, aes(x = educ, fill = sex)) + geom_bar()
1556205273608:ggplot(data_wide, aes(x = educ, fill = sex)) + geom_bar(position = position_dodge())
1556205319017:ggplot(data_wide, aes(x = educ, y = ..count.., fill = sex)) + geom_bar(position = position_dodge())
1556205365091:dat <- data_wide %>%
1556205365093:group_by(educ, sex) %>%
1556205365094:summaries(tot = n())
1556205375255:dat <- data_wide %>%
1556205375257:group_by(educ, sex) %>%
1556205375258:dplyr::summaries(tot = n())
1556205392526:dat <- data_wide %>%
1556205392529:group_by(educ, sex) %>%
1556205392530:dplyr::summarise(tot = n())
1556205398135:View(dat)
1556205422750:ggplot(dat, aes(x = educ, y = ..count.., fill = transfer)) + geom_bar(position = position_dodge())
1556205432674:ggplot(data_wide, aes(x = educ, y = ..count.., fill = transfer)) + geom_bar(position = position_dodge())
1556205466800:?dyplr
1556205471193:?dplyr
1556205756481:dat <- data_wide %>%
1556205756483:group_by(educ, transfer) %>%
1556205756484:dplyr::summarise(tot = n()) %>%
1556205756485:complete(transfer)
1556205796320:dat <- data_wide %>%
1556205796321:group_by(educ, transfer) %>%
1556205796322:dplyr::summarise(tot = n()) %>%
1556205796324:complete(transfer, fill = 0)
1556205809771:dat <- data_wide %>%
1556205809773:group_by(educ, transfer) %>%
1556205809775:dplyr::summarise(tot = n()) %>%
1556205809776:complete(transfer, educ, fill = 0)
1556205814578:dat <- data_wide %>%
1556205814579:group_by(educ, transfer) %>%
1556205814581:dplyr::summarise(tot = n()) %>%
1556205814582:complete(fill = 0)
1556205854083:dat <- data_wide %>%
1556205854088:group_by(educ, transfer) %>%
1556205854090:dplyr::summarise(tot = n()) %>%
1556205854092:mutate(pct = tot / sum(tot)) %>%
1556205854094:complete() # somehow not working
1556205864309:dat <- data_wide %>%
1556205864310:group_by(educ, transfer) %>%
1556205864312:dplyr::summarise(tot = n()) %>%
1556205864313:mutate(pct = tot / sum(tot))
1556205896927:dat <- data_wide %>%
1556205896929:group_by(educ, transfer) %>%
1556205896930:dplyr::summarise(tot = n()) %>%
1556205896932:mutate(pct = tot / sum(tot),
1556205896933:educ = ifelse(is.na(.$educ), "unbekannt", educ)) %>%
1556205896934:complete() # somehow not working
1556205901656:dat <- data_wide %>%
1556205901658:group_by(educ, transfer) %>%
1556205901659:dplyr::summarise(tot = n()) %>%
1556205901661:mutate(pct = tot / sum(tot),
1556205901667:educ = ifelse(is.na(.$educ), "unbekannt", educ))
1556205919897:dat <- data_wide %>%
1556205919899:group_by(educ, transfer) %>%
1556205919900:dplyr::summarise(tot = n()) %>%
1556205919901:mutate(pct = tot / sum(tot)) %>%
1556205919903:ungroup() %>%
1556205919904:mutate(educ = ifelse(is.na(.$educ), "unbekannt", educ)) %>%
1556205919905:complete() # somehow not working
1556205941770:ggplot(dat, aes(x = educ, y = tot, fill = transfer)) + geom_bar(position = position_dodge())
1556205974358:ggplot(dat, aes(x = educ, y = tot, fill = transfer)) + geom_bar(stat = "identity", position = position_dodge())
1556289281015:dat <- data_wide %>%
1556289281017:group_by(educ, transfer) %>%
1556289281020:dplyr::summarise(tot = n()) %>%
1556289281022:mutate(pct = tot / sum(tot)) %>%
1556289281024:ungroup() %>%
1556289281026:mutate(educ = ifelse(is.na(.$educ), "Unbekannt", educ)) %>%
1556289281028:complete(educ, transfer, fill = list(tot = 0)) # somehow not working
1556289303487:dat <- data_wide %>%
1556289303488:group_by(educ, transfer) %>%
1556289303489:dplyr::summarise(tot = n()) %>%
1556289303491:mutate(pct = tot / sum(tot)) %>%
1556289303495:ungroup() %>%
1556289303496:mutate(educ = ifelse(is.na(.$educ), "Unbekannt", educ)) %>%
1556289303497:complete(educ, transfer, fill = list(tot = 0, pct = 0)) # somehow not working
1556289312029:ggplot(dat, aes(x = educ, y = tot, fill = transfer)) + geom_bar(stat = "identity", position = position_dodge())
1556289335194:ggplot(dat, aes(x = educ, y = tot, fill = transfer)) + geom_bar(stat = "identity", position = position_dodge()) + theme_bw()
1556289435241:source("mytheme.R")
1556289441465:ggplot(dat, aes(x = educ, y = tot, fill = transfer)) +
1556289441466:geom_bar(stat = "identity", position = position_dodge()) +
1556289441467:mytheme
1556289449884:ggplot(dat, aes(x = educ, y = tot, fill = transfer)) +
1556289449885:geom_bar(stat = "identity", position = position_dodge()) +
1556289449886:mytheme
1556289460179:ggplot(dat, aes(x = educ, y = tot, fill = transfer)) +
1556289460180:geom_bar(stat = "identity", position = position_dodge())
1556289485481:ggplot(dat, aes(x = educ, y = tot, fill = transfer))
1556289491595:ggplot(dat, aes(x = educ, y = tot, fill = transfer)) +
1556289491596:geom_bar(stat = "identity", position = position_dodge())
1556289533270:ggplot(dat, aes(x = educ, y = tot, fill = transfer)) +
1556289533271:geom_bar(stat = "identity", position = position_dodge()) +
1556289533273:theme_bw()
1556289568600:data_wide <- raw_data2 %>%
1556289568602:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1556289568603:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, Alter,
1556289568604:sum, sum1, sum2, sum3, sum4, sum5, sum6) %>%
1556289568606:rename(trans = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss, age = Alter,
1556289568607:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556289568608:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, T0_fptm23 = sum4, T0_gad = sum5, T1_gad = sum6) # rename for melting data
1556289575229:dat <- data_wide %>%
1556289575231:# filter(!duplicated(raw_data3$Patientencode)) %>%
1556289575232:dplyr::group_by(sex) %>%
1556289575233:dplyr::summarise(tot = n()) %>%
1556289575235:mutate(pct = tot / sum(tot))
1556289576516:ggplot(dat, aes(x = sex, y = pct)) +
1556289576518:geom_bar(stat = "identity") +
1556289576520:scale_y_continuous(labels = scales::percent) +
1556289576521:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25) +
1556289576522:theme_bw()
1556289583333:ggplot(dat, aes(x = sex, y = pct)) +
1556289583334:geom_bar(stat = "identity") +
1556289583336:scale_y_continuous(labels = scales::percent) +
1556289583337:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25) +
1556289583339:mytheme
1556289590669:dat <- data_wide %>%
1556289590670:# filter(!duplicated(raw_data3$Patientencode)) %>%
1556289590672:dplyr::group_by(transfer) %>%
1556289590674:dplyr::summarise(tot = n()) %>%
1556289590676:mutate(pct = tot / sum(tot))
1556289591460:ggplot(dat, aes(x = transfer, y = pct)) +
1556289591462:geom_bar(stat = "identity") +
1556289591463:scale_y_continuous(labels = scales::percent) +
1556289591465:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25) +
1556289591466:theme_bw()
1556289605016:dat <- data_wide %>%
1556289605019:# filter(!duplicated(raw_data3$Patientencode)) %>%
1556289605021:dplyr::group_by(trans) %>%
1556289605024:dplyr::summarise(tot = n()) %>%
1556289605029:mutate(pct = tot / sum(tot))
1556289605612:ggplot(dat, aes(x = trans, y = pct)) +
1556289605615:geom_bar(stat = "identity") +
1556289605617:scale_y_continuous(labels = scales::percent) +
1556289605620:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25) +
1556289605623:mytheme
1556289619925:ggplot(dat, aes(x = trans, y = pct)) +
1556289619928:geom_bar(stat = "identity") +
1556289619930:scale_y_continuous(labels = scales::percent) +
1556289619931:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25, size = 16) +
1556289619932:mytheme
1556289625685:ggplot(dat, aes(x = trans, y = pct)) +
1556289625689:geom_bar(stat = "identity") +
1556289625691:scale_y_continuous(labels = scales::percent) +
1556289625694:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25, size = 12) +
1556289625697:mytheme
1556289632764:# geschlecht und bildung
1556289632767:CrossTable(raw_data_wide$educ, raw_data_wide$sex)
1556289634428:# alter
1556289634429:describe(data_wide$age)
1556289635794:dat <- raw_data3 %>% filter(grepl("T0_phq15|T1_phq15", .$variable))
1556289636248:ggplot(dat, aes(x = variable, y = value, color = Patientencode, group = Patientencode)) +
1556289636249:geom_point() +
1556289636251:geom_line() +
1556289636252:guides(color = F)
1556289910189:?cut
1556290075392:raw_data$age_group <- cut(raw_data$Alter,
1556290075394:breaks = c(-Inf, 34, 49, 64, Inf), # menuCH Kategorien
1556290075395:labels = c("18 bis 34-jährig", "35 bis 49-jährig", "50 bis 64-jährig", "64-jährig und älter"))
1556290082032:View(raw_data)
1556290127450:raw_data$age_group <- cut(raw_data$Alter,
1556290127451:breaks = c(-Inf, 34, 49, 64, Inf), # menuCH Kategorien
1556290127453:labels = c("18 bis 34-jährig", "35 bis 49-jährig", "50 bis 64-jährig", "65-jährig und älter"))
1556290137880:data2 <- raw_data[, c(1:23,69:78, 108)]
1556290137882:dat <- data[, grep("sum", names(data), value = T)]
1556290137884:raw_data2 <- bind_cols(data2, dat) # cbind
1556290141041:# drop all usless variables and rename
1556290141043:raw_data2 <- raw_data2[-55,] # contains only NA
1556290157762:raw_data$Altersgruppen <- cut(raw_data$Alter,
1556290157763:breaks = c(-Inf, 34, 49, 64, Inf), # menuCH Kategorien
1556290157764:labels = c("18 bis 34-jährig", "35 bis 49-jährig", "50 bis 64-jährig", "65-jährig und älter"))
1556290180611:data_wide <- raw_data2 %>%
1556290180612:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1556290180614:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, Alter, Altersgruppen,
1556290180615:sum, sum1, sum2, sum3, sum4, sum5, sum6) %>%
1556290180616:rename(trans = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss, age = Alter, age_group = Altersgruppen,
1556290180618:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556290180619:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, T0_fptm23 = sum4, T0_gad = sum5, T1_gad = sum6) # rename for melting data
1556290189885:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960" # bei einer Altersangabe fehlt Monat => nehme Januar
1556290189893:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y") # Ändere Alter in Datum
1556290189895:raw_data$Alter <- 2018- year(raw_data$T0_Geb)
1556290189896:raw_data$Altersgruppen <- cut(raw_data$Alter,
1556290189898:breaks = c(-Inf, 34, 49, 64, Inf), # menuCH Kategorien
1556290189899:labels = c("18 bis 34-jährig", "35 bis 49-jährig", "50 bis 64-jährig", "65-jährig und älter"))
1556290194397:data2 <- raw_data[, c(1:23,69:78, 108)]
1556290194410:dat <- data[, grep("sum", names(data), value = T)]
1556290194412:raw_data2 <- bind_cols(data2, dat) # cbind
1556290194415:#missing map
1556290194417:missmap(raw_data2) # 20 percent are missing especially schulabschluss
1556290194466:# drop all usless variables and rename
1556290194467:raw_data2 <- raw_data2[-55,] # contains only NA
1556290194469:data_wide <- raw_data2 %>%
1556290194470:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1556290194474:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, Alter, Altersgruppen,
1556290194475:sum, sum1, sum2, sum3, sum4, sum5, sum6) %>%
1556290194477:rename(trans = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss, age = Alter, age_group = Altersgruppen,
1556290194478:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556290194479:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, T0_fptm23 = sum4, T0_gad = sum5, T1_gad = sum6) # rename for melting data
1556290211902:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556290211904:delim = ";",
1556290211905:na = c(" ", "-99"),
1556290211906:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556290211908:drop_na(Patientencode) %>%
1556290211909:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556290211910:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556290211912:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1556290211913:'1' = "noch in der Schule",
1556290211914:'2' = "ohne Schulabschluss",
1556290211916:'3' = "Primar/Sekundarschule",
1556290211917:'4' = "Berufsmaturität",
1556290211919:'5' = "Sekundarschule",
1556290211920:'6' = "Fachmatur",
1556290211921:'7' = "Fachchule",
1556290211923:'8' = "Universität",
1556290211924:'9' = "anderes"),
1556290211926:REKRUTIERUNG = recode(.$REKRUTIERUNG, '0' = "PR", '1' = "SR"))
1556290211975:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960" # bei einer Altersangabe fehlt Monat => nehme Januar
1556290211977:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y") # Ändere Alter in Datum
1556290211993:raw_data$Alter <- 2018- year(raw_data$T0_Geb)
1556290211995:raw_data$Altersgruppen <- cut(raw_data$Alter,
1556290211996:breaks = c(-Inf, 34, 49, 64, Inf), # menuCH Kategorien
1556290211997:labels = c("18 bis 34-jährig", "35 bis 49-jährig", "50 bis 64-jährig", "65-jährig und älter"))
1556290212000:pattern2 <- c("T0_phq9" ,"T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm23", "T0_gad", "T1_gad")
1556290212002:empty <- list() # somehow shuld it be possible with dataframe and notb only with list
1556290212004:for (nam in pattern2) {
1556290212005:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556290212007:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556290212008:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1556290212009:empty[[nam]] <- sub_dat
1556290212011:}
1556290212027:data <- do.call(bind_cols,empty)
1556290212030:# slice raw_data and paste back
1556290212032:data2 <- raw_data[, c(1:23,69:78, 108)]
1556290212033:dat <- data[, grep("sum", names(data), value = T)]
1556290212035:raw_data2 <- bind_cols(data2, dat) # cbind
1556290212038:#missing map
1556290212039:missmap(raw_data2) # 20 percent are missing especially schulabschluss
1556290212174:# drop all usless variables and rename
1556290212175:raw_data2 <- raw_data2[-55,] # contains only NA
1556290212177:data_wide <- raw_data2 %>%
1556290212178:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1556290212179:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, Alter, Altersgruppen,
1556290212181:sum, sum1, sum2, sum3, sum4, sum5, sum6) %>%
1556290212182:rename(trans = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss, age = Alter, age_group = Altersgruppen,
1556290212183:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556290212185:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, T0_fptm23 = sum4, T0_gad = sum5, T1_gad = sum6) # rename for melting data
1556290228890:# slice raw_data and paste back
1556290228891:data2 <- raw_data[, c(1:23,69:78, 108:109)]
1556290229482:dat <- data[, grep("sum", names(data), value = T)]
1556290229703:raw_data2 <- bind_cols(data2, dat) # cbind
1556290231474:# drop all usless variables and rename
1556290231476:raw_data2 <- raw_data2[-55,] # contains only NA
1556290231723:data_wide <- raw_data2 %>%
1556290231724:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1556290231726:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, Alter, Altersgruppen,
1556290231727:sum, sum1, sum2, sum3, sum4, sum5, sum6) %>%
1556290231729:rename(trans = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss, age = Alter, age_group = Altersgruppen,
1556290231730:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556290231731:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, T0_fptm23 = sum4, T0_gad = sum5, T1_gad = sum6) # rename for melting data
1556290269022:dat <- data_wide %>%
1556290269024:group_by(educ, transfer) %>%
1556290269025:dplyr::summarise(tot = n()) %>%
1556290269026:mutate(pct = tot / sum(tot)) %>%
1556290269027:ungroup() %>%
1556290269029:mutate(educ = ifelse(is.na(.$educ), "Unbekannt", educ)) %>%
1556290269030:complete(educ, transfer, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1556290269458:ggplot(dat, aes(x = educ, y = tot, fill = transfer)) +
1556290269459:geom_bar(stat = "identity", position = position_dodge()) +
1556290269461:mytheme
1556290278142:dat <- data_wide %>%
1556290278143:group_by(educ, trans) %>%
1556290278144:dplyr::summarise(tot = n()) %>%
1556290278146:mutate(pct = tot / sum(tot)) %>%
1556290278147:ungroup() %>%
1556290278148:mutate(educ = ifelse(is.na(.$educ), "Unbekannt", educ)) %>%
1556290278149:complete(educ, transfer, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1556290286883:dat <- data_wide %>%
1556290286884:group_by(educ, trans) %>%
1556290286886:dplyr::summarise(tot = n()) %>%
1556290286887:mutate(pct = tot / sum(tot)) %>%
1556290286888:ungroup() %>%
1556290286889:mutate(educ = ifelse(is.na(.$educ), "Unbekannt", educ)) %>%
1556290286891:complete(educ, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1556290287610:ggplot(dat, aes(x = educ, y = tot, fill = trans)) +
1556290287611:geom_bar(stat = "identity", position = position_dodge()) +
1556290287613:mytheme
1556290302210:ggplot(dat, aes(x = dat$educ, y = dat$tot, fill = dat$trans)) +
1556290302212:geom_bar(stat = "identity", position = position_dodge()) +
1556290302213:mytheme
1556290308111:str(dat)
1556290340562:CrossTable(data_wide$age_group, data_wide$transfer) # one missing => do some groups (makes otherwise no sense)
1556290364935:CrossTable(data_wide$age_group, data_wide$trans) # one missing => do some groups (makes otherwise no sense)
1556290385108:dat <- data_wide %>%
1556290385109:group_by(age_group, trans) %>%
1556290385111:dplyr::summarise(tot = n()) %>%
1556290385112:mutate(pct = tot / sum(tot)) %>%
1556290385113:ungroup() %>%
1556290385114:mutate(educ = ifelse(is.na(.$educ), "Unbekannt", educ)) %>%
1556290385116:complete(educ, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1556290394172:dat <- data_wide %>%
1556290394173:group_by(age_group, trans) %>%
1556290394174:dplyr::summarise(tot = n()) %>%
1556290394175:mutate(pct = tot / sum(tot)) %>%
1556290394177:ungroup() %>%
1556290394178:mutate(educ = ifelse(is.na(.$educ), "Unbekannt", educ)) %>%
1556290394179:complete(educ, age_group, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1556290412483:dat <- data_wide %>%
1556290412485:group_by(age_group, trans) %>%
1556290412486:dplyr::summarise(tot = n()) %>%
1556290412487:mutate(pct = tot / sum(tot)) %>%
1556290412488:ungroup() %>%
1556290412490:mutate(educ = ifelse(is.na(.$educ), "Unbekannt", educ)) %>%
1556290412491:complete(age_group, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1556290418388:dat <- data_wide %>%
1556290418389:group_by(age_group, trans) %>%
1556290418390:dplyr::summarise(tot = n()) %>%
1556290418392:mutate(pct = tot / sum(tot)) %>%
1556290418393:ungroup()
1556290423772:View(dat)
1556290450071:dat <- data_wide %>%
1556290450072:group_by(age_group, trans) %>%
1556290450073:dplyr::summarise(tot = n()) %>%
1556290450075:mutate(pct = tot / sum(tot)) %>%
1556290450076:ungroup() %>%
1556290450077:mutate(age_group = ifelse(is.na(.$age_group), "Unbekannt", age_group)) %>%
1556290450078:complete(age_group, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1556290473701:dat <- data_wide %>%
1556290473703:group_by(age_group, trans) %>%
1556290473704:dplyr::summarise(tot = n()) %>%
1556290473705:mutate(pct = tot / sum(tot)) %>%
1556290473707:ungroup() %>%
1556290473709:mutate(age_group = ifelse(is.na(.$age_group), "Unbekannt", age_group))
1556290481595:dat <- data_wide %>%
1556290481597:group_by(age_group, trans) %>%
1556290481598:dplyr::summarise(tot = n()) %>%
1556290481600:mutate(pct = tot / sum(tot)) %>%
1556290481601:ungroup() %>%
1556290487267:dat <- data_wide %>%
1556290487269:group_by(age_group, trans) %>%
1556290487270:dplyr::summarise(tot = n()) %>%
1556290487271:mutate(pct = tot / sum(tot)) %>%
1556290487273:ungroup()
1556290514333:dat <- data_wide %>%
1556290514335:group_by(age_group, trans) %>%
1556290514337:dplyr::summarise(tot = n()) %>%
1556290514338:mutate(pct = tot / sum(tot)) %>%
1556290514340:ungroup() %>%
1556290514342:mutate(age_group1 = ifelse(is.na(.$age_group), "Unbekannt", age_group))
1556290542808:str(data_wide)
1556290598721:raw_data$Altersgruppen <- parse_factor()
1556290611321:raw_data$Altersgruppen <- parse_factor(raw_data$Altersgruppen)
1556290619617:raw_data$Altersgruppen <- parse_factor(raw_data$Altersgruppen, levels = ())
1556290624938:raw_data$Altersgruppen <- parse_factor(raw_data$Altersgruppen, levels = (""))
1556290633399:raw_data$Altersgruppen <- cut(raw_data$Alter,
1556290633401:breaks = c(-Inf, 34, 49, 64, Inf), # menuCH Kategorien
1556290633402:labels = c("18 bis 34-jährig", "35 bis 49-jährig", "50 bis 64-jährig", "65-jährig und älter"))
1556290633404:raw_data$Altersgruppen <- parse_factor(raw_data$Altersgruppen, levels = (""))
1556290643113:str(raw_data$Altersgruppen)
1556290658050:raw_data$Altersgruppen <- parse_character(raw_data$Altersgruppen)
1556290690378:raw_data$Altersgruppen <- as.character(raw_data$Altersgruppen)
1556290697604:str(raw_data$Altersgruppen)
1556290740771:raw_data$Altersgruppen <- parse_character(raw_data$Altersgruppen, na = "Unbekannt") # parse to character
1556290747231:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960" # bei einer Altersangabe fehlt Monat => nehme Januar
1556290747239:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y") # Ändere Alter in Datum
1556290747241:raw_data$Alter <- 2018- year(raw_data$T0_Geb)
1556290747242:raw_data$Altersgruppen <- cut(raw_data$Alter,
1556290747244:breaks = c(-Inf, 34, 49, 64, Inf), # menuCH Kategorien
1556290747245:labels = c("18 bis 34-jährig", "35 bis 49-jährig", "50 bis 64-jährig", "65-jährig und älter"))
1556290747246:raw_data$Altersgruppen <- parse_character(raw_data$Altersgruppen, na = "Unbekannt") # parse to character
1556290827043:raw_data$Altersgruppen <- as.character(raw_data$Altersgruppen, na = "Unbekannt") # parse to character
1556290880288:data2 <- raw_data[, c(1:23,69:78, 108:109)]
1556290880292:dat <- data[, grep("sum", names(data), value = T)]
1556290880294:raw_data2 <- bind_cols(data2, dat) # cbind
1556290880297:#missing map
1556290880299:missmap(raw_data2) # 20 percent are missing especially schulabschluss
1556290880319:# drop all usless variables and rename
1556290880320:raw_data2 <- raw_data2[-55,] # contains only NA
1556290880322:data_wide <- raw_data2 %>%
1556290880323:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1556290880325:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, Alter, Altersgruppen,
1556290880326:sum, sum1, sum2, sum3, sum4, sum5, sum6) %>%
1556290880328:rename(trans = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss, age = Alter, age_group = Altersgruppen,
1556290880329:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556290880331:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, T0_fptm23 = sum4, T0_gad = sum5, T1_gad = sum6) # rename for melting data
1556290880347:# melt into long format => is not working, what am i missing??
1556290880348:# oder question is this necessary??
1556290880350:# data_long <- melt(data_wide,  measure.vars = c("T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T1_gad"))
1556290886383:dat <- data_wide %>%
1556290886385:group_by(age_group, trans) %>%
1556290886387:dplyr::summarise(tot = n()) %>%
1556290886389:mutate(pct = tot / sum(tot)) %>%
1556290886390:ungroup() %>%
1556290886392:mutate(age_group1 = ifelse(is.na(.$age_group), "Unbekannt", age_group)) %>%
1556290886394:complete(age_group, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1556290910073:# lade Packages
1556290910076:library(tidyverse)
1556290910078:library(foreign)
1556290910079:library(Amelia)
1556290910081:library(reshape2)
1556290910082:library(gmodels)
1556290910083:library(lubridate)
1556290910085:library(psych)
1556290910086:library(Hmisc)
1556290910088:library(psych)
1556290910092:# lade original spss
1556290910094:orig_data <- read.spss("TIDe_Gesamt_20190404_kopie.sav",
1556290910095:to.data.frame = T,
1556290910096:add.undeclared.levels = "append")
1556290910119:# lade daten csv
1556290910121:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556290910122:delim = ";",
1556290910123:na = c(" ", "-99"),
1556290910125:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556290910126:drop_na(Patientencode) %>%
1556290910128:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556290910129:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556290910130:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1556290910132:'1' = "noch in der Schule",
1556290910133:'2' = "ohne Schulabschluss",
1556290910135:'3' = "Primar/Sekundarschule",
1556290910136:'4' = "Berufsmaturität",
1556290910137:'5' = "Sekundarschule",
1556290910139:'6' = "Fachmatur",
1556290910140:'7' = "Fachchule",
1556290910141:'8' = "Universität",
1556290910143:'9' = "anderes"),
1556290910144:REKRUTIERUNG = recode(.$REKRUTIERUNG, '0' = "PR", '1' = "SR"))
1556290910230:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960" # bei einer Altersangabe fehlt Monat => nehme Januar
1556290910232:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y") # Ändere Alter in Datum
1556290910234:raw_data$Alter <- 2018- year(raw_data$T0_Geb)
1556290910235:raw_data$Altersgruppen <- cut(raw_data$Alter,
1556290910236:breaks = c(-Inf, 34, 49, 64, Inf), # menuCH Kategorien
1556290910238:labels = c("18 bis 34-jährig", "35 bis 49-jährig", "50 bis 64-jährig", "65-jährig und älter"))
1556290910239:raw_data$Altersgruppen <- as.character(raw_data$Altersgruppen) # parse to character (parse_character wont work)
1556290910243:pattern2 <- c("T0_phq9" ,"T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm23", "T0_gad", "T1_gad")
1556290910245:empty <- list() # somehow shuld it be possible with dataframe and notb only with list
1556290910246:for (nam in pattern2) {
1556290910247:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556290910248:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556290910249:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1556290910250:empty[[nam]] <- sub_dat
1556290910252:}
1556290910267:data <- do.call(bind_cols,empty)
1556290910270:# slice raw_data and paste back
1556290910271:data2 <- raw_data[, c(1:23,69:78, 108:109)]
1556290910273:dat <- data[, grep("sum", names(data), value = T)]
1556290910275:raw_data2 <- bind_cols(data2, dat) # cbind
1556290910278:#missing map
1556290910279:missmap(raw_data2) # 20 percent are missing especially schulabschluss
1556290910320:# drop all usless variables and rename
1556290910321:raw_data2 <- raw_data2[-55,] # contains only NA
1556290910322:data_wide <- raw_data2 %>%
1556290910324:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1556290910325:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, Alter, Altersgruppen,
1556290910327:sum, sum1, sum2, sum3, sum4, sum5, sum6) %>%
1556290910328:rename(trans = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss, age = Alter, age_group = Altersgruppen,
1556290910330:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556290910331:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, T0_fptm23 = sum4, T0_gad = sum5, T1_gad = sum6) # rename for melting data
1556290910340:# melt into long format => is not working, what am i missing??
1556290910341:# oder question is this necessary??
1556290910342:# data_long <- melt(data_wide,  measure.vars = c("T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T1_gad"))
1556290914704:dat <- data_wide %>%
1556290914706:group_by(age_group, trans) %>%
1556290914708:dplyr::summarise(tot = n()) %>%
1556290914711:mutate(pct = tot / sum(tot)) %>%
1556290914712:ungroup() %>%
1556290914713:mutate(age_group1 = ifelse(is.na(.$age_group), "Unbekannt", age_group)) %>%
1556290914715:complete(age_group, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1556290928418:dat <- data_wide %>%
1556290928419:group_by(age_group, trans) %>%
1556290928421:dplyr::summarise(tot = n()) %>%
1556290928422:mutate(pct = tot / sum(tot)) %>%
1556290928423:ungroup() %>%
1556290928424:mutate(age_group = ifelse(is.na(.$age_group), "Unbekannt", age_group)) %>%
1556290928426:complete(age_group, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1556290959311:ggplot(dat, aes(x = age_group, y = tot, fill = trans)) +
1556290959313:geom_bar(stat = "identity", position = position_dodge()) +
1556290959314:mytheme
1556291204497:# attention psych and ggplot do not well togheter
1556291204498:detach("package:psych", unload=TRUE)
1556291209091:ggplot(dat, aes(x = age_group, y = tot, fill = trans)) +
1556291209092:geom_bar(stat = "identity", position = position_dodge()) +
1556291209094:mytheme
1556291658316:dat <- data_wide %>%
1556291658318:group_by(educ, condit) %>%
1556291658319:dplyr::summarise(tot = n()) %>%
1556291658321:mutate(pct = tot / sum(tot)) %>%
1556291658322:ungroup() %>%
1556291658324:mutate(educ = ifelse(is.na(.$educ), "Unbekannt", educ)) %>%
1556291658325:complete(educ, condit, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1556291658336:ggplot(dat, aes(x = dat$educ, y = dat$tot, fill = dat$condit)) +
1556291658338:geom_bar(stat = "identity", position = position_dodge()) +
1556291658339:mytheme # is not working => attention detach psych package
1556291682349:dat <- data_wide %>%
1556291682351:group_by(age_group, condit) %>%
1556291682352:dplyr::summarise(tot = n()) %>%
1556291682354:mutate(pct = tot / sum(tot)) %>%
1556291682355:ungroup() %>%
1556291682357:mutate(age_group = ifelse(is.na(.$age_group), "Unbekannt", age_group)) %>%
1556291682359:complete(age_group, condit, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1556291682369:ggplot(dat, aes(x = age_group, y = tot, fill = condit)) +
1556291682370:geom_bar(stat = "identity", position = position_dodge()) +
1556291682372:mytheme
1556291700900:CrossTable(data_wide$sex, data_wide$condit, chisq = T) # one missing
1556291700912:CrossTable(data_wide$age_group, data_wide$condit) # one missing => do some groups (makes otherwise no sense)
1556291700924:CrossTable(data_wide$educ, data_wide$condit, chisq = T)
1556291721045:# geschlecht, alter, bildung nach condit
1556291721046:CrossTable(data_wide$sex, data_wide$condit, chisq = T) # one missing
1556291732874:CrossTable(data_wide$age_group, data_wide$condit) # one missing => do some groups (makes otherwise no sense)
1556291751427:CrossTable(data_wide$age_group, data_wide$condit, chisq = T, fisher = T) # one missing => do some groups (makes otherwise no sense)
1556291841213:dat <- data_wide %>%
1556291841215:# filter(!duplicated(raw_data3$Patientencode)) %>%
1556291841216:dplyr::group_by(trans) %>%
1556291841218:dplyr::summarise(tot = n()) %>%
1556291841219:mutate(pct = tot / sum(tot))
1556291841226:ggplot(dat, aes(x = trans, y = pct)) +
1556291841229:geom_bar(stat = "identity") +
1556291841230:scale_y_continuous(labels = scales::percent) +
1556291841232:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25, size = 9) +
1556291841234:mytheme
1556291876789:# geschlecht, alter, bildung nach trans----------
1556291876790:CrossTable(data_wide$sex, data_wide$trans, fisher = T) # one missing
1556291906909:# geschlecht, alter, bildung nach trans----------
1556291906911:CrossTable(data_wide$sex, data_wide$trans, fisher = T, chisq = T) # one missing
1556291920075:CrossTable(data_wide$age_group, data_wide$trans, fisher = T) # n.s.
1556291922554:CrossTable(data_wide$educ, data_wide$trans, fisher = T) # signifikante unterschiede
1556291928861:# geschlecht, alter, bildung nach trans----------
1556291928863:CrossTable(data_wide$sex, data_wide$trans, fisher = T, chisq = T) # n.s.
1556292049683:data_wide %>%
1556292049685:group_by(sex, trans) %>%
1556292049686:dplyr::summarise(tot = n()) %>%
1556292049687:mutate(pct = tot / sum(tot)) %>%
1556292049689:ungroup()
1556292063334:dat <- data_wide %>%
1556292063335:group_by(sex, trans) %>%
1556292063337:dplyr::summarise(tot = n()) %>%
1556292063338:mutate(pct = tot / sum(tot)) %>%
1556292063341:ungroup() %>%
1556292063344:mutate(sex = ifelse(is.na(.$sex), "Unbekannt", sex)) %>%
1556292063345:complete(sex, trans, fill = list(tot = 0, pct = 0))
1556292068241:ggplot(dat, aes(x = sex, y = tot, fill = trans)) +
1556292068242:geom_bar(stat = "identity", position = position_dodge()) +
1556292068243:mytheme
1556292117580:fisher.test(data_wide$sex, data_wide$trans)
1556292154972:chisq.test(data_wide$sex, data_wide$trans)
1556292233013:fisher.test(data_wide$sex, data_wide$trans) # n.s
1556292255702:fisher.test(data_wide$trans, data_wide$sex) # n.s
1556292283317:table(data_wide$sex, data_wide$trans)
1556292367778:# geschlecht und bedingung--------------
1556292367779:CrossTable(data_wide$sex, data_wide$condit, fisher = T) # one missing, n.s.
1556292382752:# geschlecht und bedingung--------------
1556292382754:CrossTable(data_wide$sex, data_wide$condit, fisher = T, chisq = T) # one missing, n.s.
1556292393226:# Altersgruppen und Bedingung--------
1556292393228:CrossTable(data_wide$age_group, data_wide$condit, fisher = T, fisher = T) # n.s
1556292403064:# Altersgruppen und Bedingung--------
1556292403066:CrossTable(data_wide$age_group, data_wide$condit, fisher = T) # n.s
1556292406602:# Bildung und Bedingung
1556292406603:CrossTable(data_wide$educ, data_wide$condit, fisher = T) # n.s.
1556292435040:# h1a: unterschied trans zu phq_9 t0--------
1556292435042:t.test(data_wide$T0_phq9 ~ data_wide$trans)
1556292462790:data_wide$T0_phq9
1556292467857:data_wide$trans
1556292496870:aov(data_wide$T0_phq9 ~ data_wide$trans)
1556292504369:sumamry(aov(data_wide$T0_phq9 ~ data_wide$trans))
1556292508392:summary(aov(data_wide$T0_phq9 ~ data_wide$trans))
1556292571425:# check out fist boxplot
1556292571426:boxplot(data_wide$T0_phq9, data_wide$trans)
1556292578587:# check out fist boxplot
1556292578588:boxplot(data_wide$T0_phq9 ~ data_wide$trans)
1556292613286:# check out fist boxplot
1556292613288:ggplot(data_wide, aes( y = T0_phq9, x = data_wide$trans)) +
1556292613290:geom_boxplot()
1556292791328:hist(data_wide[data_wide$trans == "PR",]$T0_phq9)
1556292799906:hist(data_wide[data_wide$trans == "PR",]$T0_phq9)
1556292836617:table(data_wide$trand)
1556292838761:table(data_wide$trans)
1556293160783:# h1b: unterschied phq_9 t0 und t1 mit trans und condit == intervention
1556293160784:dat <- data_wide[data_wide$condit == "Intervention",]
1556293166444:View(dat)
1556293300293:table(dat$trans)
1556293392103:# schaue boxplots an
1556293392104:ggplot(dat, aes(y = interaction(dat$T0_phq9, dat$T1_phq9), x = trans)) +
1556293392106:geom_boxplot()
1556293400400:# schaue boxplots an
1556293400401:ggplot(dat, aes(y = interaction(dat$T0_phq9, dat$T1_phq9), x = trans)) +
1556293400402:geom_bar()
1556293407696:# schaue boxplots an
1556293407698:ggplot(dat, aes(y = interaction(dat$T0_phq9, dat$T1_phq9), x = trans)) +
1556293407699:geom_bar(stat = "identity")
1556293468168:# schaue boxplots an
1556293468170:ggplot(dat, aes(y = dat$T0_phq9 , x = trans)) +
1556293468171:geom_boxplot()
1556293632183:library(cowplot)
1556293646942:install.packages("cowplot")
1556293676868:library(cowplot)
1556293693393:p2 <- ggplot(dat, aes(y = dat$T1_phq9 , x = trans)) +
1556293693394:geom_boxplot()
1556293695465:# schaue boxplots an
1556293695467:p1 <- ggplot(dat, aes(y = dat$T0_phq9 , x = trans)) +
1556293695468:geom_boxplot()
1556293697790:plot_grid(p1, p2, ncol = 2)
1556293870322:ggplot(dat, aes(y = dat$T0_phq9 , x = trans)) + geom_histogram()
1556293885227:ggplot(dat, aes(y = dat$T0_phq9 , x = trans)) + geom_histogram(stat = "identity")
1556293910657:ggplot(dat, aes(x = dat$T0_phq9 )) + geom_histogram(stat = "identity")
1556293915242:ggplot(dat, aes(x = dat$T0_phq9 )) + geom_histogram()
1556294233560:# test
1556294233562:wilcox.test(dat$T0_phq9, dat$T1_phq9)
1556294274406:# test
1556294274407:wilcox.test(dat$T0_phq9, dat$T1_phq9, paired = T)
1556294311947:limr
1556294317595:library(lme4)
1556294329877:install.packages("lme4")
1556294727778:#versuche das ganze zu plotten
1556294727779:dat1 <- data_long %>%
1556294727781:filter(grepl("T0_phq9|T1_phq9", data_long$variable))
1556294736310:View(dat)
1556294755249:View(dat1)
1556294796450:#versuche das ganze zu plotten
1556294796452:dat1 <- data_long %>%
1556294796453:filter(grepl(c("T0_phq9", "T1_phq9"), data_long$variable))
1556294813796:dat1 <- data_long %>%
1556294813797:filter(grepl(pat, data_long$variable))
1556294816034:#versuche das ganze zu plotten
1556294816035:pat <- c("T0_phq9", "T1_phq9")
1556294816275:dat1 <- data_long %>%
1556294816278:filter(grepl(pat, data_long$variable))
1556294849003:data_long[grepl(pat, data_long$variable),]
1556294854442:data_long[grep(pat, data_long$variable),]
1556294877071:#versuche das ganze zu plotten
1556294877073:pat <- c("T0_phq9|T1_phq9")
1556294877592:data_long[grep(pat, data_long$variable),]
1556294897465:#versuche das ganze zu plotten
1556294897467:pat <- ("T0_phq9|T1_phq9")
1556294898672:data_long[grep(pat, data_long$variable),]
1556294912432:data_long[grepl(pat, data_long$variable),]
1556294942352:unique(data_long$variable)
1556294950533:# melt into long format => is not working, what am i missing??
1556294950534:# oder question is this necessary??
1556294950536:data_long <- melt(data_wide,  measure.vars = c("T1_phq9", "T0_phq15", "T1_phq15", "T0_fptm", "T1_gad"))
1556294997765:# melt into long format => is not working, what am i missing??
1556294997766:# oder question is this necessary??
1556294997768:data_long <- melt(data_wide,  measure.vars = c("T0_phq9","T1_phq9", "T0_phq15", "T0_phq15", "T1_phq15", "T0_gad", "T1_gad"))
1556295002186:data_long[grep(pat, data_long$variable),]
1556295013229:dat1 <- data_long[grep(pat, data_long$variable),]
1556295032186:dat1 <- data_long[grep(pat, data_long$variable) & data_long$condit == "Intervention",]
1556295041169:dat1 <- data_long[grep(pat, data_long$variable) | data_long$condit == "Intervention",]
1556295049122:dat1 <- data_long[grepl(pat, data_long$variable) | data_long$condit == "Intervention",]
1556295062985:dat1 <- data_long[grepl(pat, data_long$variable) & data_long$condit == "Intervention",]
1556295107611:ggplot(dat1, aes(x = variable, y = value, fill = trans)) +
1556295107630:geom_bar(stat = "identity")
1556295113375:ggplot(dat1, aes(x = variable, y = value, fill = trans))
1556295124721:dat1$variable
1556295153681:dat1$value
1556295158962:dat1$trans
1556295193771:ggplot(dat1, aes(x = parse_factor(variable, levels = c("T0_phq9" ,"T1_phq9")), y = value, fill = trans)) +
1556295193772:geom_bar(stat = "identity")
1556295202380:ggplot(dat1, aes(x = as.factor(variable, levels = c("T0_phq9" ,"T1_phq9")), y = value, fill = trans)) +
1556295202381:geom_bar(stat = "identity")
1556295275163:plot(dat1$variable ~ dat1$value + dat1$trans)
1556295282971:plot(dat1$variable ~ dat1$value)
1556295303021:ggplot(dat1, aes(x = variable, y = value)) +
1556295303022:geom_bar(stat = "identity")
1556295389223:ggplot(dat1, aes(x = as.character(variable), y = value)) +
1556295389224:geom_bar(stat = "identity")
1556295401558:ggplot(dat1, aes(x = as.character(variable), y = value, fill = trans)) +
1556295401560:geom_bar(stat = "identity")
1556295410100:ggplot(dat1, aes(x = as.character(variable), y = value, fill = trans)) +
1556295410101:geom_bar(stat = "identity", position = position_dodge())
1556295440534:ggplot(dat1, aes(x = as.character(variable), y = value, fill = trans)) +
1556295440535:geom_point(stat = "identity") +
1556295440537:geom_line()
1556295457979:, position = position_dodge()
1556295460297:ggplot(dat1, aes(x = as.character(variable), y = value, fill = trans)) +
1556295460298:geom_point(stat = "identity", position = position_dodge())
1556295464687:bar
1556295466053:ggplot(dat1, aes(x = as.character(variable), y = value, fill = trans)) +
1556295466054:geom_bar(stat = "identity", position = position_dodge())
1556295528863:# linienplot (mit mittelwerten)
1556295528865:ggplot(dat1, aes(x = as.character(variable), y = mean(value, na.rm = T), fill = trans))
1556295539377:# linienplot (mit mittelwerten)
1556295539378:ggplot(dat1, aes(x = as.character(variable), y = mean(value, na.rm = T), fill = trans)) +
1556295539379:geom_point()
1556295553213:mean(value, na.rm = T)
1556295622709:detach("package:drake", unload = T)
1556295661232:# linienplot (mit mittelwerten)
1556295661233:dat2 <- dat1 %>%
1556295661235:group_by(variable, trans) %>%
1556295661236:summarise(mean_t = mean(value))
1556295668390:View(dat2)
1556295688825:ggplot(dat2, aes(x = as.character(variable), y = mean_t, fill = trans)) +
1556295688826:geom_point()
1556295718473:ggplot(dat2, aes(x = as.character(variable), y = mean_t, fill = trans)) +
1556295718474:geom_point()+
1556295718475:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20))
1556295731304:ggplot(dat2, aes(x = as.character(variable), y = mean_t, fill = trans)) +
1556295731305:geom_point()+
1556295731307:geom_line() +
1556295731308:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20))
1556295766223:ggplot(dat2, aes(x = as.character(variable), y = mean_t, shape = interaction(trans, variable)) +
1556295774441:ggplot(dat2, aes(x = as.character(variable), y = mean_t, shape = interaction(trans, variable))) +
1556295774442:geom_point()+
1556295774444:geom_line() +
1556295774445:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20))
1556295788968:ggplot(dat2, aes(x = as.character(variable), y = mean_t, shape = interaction(trans, variable))) +
1556295788969:geom_line() #+
1556295802021:interaction(dat2$trans, dat2variable)
1556295805886:interaction(dat2$trans, dat2$variable)
1556295830673:ggplot(dat2, aes(x = as.character(variable), y = mean_t, fill = interaction(trans, variable))) +
1556295830674:geom_line()
1556295840420:ggplot(dat2, aes(x = as.character(variable), y = mean_t, fill = interaction(trans, variable))) +
1556295840421:geom_point() #+
1556295865483:ggplot(dat2, aes(x = as.character(variable), y = mean_t, shape = interaction(trans, variable))) +
1556295865485:geom_point()
1556295910857:ggplot(dat2, aes(x = as.character(variable), y = mean_t, shape = trans)) +
1556295910858:geom_point() #+
1556295917098:ggplot(dat2, aes(x = as.character(variable), y = mean_t, shape = trans)) +
1556295917099:geom_point() +
1556295917100:geom_line() +
1556295917101:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20))
1556295924601:ggplot(dat2, aes(x = as.character(variable), y = mean_t, shape = trans)) +
1556295924602:geom_line() #+
1556295931448:ggplot(dat2, aes(x = as.character(variable), y = mean_t, shape = trans)) +
1556295931450:geom_point() #+
1556295948209:ggplot(dat2, aes(x = as.character(variable), y = mean_t, shape = trans, line = trans)) +
1556295948211:geom_point() #+
1556295957808:ggplot(dat2, aes(x = as.character(variable), y = mean_t, shape = trans, line = trans)) +
1556295957809:geom_line() #+
1556296080251:#will nicht so recht funktionieren, weiss nicht wo das problem liegt
1556296080253:p <- ggplot(dat2, aes(x = as.character(variable), y = mean_t, shape = trans, line = trans)) +
1556296080254:geom_point() #+
1556296080657:p + geom_line() +
1556296080659:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20))
1556296158870:p + geom_line(group = 2) +
1556296158872:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20))
1556296164602:p + geom_line(group = 1) +
1556296164603:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20))
1556296198272:str(dat2)
1556296233760:dat2$variable <- as.character(dat2$variable)
1556296236337:p + geom_line(group = 1) +
1556296236339:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20))
1556296241070:p <- ggplot(dat2, aes(x = as.character(variable), y = mean_t, shape = trans, line = trans)) +
1556296241072:geom_point() #+
1556296241079:p + geom_line() +
1556296241080:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20))
1556296245368:str(dat2)
1556296271943:p <- ggplot(dat2, aes(x = as.character(variable), y = mean_t, shape = trans, group = trans)) +
1556296271945:geom_point() #+
1556296271955:p + geom_line() +
1556296271958:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20))
1556307306581:av1 <- aov(dat$T0_phq9 ~ dat$trans*dat$T1_phq9)
1556307319980:summary.lm(av1)
1556307347277:av1 <- aov(dat$T0_phq9 ~ dat$T1_phq9)
1556307348688:summary.lm(av1)
1556307359992:# test over all
1556307359993:wilcox.test(dat$T0_phq9, dat$T1_phq9, paired = T) # über alles hoch signifikant
1556307390422:av1 <- glm(dat$T0_phq9 ~ dat$T1_phq9)
1556307394496:summary.lm(av1)
1556307442316:av1 <- glmer(dat$T0_phq9 ~ dat$trans*dat$T1_phq9 + (1|dat$Patientencode))
1556307446956:av1 <- glme(dat$T0_phq9 ~ dat$trans*dat$T1_phq9 + (1|dat$Patientencode))
1556307459867:av1 <- glmer(dat$T0_phq9 ~ dat$trans*dat$T1_phq9 + (1|dat$Patientencode))
1556307466544:av1 <- lme(dat$T0_phq9 ~ dat$trans*dat$T1_phq9 + (1|dat$Patientencode))
1556307472953:library(lme4)
1556307551707:library(ggfortify)
1556307559714:autoplot(av1)
1556307591942:av1 <- lmer(dat$T0_phq9 ~ dat$trans*dat$T1_phq9 + (1|dat$Patientencode))
1556307610397:av1 <- lmer(dat$T0_phq9 ~ dat$trans + dat$T1_phq9 + (1|dat$Patientencode))
1556307617210:av1 <- lmer(dat$T0_phq9 ~ dat$T1_phq9 + (1|dat$Patientencode))
1556307693609:av1 <- aov(dat$T1_phq9 ~ dat$T0_phq9*dat$trans + (1|dat$Patientencode))
1556307707256:av1 <- aov(dat$T1_phq9 ~ dat$T0_phq9*dat$trans + error(dat$Patientencode))
1556307712494:av1 <- aov(dat$T1_phq9 ~ dat$T0_phq9*dat$trans + Error(dat$Patientencode))
1556307715460:summary.lm(av1)
1556307725730:av1 <- aov(dat$T1_phq9 ~ dat$T0_phq9*dat$trans)
1556307727268:summary.lm(av1)
1556307771624:# h1b:test over group an time--------
1556307771627:dat$diff <- dat$T0_phq9-dat$T1_phq9
1556307793265:av1 <- aov(dat$diff ~ dat$trans)
1556307794746:summary.lm(av1)
1556307827095:table(dat$trans)
1556309952753:View(dat1)
1556310037035:# h1b:test over group an time--------
1556310037037:av1 <- aov(dat1$value ~ dat1$variable * dat1$trans) # take long format
1556310080247:# h1b:test over group an time--------
1556310080251:str(dat1)
1556310108585:# h1b:test over group an time--------
1556310108587:dat1$variable <- as.character(dat1$variable)
1556310109362:av1 <- aov(dat1$value ~ dat1$variable * dat1$trans) # take long format
1556310111744:summary.lm(av1)
1556310150516:av1 <- aov(dat$T1_phq9 ~ dat$T0_phq9*dat$trans + Error(dat1$Patientencode))
1556310178452:av1 <- aov(dat1$value ~ dat1$variable * dat1$trans + Error(dat1$Patientencode)) # take long format
1556310182179:av1 <- aov(dat$diff ~ dat$trans)
1556310185173:av1 <- aov(dat1$value ~ dat1$variable * dat1$trans + Error(dat1$Patientencode)) # take long format
1556310187259:summary.lm(av1)
1556310208110:library(ggfortify)
1556310210470:autoplot(av1)
1556310216089:av1 <- aov(dat1$value ~ dat1$variable * dat1$trans) # take long format
1556310217583:autoplot(av1)
1556310271600:boxplot(dat1$value~dat1$variable + dat1$trans)
1556310283933:boxplot(dat1$value~dat1$variable + dat1$trans)
1556310329585:# test with glm
1556310329586:lm1 <- lmer(dat1value ~ dat1$variable * dat1$trans + (1|dat$Patientencode))
1556310336971:# test with glm
1556310336973:lm1 <- lmer(dat1$value ~ dat1$variable * dat1$trans + (1|dat$Patientencode))
1556310343420:# test with glm
1556310343422:lm1 <- lmer(dat1$value ~ dat1$variable * dat1$trans + (1|dat1$Patientencode))
1556310360288:summary(lm1)
1556310679419:I(dat1$value)
1556310684477:(dat1$value)
1556310721126:library(nlme)
1556310780341:lm2 <- nlme(dat1$value ~ dat1$variable * dat1$trans ~ random =  dat1$Patientencode)
1556310794083:lm2 <- nlme(dat1$value ~ dat1$variable * dat1$trans, ~random =  dat1$Patientencode)
1556310806522:lm2 <- nlme(dat1$value ~ dat1$variable * dat1$trans, random =  ~dat1$Patientencode)
1556310835417:lm2 <- nlme(value ~ variable * trans, data = dat1, random =  ~dat1$Patientencode)
1556310852757:lm2 <- nlme(value ~ variable * trans, data = dat1, random =  ~|dat1$Patientencode)
1556310864436:lm2 <- lme(value ~ variable * trans, data = dat1, random =  ~|dat1$Patientencode)
1556310872325:lm2 <- lme(value ~ variable * trans, data = dat1, random =  ~Patientencode)
1556310881274:lm2 <- lme(value ~ variable * trans, data = dat1, random =~Patientencode)
1556310889336:lm2 <- lme(value ~ variable * trans, data = dat1, random = ~ Patientencode)
1556310950232:isSingular(lm1)
1556375676342:# lade original spss
1556375676344:orig_data <- read.spss("TIDe_Gesamt_20190404_kopie.sav",
1556375676346:to.data.frame = T,
1556375676348:add.undeclared.levels = "append")
1556375685496:View(orig_data)
1556375685689:View(orig_data)
1556378862262:levels(orig_data$T0_fptm23_1)
1556378869625:levels(orig_data$T0_fptm_1)
1556378875532:levels(orig_data$T0_fptm_5)
1556378966528:Hmisc::describe(orig_data$T0_fptm_5)
1556378998072:Hmisc::describe(raw_data$T0_fptm_5)
1556379008682:str(raw_data$T0_fptm_5)
1556379701345:?recode
1556380148247:# lade daten csv
1556380148249:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556380148251:delim = ";",
1556380148252:na = c(" ", "-99"),
1556380148254:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556380148258:drop_na(Patientencode) %>%
1556380148259:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556380148261:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556380148270:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1556380148275:'1' = "noch in der Schule",
1556380148279:'2' = "ohne Schulabschluss",
1556380148287:'3' = "Primar/Sekundarschule",
1556380148290:'4' = "Berufsmaturität",
1556380148294:'5' = "Sekundarschule",
1556380148295:'6' = "Fachmatur",
1556380148297:'7' = "Fachchule",
1556380148299:'8' = "Universität",
1556380148300:'9' = "anderes"),
1556380148303:REKRUTIERUNG = recode(.$REKRUTIERUNG, '0' = "PR", '1' = "SR")) %>%
1556380148306:# Psychotherapiemotivation Subskalen:
1556380148308:# Psychischer Leidensdruck (LD), Hoffnung (HO), Symptombezogene Zuwendung (ZW), Verneinung psychischer Hilfsbedürftigkeit (VH)
1556380148313:# Achtung: Hoffnungsitems rekodieren
1556380148319:# Achtung: einige items fptm23, einige fptm, eins fprm_9 -> noch ändern?
1556380148324:# LD <- c("T0_fptm_6, T0_fptm_7, T0_fptm_13, T0_fptm_15")
1556380148329:# HO <- c("T0_fptm23_1, T0_fptm23_4, T0_fprm_9, T0_fptm_14")
1556380148333:# ZW <- c("T0_fptm_5, T0_fptm_8, T0_fptm_11, T0_fptm_12")
1556380148335:# VH <- c("T0_fptm23_2, T0_fptm23_3, T0_fptm_10")
1556380148336:rename(ld1 = T0_fptm_6, ld2 = T0_fptm_7, ld3 = T0_fptm_13, ld4 = T0_fptm_15,
1556380148338:ho1 = T0_fptm23_1, ho2 = T0_fptm23_4, ho3 = T0_fprm_9, ho4 = T0_fptm_14,
1556380148339:zw1 = T0_fptm_5, zw2 = T0_fptm_8, zw3 = T0_fptm_11, zw4 = T0_fptm_12,
1556380148341:vh1 = T0_fptm23_2, vh2 = T0_fptm23_3, vh3 = T0_fptm_10) %>%
1556380148343:mutate(ho1 = recode(h01, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556380148344:ho2 = recode(h02, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556380148346:ho3 = recode(h03, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556380148347:ho4 = recode(ho4, '1' = "4",'2' = "3", '3' = "2", '4' = "1"))
1556380161964:# lade daten csv
1556380161970:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556380161972:delim = ";",
1556380161974:na = c(" ", "-99"),
1556380161976:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556380161977:drop_na(Patientencode) %>%
1556380161979:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556380161981:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556380161983:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1556380161984:'1' = "noch in der Schule",
1556380161987:'2' = "ohne Schulabschluss",
1556380161988:'3' = "Primar/Sekundarschule",
1556380161991:'4' = "Berufsmaturität",
1556380161995:'5' = "Sekundarschule",
1556380161999:'6' = "Fachmatur",
1556380162003:'7' = "Fachchule",
1556380162004:'8' = "Universität",
1556380162006:'9' = "anderes"),
1556380162007:REKRUTIERUNG = recode(.$REKRUTIERUNG, '0' = "PR", '1' = "SR")) %>%
1556380162008:# Psychotherapiemotivation Subskalen:
1556380162009:# Psychischer Leidensdruck (LD), Hoffnung (HO), Symptombezogene Zuwendung (ZW), Verneinung psychischer Hilfsbedürftigkeit (VH)
1556380162010:# Achtung: Hoffnungsitems rekodieren
1556380162012:# Achtung: einige items fptm23, einige fptm, eins fprm_9 -> noch ändern?
1556380162013:# LD <- c("T0_fptm_6, T0_fptm_7, T0_fptm_13, T0_fptm_15")
1556380162014:# HO <- c("T0_fptm23_1, T0_fptm23_4, T0_fprm_9, T0_fptm_14")
1556380162016:# ZW <- c("T0_fptm_5, T0_fptm_8, T0_fptm_11, T0_fptm_12")
1556380162019:# VH <- c("T0_fptm23_2, T0_fptm23_3, T0_fptm_10")
1556380162021:rename(ld1 = T0_fptm_6, ld2 = T0_fptm_7, ld3 = T0_fptm_13, ld4 = T0_fptm_15,
1556380162022:ho1 = T0_fptm23_1, ho2 = T0_fptm23_4, ho3 = T0_fprm_9, ho4 = T0_fptm_14,
1556380162024:zw1 = T0_fptm_5, zw2 = T0_fptm_8, zw3 = T0_fptm_11, zw4 = T0_fptm_12,
1556380162025:vh1 = T0_fptm23_2, vh2 = T0_fptm23_3, vh3 = T0_fptm_10) %>%
1556380162026:mutate(ho1 = recode(ho1, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556380162028:ho2 = recode(ho2, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556380162030:ho3 = recode(ho3, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556380162035:ho4 = recode(ho4, '1' = "4",'2' = "3", '3' = "2", '4' = "1"))
1556380175047:levels(orig_data$T0_fptm_5)
1556380186374:levels(orig_data$T0_fptm23_1)
1556380199644:Hmisc::describe(orig_data$T0_fptm23_1)
1556380344889:zero_data <- read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556380344890:delim = ";",
1556380344897:na = c(" ", "-99"),
1556380344899:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y")))
1556380348869:View(zero_data)
1556380377566:View(raw_data)
1556380458011:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960" # bei einer Altersangabe fehlt Monat => nehme Januar
1556380458016:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y") # Ändere Alter in Datum
1556380458018:raw_data$Alter <- 2018- year(raw_data$T0_Geb)
1556380458020:raw_data$Altersgruppen <- cut(raw_data$Alter,
1556380458021:breaks = c(-Inf, 34, 49, 64, Inf), # menuCH Kategorien
1556380458023:labels = c("18 bis 34-jährig", "35 bis 49-jährig", "50 bis 64-jährig", "65-jährig und älter"))
1556380458025:raw_data$Altersgruppen <- as.character(raw_data$Altersgruppen) # parse to character (parse_character wont work)
1556380568280:pattern2 <- c("T0_phq9" ,"T1_phq9", "T0_phq15", "T1_phq15", "ld", "ho", "zw", "vh", "T0_gad", "T1_gad")
1556380569097:empty <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1556380569516:for (nam in pattern2) {
1556380569532:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556380569549:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556380569552:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1556380569554:empty[[nam]] <- sub_dat
1556380569556:}
1556380592163:pattern2 <- c("T0_phq9" ,"T1_phq9", "T0_phq15", "T1_phq15", "ld", "ho", "zw", "vh", "T0_gad", "T1_gad")
1556380593210:empty <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1556380594173:for (nam in pattern2) {
1556380594174:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556380594175:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556380594176:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1556380594178:empty[[nam]] <- sub_dat
1556380594179:}
1556380773397:nam = ho
1556380778636:nam == ho
1556380790766:nam <- "no"
1556380801532:nam <- "ho"
1556380808563:raw_data[,grep(nam, names(raw_data), value = T)]
1556380816168:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556380821392:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556380854304:str(raw_data)
1556380968375:# lade daten csv
1556380968382:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556380968386:delim = ";",
1556380968388:na = c(" ", "-99"),
1556380968390:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556380968391:drop_na(Patientencode) %>%
1556380968392:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556380968394:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556380968396:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1556380968400:'1' = "noch in der Schule",
1556380968403:'2' = "ohne Schulabschluss",
1556380968405:'3' = "Primar/Sekundarschule",
1556380968408:'4' = "Berufsmaturität",
1556380968410:'5' = "Sekundarschule",
1556380968414:'6' = "Fachmatur",
1556380968416:'7' = "Fachchule",
1556380968421:'8' = "Universität",
1556380968422:'9' = "anderes"),
1556380968424:REKRUTIERUNG = recode(.$REKRUTIERUNG, '0' = "PR", '1' = "SR")) %>%
1556380968426:# Psychotherapiemotivation Subskalen:
1556380968427:# Psychischer Leidensdruck (LD), Hoffnung (HO), Symptombezogene Zuwendung (ZW), Verneinung psychischer Hilfsbedürftigkeit (VH)
1556380968428:# Achtung: Hoffnungsitems rekodieren
1556380968430:# Achtung: einige items fptm23, einige fptm, eins fprm_9 -> noch ändern?
1556380968432:# LD <- c("T0_fptm_6, T0_fptm_7, T0_fptm_13, T0_fptm_15")
1556380968434:# HO <- c("T0_fptm23_1, T0_fptm23_4, T0_fprm_9, T0_fptm_14")
1556380968436:# ZW <- c("T0_fptm_5, T0_fptm_8, T0_fptm_11, T0_fptm_12")
1556380968443:# VH <- c("T0_fptm23_2, T0_fptm23_3, T0_fptm_10")
1556380968447:rename(ld1 = T0_fptm_6, ld2 = T0_fptm_7, ld3 = T0_fptm_13, ld4 = T0_fptm_15,
1556380968450:ho1 = T0_fptm23_1, ho2 = T0_fptm23_4, ho3 = T0_fprm_9, ho4 = T0_fptm_14,
1556380968451:zw1 = T0_fptm_5, zw2 = T0_fptm_8, zw3 = T0_fptm_11, zw4 = T0_fptm_12,
1556380968454:vh1 = T0_fptm23_2, vh2 = T0_fptm23_3, vh3 = T0_fptm_10) %>%
1556380968456:mutate(ho1 = recode(ho1, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556380968458:ho2 = recode(ho2, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556380968459:ho3 = recode(ho3, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556380968461:ho4 = recode(ho4, '1' = "4",'2' = "3", '3' = "2", '4' = "1")) %>%
1556380968464:muatate(ho1 = parse_number(),
1556380968465:ho2 = parse_number(),
1556380968467:ho3 = parse_number(),
1556380968468:ho4 = parse_number())
1556380974287:# lade daten csv
1556380974288:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556380974290:delim = ";",
1556380974291:na = c(" ", "-99"),
1556380974293:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556380974298:drop_na(Patientencode) %>%
1556380974302:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556380974309:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556380974310:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1556380974311:'1' = "noch in der Schule",
1556380974312:'2' = "ohne Schulabschluss",
1556380974314:'3' = "Primar/Sekundarschule",
1556380974315:'4' = "Berufsmaturität",
1556380974316:'5' = "Sekundarschule",
1556380974318:'6' = "Fachmatur",
1556380974320:'7' = "Fachchule",
1556380974322:'8' = "Universität",
1556380974326:'9' = "anderes"),
1556380974330:REKRUTIERUNG = recode(.$REKRUTIERUNG, '0' = "PR", '1' = "SR")) %>%
1556380974333:# Psychotherapiemotivation Subskalen:
1556380974336:# Psychischer Leidensdruck (LD), Hoffnung (HO), Symptombezogene Zuwendung (ZW), Verneinung psychischer Hilfsbedürftigkeit (VH)
1556380974338:# Achtung: Hoffnungsitems rekodieren
1556380974341:# Achtung: einige items fptm23, einige fptm, eins fprm_9 -> noch ändern?
1556380974343:# LD <- c("T0_fptm_6, T0_fptm_7, T0_fptm_13, T0_fptm_15")
1556380974345:# HO <- c("T0_fptm23_1, T0_fptm23_4, T0_fprm_9, T0_fptm_14")
1556380974346:# ZW <- c("T0_fptm_5, T0_fptm_8, T0_fptm_11, T0_fptm_12")
1556380974348:# VH <- c("T0_fptm23_2, T0_fptm23_3, T0_fptm_10")
1556380974351:rename(ld1 = T0_fptm_6, ld2 = T0_fptm_7, ld3 = T0_fptm_13, ld4 = T0_fptm_15,
1556380974352:ho1 = T0_fptm23_1, ho2 = T0_fptm23_4, ho3 = T0_fprm_9, ho4 = T0_fptm_14,
1556380974353:zw1 = T0_fptm_5, zw2 = T0_fptm_8, zw3 = T0_fptm_11, zw4 = T0_fptm_12,
1556380974355:vh1 = T0_fptm23_2, vh2 = T0_fptm23_3, vh3 = T0_fptm_10) %>%
1556380974356:mutate(ho1 = recode(ho1, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556380974357:ho2 = recode(ho2, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556380974358:ho3 = recode(ho3, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556380974360:ho4 = recode(ho4, '1' = "4",'2' = "3", '3' = "2", '4' = "1")) %>%
1556380974361:mutate(ho1 = parse_number(),
1556380974362:ho2 = parse_number(),
1556380974364:ho3 = parse_number(),
1556380974365:ho4 = parse_number())
1556381024210:# lade daten csv
1556381024212:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556381024213:delim = ";",
1556381024214:na = c(" ", "-99"),
1556381024216:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556381024217:drop_na(Patientencode) %>%
1556381024218:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556381024220:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556381024221:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1556381024222:'1' = "noch in der Schule",
1556381024223:'2' = "ohne Schulabschluss",
1556381024225:'3' = "Primar/Sekundarschule",
1556381024226:'4' = "Berufsmaturität",
1556381024227:'5' = "Sekundarschule",
1556381024229:'6' = "Fachmatur",
1556381024230:'7' = "Fachchule",
1556381024233:'8' = "Universität",
1556381024234:'9' = "anderes"),
1556381024235:REKRUTIERUNG = recode(.$REKRUTIERUNG, '0' = "PR", '1' = "SR")) %>%
1556381024237:# Psychotherapiemotivation Subskalen:
1556381024238:# Psychischer Leidensdruck (LD), Hoffnung (HO), Symptombezogene Zuwendung (ZW), Verneinung psychischer Hilfsbedürftigkeit (VH)
1556381024240:# Achtung: Hoffnungsitems rekodieren
1556381024241:# Achtung: einige items fptm23, einige fptm, eins fprm_9 -> noch ändern?
1556381024243:# LD <- c("T0_fptm_6, T0_fptm_7, T0_fptm_13, T0_fptm_15")
1556381024244:# HO <- c("T0_fptm23_1, T0_fptm23_4, T0_fprm_9, T0_fptm_14")
1556381024245:# ZW <- c("T0_fptm_5, T0_fptm_8, T0_fptm_11, T0_fptm_12")
1556381024247:# VH <- c("T0_fptm23_2, T0_fptm23_3, T0_fptm_10")
1556381024248:rename(ld1 = T0_fptm_6, ld2 = T0_fptm_7, ld3 = T0_fptm_13, ld4 = T0_fptm_15,
1556381024250:ho1 = T0_fptm23_1, ho2 = T0_fptm23_4, ho3 = T0_fprm_9, ho4 = T0_fptm_14,
1556381024251:zw1 = T0_fptm_5, zw2 = T0_fptm_8, zw3 = T0_fptm_11, zw4 = T0_fptm_12,
1556381024253:vh1 = T0_fptm23_2, vh2 = T0_fptm23_3, vh3 = T0_fptm_10) %>%
1556381024254:mutate(ho1 = recode(ho1, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556381024256:ho2 = recode(ho2, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556381024258:ho3 = recode(ho3, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556381024261:ho4 = recode(ho4, '1' = "4",'2' = "3", '3' = "2", '4' = "1")) %>%
1556381024265:mutate(ho1 = parse_number(.$ho1),
1556381024269:ho2 = parse_number(.$ho2),
1556381024271:ho3 = parse_number(.$ho3),
1556381024273:ho4 = parse_number(.$ho4))
1556381036227:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960" # bei einer Altersangabe fehlt Monat => nehme Januar
1556381036507:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y") # Ändere Alter in Datum
1556381036822:raw_data$Alter <- 2018- year(raw_data$T0_Geb)
1556381037164:raw_data$Altersgruppen <- cut(raw_data$Alter,
1556381037171:breaks = c(-Inf, 34, 49, 64, Inf), # menuCH Kategorien
1556381037178:labels = c("18 bis 34-jährig", "35 bis 49-jährig", "50 bis 64-jährig", "65-jährig und älter"))
1556381037509:raw_data$Altersgruppen <- as.character(raw_data$Altersgruppen) # parse to character (parse_character wont work)
1556381038133:pattern2 <- c("T0_phq9" ,"T1_phq9", "T0_phq15", "T1_phq15", "ld", "ho", "zw", "vh", "T0_gad", "T1_gad")
1556381038500:empty <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1556381038952:for (nam in pattern2) {
1556381038955:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556381038957:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556381038959:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1556381038962:empty[[nam]] <- sub_dat
1556381038964:}
1556381051463:str(raw_data)
1556381099669:nam = "ho"
1556381103759:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556381108264:sub_dat
1556381115112:str(sub_dat)
1556381119675:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556381127233:str(sub_dat)
1556381152033:empty <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1556381152525:for (nam in pattern2) {
1556381152528:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556381152529:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556381152531:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1556381152536:empty[[nam]] <- sub_dat
1556381152539:}
1556381168359:nam = "ld"
1556381178495:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556381184111:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556381193213:nam = "zw"
1556381198408:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556381203355:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556381211049:str(sub_dat)
1556381257802:# lade daten csv
1556381257805:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556381257808:delim = ";",
1556381257810:na = c(" ", "-99"),
1556381257812:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556381257814:drop_na(Patientencode) %>%
1556381257816:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556381257819:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556381257822:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1556381257827:'1' = "noch in der Schule",
1556381257836:'2' = "ohne Schulabschluss",
1556381257841:'3' = "Primar/Sekundarschule",
1556381257843:'4' = "Berufsmaturität",
1556381257845:'5' = "Sekundarschule",
1556381257846:'6' = "Fachmatur",
1556381257848:'7' = "Fachchule",
1556381257852:'8' = "Universität",
1556381257854:'9' = "anderes"),
1556381257861:REKRUTIERUNG = recode(.$REKRUTIERUNG, '0' = "PR", '1' = "SR")) %>%
1556381257864:# Psychotherapiemotivation Subskalen:
1556381257866:# Psychischer Leidensdruck (LD), Hoffnung (HO), Symptombezogene Zuwendung (ZW), Verneinung psychischer Hilfsbedürftigkeit (VH)
1556381257869:# Achtung: Hoffnungsitems rekodieren
1556381257872:# Achtung: einige items fptm23, einige fptm, eins fprm_9 -> noch ändern?
1556381257876:# LD <- c("T0_fptm_6, T0_fptm_7, T0_fptm_13, T0_fptm_15")
1556381257881:# HO <- c("T0_fptm23_1, T0_fptm23_4, T0_fprm_9, T0_fptm_14")
1556381257885:# ZW <- c("T0_fptm_5, T0_fptm_8, T0_fptm_11, T0_fptm_12")
1556381257888:# VH <- c("T0_fptm23_2, T0_fptm23_3, T0_fptm_10")
1556381257897:rename(ld1 = T0_fptm_6, ld2 = T0_fptm_7, ld3 = T0_fptm_13, ld4 = T0_fptm_15,
1556381257901:ho1 = T0_fptm23_1, ho2 = T0_fptm23_4, ho3 = T0_fprm_9, ho4 = T0_fptm_14,
1556381257904:zw_1 = T0_fptm_5, zw_2 = T0_fptm_8, zw_3 = T0_fptm_11, zw_4 = T0_fptm_12,
1556381257908:vh1 = T0_fptm23_2, vh2 = T0_fptm23_3, vh3 = T0_fptm_10) %>%
1556381257910:mutate(ho1 = recode(ho1, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556381257913:ho2 = recode(ho2, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556381257915:ho3 = recode(ho3, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556381257917:ho4 = recode(ho4, '1' = "4",'2' = "3", '3' = "2", '4' = "1")) %>%
1556381257919:mutate(ho1 = parse_number(.$ho1),
1556381257921:ho2 = parse_number(.$ho2),
1556381257926:ho3 = parse_number(.$ho3),
1556381257928:ho4 = parse_number(.$ho4))
1556381258703:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960" # bei einer Altersangabe fehlt Monat => nehme Januar
1556381258957:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y") # Ändere Alter in Datum
1556381259230:raw_data$Alter <- 2018- year(raw_data$T0_Geb)
1556381259570:raw_data$Altersgruppen <- cut(raw_data$Alter,
1556381259572:breaks = c(-Inf, 34, 49, 64, Inf), # menuCH Kategorien
1556381259574:labels = c("18 bis 34-jährig", "35 bis 49-jährig", "50 bis 64-jährig", "65-jährig und älter"))
1556381259916:raw_data$Altersgruppen <- as.character(raw_data$Altersgruppen) # parse to character (parse_character wont work)
1556381260346:pattern2 <- c("T0_phq9" ,"T1_phq9", "T0_phq15", "T1_phq15", "ld", "ho", "zw", "vh", "T0_gad", "T1_gad")
1556381261496:empty <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1556381261845:for (nam in pattern2) {
1556381261848:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556381261850:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556381261855:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1556381261857:empty[[nam]] <- sub_dat
1556381261859:}
1556381273675:pattern2 <- c("T0_phq9" ,"T1_phq9", "T0_phq15", "T1_phq15", "ld", "ho", "zw_", "vh", "T0_gad", "T1_gad")
1556381274153:empty <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1556381274458:for (nam in pattern2) {
1556381274461:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556381274463:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556381274464:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1556381274465:empty[[nam]] <- sub_dat
1556381274467:}
1556381275694:data <- do.call(bind_cols,empty)
1556381281180:# slice raw_data and paste back
1556381281181:data2 <- raw_data[, c(1:23,69:78, 108:109)]
1556381281571:dat <- data[, grep("sum", names(data), value = T)]
1556381281938:raw_data2 <- bind_cols(data2, dat) # cbind
1556381287303:View(raw_data2)
1556382709474:# drop all usless variables and rename
1556382709477:raw_data2 <- raw_data2[-55,] # contains only NA
1556382889838:data_wide <- raw_data2 %>%
1556382889841:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1556382889844:Anz_Telefonate, T0_Datum, T0_sex, T0_Schulabschluss, Alter, Altersgruppen,
1556382889845:sum, sum1, sum2, sum3, sum4, sum5, sum6, sum7, sum8, sum9) %>%
1556382889847:rename(trans = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss, age = Alter, age_group = Altersgruppen,
1556382889849:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556382889850:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, ld = sum4, ho = sum5, zw = sum6, vh = sum7, T0_gad = sum8, T1_gad = sum9) # rename for melting data
1556382932195:# melt into long format => is not working, what am i missing??
1556382932198:# oder question is this necessary??
1556382932201:data_long <- melt(data_wide,  measure.vars = c("T0_phq9","T1_phq9", "T0_phq15", "T0_phq15", "T1_phq15", "T0_gad", "T1_gad", "ld", "ho", "zw", "vh"))
1556383073067:raw_data2[, grep(pattern3, names(raw_data2), value = T)]
1556383076624:pattern3 = c("ld", "ho", "zw", "vh")
1556383076986:raw_data2[, grep(pattern3, names(raw_data2), value = T)]
1556383103774:grep(pattern3, names(raw_data2), value = T)
1556383120807:data_wide[, grep(pattern3, names(data_wide), value = T)]
1556383145880:pattern3 = c("ld|ho|zw|vh")
1556383146345:data_wide[, grep(pattern3, names(data_wide), value = T)]
1556383200886:data_wide$motivation <- rowSums(data_wide[, grep(pattern3, names(data_wide), value = T)], na.rm = T)
1556383214192:rowSums(data_wide[, grep(pattern3, names(data_wide), value = T)], na.rm = T)
1556383487915:View(orig_data)
1556390632413:View(orig_data)
1556390697192:levels(orig_data$T1_phq15_a)
1556390808640:# rowsums mit 0 sind NA's
1556390808655:data_wide == 0
1556390817140:# rowsums mit 0 sind NA's
1556390817143:sum(data_wide == 0)
1556390841281:# rowsums mit 0 sind NA's
1556390841283:which(data_wide == 0)
1556390864449:# rowsums mit 0 sind NA's
1556390864451:data_wide[(data_wide == 0),]
1556390878746:# rowsums mit 0 sind NA's
1556390878748:data_wide[data_wide == 0,]
1556390913644:# rowsums mit 0 sind NA's
1556390913645:which(data_wide == 0)
1556390929003:# rowsums mit 0 sind NA's
1556390929006:filter(data_wide, which(data_wide == 0))
1556390945675:# rowsums mit 0 sind NA's
1556390945679:filter(data_wide, data_wide == 0)
1556390955046:data_wide == 0
1556391001901:apply(data_wide, x == 0)
1556391035629:apply(data_wide, is.na())
1556391040841:apply(data_wide, FUN = is.na())
1556391049182:apply(data_wide, FUN = is.na)
1556391068447:apply(data_wide, names(data_wide), FUN = is.na)
1556391096916:which(data_wide == 0)
1556391114051:subset(data_wide, which(data_wide == 0))
1556391128617:subset(data_wide, data_wide == 0)
1556391135290:t <- subset(data_wide, data_wide == 0)
1556391149912:View(t)
1556391271820:t <- subset(data_wide, which(0 %in% data_wide))
1556391280089:which(0 %in% data_wide)
1556391293227:t <- subset(data_wide, which(0 %in% data_wide[1]))
1556391300799:which(0 %in% data_wide[1])
1556391321256:data_wide == 0
1556391345678:t <- data_wide == 0
1556391362217:data_wide[t,]
1556391406798:sum(t)
1556391411972:sum(t, na.rm = T)
1556391507905:ifelse(data_wide == 0, NA, data_wide)
1556391549152:ifelse(data_wide == 0, NA, data_wide)
1556391625768:names(data_wide)
1556391655884:data_wide[10:19, ]
1556391672252:data_wide[,10:19]
1556391682253:ifelse(data_wide[,10:19] == 0, NA, data_wide)
1556391705439:data_wide[,10:19] == 0
1556391793256:data_wide[,10:20] == 0
1556391805002:t <- data_wide[,10:20] == 0
1556391815695:data_wide[t]
1556391820556:data_wide[t,]
1556391828894:data_wide[,t]
1556392007896:# rowsums mit 0 sind NA's
1556392007897:data_wide[data_wide == 0] <- NA
1556392013910:View(data_wide)
1556897996967:# lade daten csv
1556897996968:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556897996969:delim = ";",
1556897996971:na = c(" ", "-99"),
1556897996972:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556897996973:drop_na(Patientencode) %>%
1556897996974:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556897996975:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556897996976:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1556897996977:'1' = "noch in der Schule",
1556897996980:'2' = "ohne Schulabschluss",
1556897996981:'3' = "Primar/Sekundarschule",
1556897996982:'4' = "Berufsmaturität",
1556897996983:'5' = "Sekundarschule",
1556897996985:'6' = "Fachmatur",
1556897996986:'7' = "Fachchule",
1556897996987:'8' = "Universität",
1556897996988:'9' = "anderes"),
1556897996989:REKRUTIERUNG = recode(.$REKRUTIERUNG, '0' = "PR", '1' = "SR")) %>%
1556897996990:# Psychotherapiemotivation Subskalen:
1556897996992:# Psychischer Leidensdruck (LD), Hoffnung (HO), Symptombezogene Zuwendung (ZW), Verneinung psychischer Hilfsbedürftigkeit (VH)
1556897996993:# Achtung: Hoffnungsitems rekodieren
1556897996994:# Achtung: einige items fptm23, einige fptm, eins fprm_9 -> noch ändern?
1556897996995:# LD <- c("T0_fptm_6, T0_fptm_7, T0_fptm_13, T0_fptm_15")
1556897996996:# HO <- c("T0_fptm23_1, T0_fptm23_4, T0_fprm_9, T0_fptm_14")
1556897996998:# ZW <- c("T0_fptm_5, T0_fptm_8, T0_fptm_11, T0_fptm_12")
1556897996999:# VH <- c("T0_fptm23_2, T0_fptm23_3, T0_fptm_10")
1556897997000:rename(ld1 = T0_fptm_6, ld2 = T0_fptm_7, ld3 = T0_fptm_13, ld4 = T0_fptm_15,
1556897997001:ho1 = T0_fptm23_1, ho2 = T0_fptm23_4, ho3 = T0_fprm_9, ho4 = T0_fptm_14,
1556897997002:zw_1 = T0_fptm_5, zw_2 = T0_fptm_8, zw_3 = T0_fptm_11, zw_4 = T0_fptm_12,
1556897997004:vh1 = T0_fptm23_2, vh2 = T0_fptm23_3, vh3 = T0_fptm_10) %>%
1556897997005:mutate(ho1 = recode(ho1, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556897997006:ho2 = recode(ho2, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556897997007:ho3 = recode(ho3, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556897997008:ho4 = recode(ho4, '1' = "4",'2' = "3", '3' = "2", '4' = "1")) %>%
1556897997009:mutate(ho1 = parse_number(.$ho1),
1556897997010:ho2 = parse_number(.$ho2),
1556897997012:ho3 = parse_number(.$ho3),
1556897997013:ho4 = parse_number(.$ho4))
1556898010779:library(tidyverse)
1556898011910:library(foreign)
1556898011922:library(Amelia)
1556898011942:library(reshape2)
1556898011954:library(gmodels)
1556898011985:library(lubridate)
1556898011993:library(psych)
1556898012034:library(Hmisc)
1556898013132:library(psych)
1556898013135:# lade original spss
1556898013136:orig_data <- read.spss("TIDe_Gesamt_20190404_kopie.sav",
1556898013137:to.data.frame = T,
1556898013138:add.undeclared.levels = "append")
1556898013160:# lade daten csv
1556898013162:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1556898013163:delim = ";",
1556898013164:na = c(" ", "-99"),
1556898013165:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1556898013166:drop_na(Patientencode) %>%
1556898013168:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1556898013169:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1556898013170:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1556898013171:'1' = "noch in der Schule",
1556898013172:'2' = "ohne Schulabschluss",
1556898013174:'3' = "Primar/Sekundarschule",
1556898013175:'4' = "Berufsmaturität",
1556898013176:'5' = "Sekundarschule",
1556898013177:'6' = "Fachmatur",
1556898013178:'7' = "Fachchule",
1556898013179:'8' = "Universität",
1556898013180:'9' = "anderes"),
1556898013181:REKRUTIERUNG = recode(.$REKRUTIERUNG, '0' = "PR", '1' = "SR")) %>%
1556898013182:# Psychotherapiemotivation Subskalen:
1556898013183:# Psychischer Leidensdruck (LD), Hoffnung (HO), Symptombezogene Zuwendung (ZW), Verneinung psychischer Hilfsbedürftigkeit (VH)
1556898013185:# Achtung: Hoffnungsitems rekodieren
1556898013186:# Achtung: einige items fptm23, einige fptm, eins fprm_9 -> noch ändern?
1556898013187:# LD <- c("T0_fptm_6, T0_fptm_7, T0_fptm_13, T0_fptm_15")
1556898013189:# HO <- c("T0_fptm23_1, T0_fptm23_4, T0_fprm_9, T0_fptm_14")
1556898013190:# ZW <- c("T0_fptm_5, T0_fptm_8, T0_fptm_11, T0_fptm_12")
1556898013191:# VH <- c("T0_fptm23_2, T0_fptm23_3, T0_fptm_10")
1556898013193:rename(ld1 = T0_fptm_6, ld2 = T0_fptm_7, ld3 = T0_fptm_13, ld4 = T0_fptm_15,
1556898013194:ho1 = T0_fptm23_1, ho2 = T0_fptm23_4, ho3 = T0_fprm_9, ho4 = T0_fptm_14,
1556898013195:zw_1 = T0_fptm_5, zw_2 = T0_fptm_8, zw_3 = T0_fptm_11, zw_4 = T0_fptm_12,
1556898013196:vh1 = T0_fptm23_2, vh2 = T0_fptm23_3, vh3 = T0_fptm_10) %>%
1556898013197:mutate(ho1 = recode(ho1, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556898013198:ho2 = recode(ho2, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556898013200:ho3 = recode(ho3, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1556898013201:ho4 = recode(ho4, '1' = "4",'2' = "3", '3' = "2", '4' = "1")) %>%
1556898013202:mutate(ho1 = parse_number(.$ho1),
1556898013203:ho2 = parse_number(.$ho2),
1556898013204:ho3 = parse_number(.$ho3),
1556898013206:ho4 = parse_number(.$ho4))
1556898013356:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960" # bei einer Altersangabe fehlt Monat => nehme Januar
1556898013358:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y") # Ändere Alter in Datum
1556898013360:raw_data$Alter <- 2018- year(raw_data$T0_Geb)
1556898013361:raw_data$Altersgruppen <- cut(raw_data$Alter,
1556898013362:breaks = c(-Inf, 34, 49, 64, Inf), # menuCH Kategorien
1556898013363:labels = c("18 bis 34-jährig", "35 bis 49-jährig", "50 bis 64-jährig", "65-jährig und älter"))
1556898013365:raw_data$Altersgruppen <- as.character(raw_data$Altersgruppen) # parse to character (parse_character funktioniet hier nicht => wieso?)
1556898013369:pattern2 <- c("T0_phq9" ,"T1_phq9", "T0_phq15", "T1_phq15", "ld", "ho", "zw_", "vh", "T0_gad", "T1_gad")
1556898013371:# achtung bei rowsums werden 0 erzeugt => ich gehe davon aus, dass diese NA' sein sollten
1556898013372:# überprüfe das mit plausibilitätschecks (...)
1556898013373:empty <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1556898013375:for (nam in pattern2) {
1556898013376:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1556898013377:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1556898013378:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1556898013379:empty[[nam]] <- sub_dat
1556898013381:}
1556898013403:data <- do.call(bind_cols,empty)
1556898024376:data2 <- raw_data[, c(1:23,69:78, 108:109)]
1556898024377:dat <- data[, grep("sum", names(data), value = T)]
1556898024379:raw_data2 <- bind_cols(data2, dat) # cbind
1556898024382:#missing map
1556898024385:missmap(raw_data2) # 20 percent fehlen v.a. bei variable schluabschluss
1556898024422:# drop all usless variables and rename
1556898024423:raw_data2 <- raw_data2[-55,] # contains only NA
1556898024425:data_wide <- raw_data2 %>%
1556898024426:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1556898024427:T0_Datum, T0_sex, T0_Schulabschluss, Alter, Altersgruppen,
1556898024428:sum, sum1, sum2, sum3, sum4, sum5, sum6, sum7, sum8, sum9) %>%
1556898024429:rename(trans = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss, age = Alter, age_group = Altersgruppen,
1556898024430:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1556898024431:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, ld = sum4, ho = sum5, zw = sum6, vh = sum7, T0_gad = sum8, T1_gad = sum9) # rename for melting data
1556898024446:# neue variable therapiemotivation
1556898024447:# rowsum von ld, ho, zw, vh
1556898024448:pattern3 = c("ld|ho|zw|vh")
1556898024449:data_wide$motivation <- rowSums(data_wide[, grep(pattern3, names(data_wide), value = T)], na.rm = T)
1556898062099:names(data_wide)
1556898098056:data_wide %>%
1556898098058:mutate_if(vars(10:19), ~na_if(., NA))
1556898107974:data_wide %>%
1556898107976:mutate_if(vars(10:19), ~na_if(., 'NA'))
1556898117442:test <- data_wide %>%
1556898117444:mutate_if(vars(10:19), ~na_if(., 'NA'))
1556898123512:test <- data_wide %>%
1556898123514:mutate_if(vars(10:19), ~na_if(., 'NA'))
1556898432662:df <- tibble::tibble(x = c(1, 2, NA), y = c("a", NA, "b"), z = list(1:5, NULL, 10:20))
1556898434838:df
1556898462847:df %>% mutate_if(~na_if(., "0"))
1556898468230:df %>% mutate_if(~na_if(., 0))
1556898476184:df %>% mutate_if(~na_if(., "na"))
1556898524616:df %>% mutate_if(~str_remove_all(., NA, 0))
1556898542473:df %>% mutate_if(~replace_na(., NA, 0))
1556898577297:df %>% mutate_if(~replace_na(., list(x = NA, y = "test"))
1556898579196:)
1556898583088:df %>% mutate_if(~replace_na(., list(x = NA, y = "test")))
1556898588607:df %>% mutate_all(~replace_na(., list(x = NA, y = "test")))
1556898613207:df %>% replace_na(list(x = NA, y = "test"))
1556898633055:df %>% replace_na("test")
1556898644055:str(df)
1556898692323:test <- data_wide %>%
1556898692324:mutate_if(vars(10:19), ~ifelse(., 0, 'NA'))
1556898739778:test <- data_wide %>%
1556898739781:mutate_if(vars(10:19), ~if_else(. == 0, "NA", .))
1556898744370:test <- data_wide %>%
1556898744372:mutate(vars(10:19), ~if_else(. == 0, "NA", .))
1556898768091:test <- data_wide %>%
1556898768094:if_else(vars(10:19) == 0, "NA", .))
1556898771075:test <- data_wide %>%
1556898771076:if_else(vars(10:19) == 0, "NA", .)
1556898925234:?case_when
1556898987643:data_wide %>% mutate_all(vars(10:19), ~case_when(. == 0, TRUE ~ NA_real_))
1556899016882:data_wide %>% mutate_all(vars(10:19))
1556899037955:data_wide %>% mutate_all(~case_when(. == 0, TRUE ~ NA_real_))
1556899108459:data_wide %>% mutate_all(~case_when(. == 0, TRUE ~ NA_real_, .))
1556899120765:data_wide %>% mutate_all(~if_else(. == 0, TRUE ~ NA_real_, .))
1556899131492:data_wide %>% if_else(. == 0, TRUE ~ NA_real_, .)
1556899170781:# rowsums mit 0 sind NA's
1556899170782:data_wide[data_wide == 0] <- NA
1556899174845:# melt into long format => v.a. für statistische analysen wichtig
1556899174847:data_long <- melt(data_wide,  measure.vars = c("T0_phq9","T1_phq9", "T0_phq15", "T0_phq15", "T1_phq15", "T0_gad", "T1_gad", "ld", "ho", "zw", "vh", "motivation"))
1556899181900:source("mytheme.R")
1556899183813:detach("package:psych", unload=TRUE) # attention psych and ggplot do not well togheter
1556899184748:library(cowplot)
1556899184931:library(lme4)
1556899185156:library(nlme)
1556899302209:dat <- data_wide %>%
1556899302211:# filter(!duplicated(raw_data3$Patientencode)) %>%
1556899302213:dplyr::group_by(sex) %>%
1556899302216:dplyr::summarise(tot = n()) %>%
1556899302218:mutate(pct = tot / sum(tot))
1556899302226:ggplot(dat, aes(x = sex, y = pct)) +
1556899302228:geom_bar(stat = "identity") +
1556899302230:scale_y_continuous(labels = scales::percent) +
1556899302232:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25) +
1556899302235:mytheme
1556899312857:dat <- data_wide %>%
1556899312858:# filter(!duplicated(raw_data3$Patientencode)) %>%
1556899312859:dplyr::group_by(trans) %>%
1556899312860:dplyr::summarise(tot = n()) %>%
1556899312861:mutate(pct = tot / sum(tot))
1556899312885:ggplot(dat, aes(x = trans, y = pct)) +
1556899312886:geom_bar(stat = "identity") +
1556899312887:scale_y_continuous(labels = scales::percent) +
1556899312889:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25, size = 9) +
1556899312890:mytheme
1556899324166:# geschlecht, alter, bildung über alles----------
1556899324167:table(data_wide$sex)
1556899326669:psych::describe(data_wide$age, na.rm = T) # one missing => which(is.na(data_wide$age))
1556899332185:Hmisc::describe(data_wide$educ)
1556899587253:dat <- data_wide %>%
1556899587255:# filter(!duplicated(raw_data3$Patientencode)) %>%
1556899587257:dplyr::group_by(trans) %>%
1556899587259:dplyr::summarise(tot = n()) %>%
1556899587261:mutate(pct = tot / sum(tot))
1556899587270:ggplot(dat, aes(x = trans, y = pct)) +
1556899587272:geom_bar(stat = "identity") +
1556899587275:scale_y_continuous(labels = scales::percent) +
1556899587277:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25, size = 9) +
1556899587279:mytheme
1556899596229:dat <- data_wide %>%
1556899596230:# filter(!duplicated(raw_data3$Patientencode)) %>%
1556899596231:dplyr::group_by(sex) %>%
1556899596233:dplyr::summarise(tot = n()) %>%
1556899596234:mutate(pct = tot / sum(tot))
1556899596242:ggplot(dat, aes(x = sex, y = pct)) +
1556899596243:geom_bar(stat = "identity") +
1556899596244:scale_y_continuous(labels = scales::percent) +
1556899596246:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25) +
1556899596247:mytheme
1556899596394:dat <- data_wide %>%
1556899596395:# filter(!duplicated(raw_data3$Patientencode)) %>%
1556899596396:dplyr::group_by(trans) %>%
1556899596398:dplyr::summarise(tot = n()) %>%
1556899596399:mutate(pct = tot / sum(tot))
1556899596407:ggplot(dat, aes(x = trans, y = pct)) +
1556899596408:geom_bar(stat = "identity") +
1556899596409:scale_y_continuous(labels = scales::percent) +
1556899596411:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25, size = 9) +
1556899596412:mytheme
1556900488168:# subsample
1556900488175:dat <- data_wide[data_wide$condit == "Intervention",] # nehme nur personen aus der Intervention (telefongespräche)
1556900491786:# achtung abhängige datenpunkte => Wilcoxon-Test für zwei abhängige Stichproben
1556900491788:# achtung unterschiedliche gruppengrössen
1556900491790:# subsample
1556900491792:dat <- data_wide[data_wide$condit == "Intervention",] # nehme nur personen aus der Intervention (telefongespräche)
1556900491808:# h1b:schaue boxplots an--------
1556900491809:p1 <- ggplot(dat, aes(y = dat$T0_phq9 , x = trans)) +
1556900491811:geom_boxplot() # dont look very nice :(
1556900491855:ggplot(dat, aes(x = dat$T0_phq9 )) + geom_histogram()
1556900492034:p2 <- ggplot(dat, aes(y = dat$T1_phq9 , x = trans)) +
1556900492036:geom_boxplot() # looks good
1556900492066:plot_grid(p1, p2, ncol = 2)
1556900492732:# h1b:versuche das ganze zu plotten-------
1556900492735:pat <- ("T0_phq9|T1_phq9")
1556900492740:dat1 <- data_long[grepl(pat, data_long$variable) & data_long$condit == "Intervention",]
1556900492754:# h1b:balkendiagramm--------
1556900492758:ggplot(dat1, aes(x = as.character(variable), y = value, fill = trans)) +
1556900492759:geom_bar(stat = "identity", position = position_dodge())
1556900493101:# h1b:linienplot (mit mittelwerten)-------
1556900493104:dat2 <- dat1 %>%
1556900493105:group_by(variable, trans) %>%
1556900493107:summarise(mean_t = mean(value))
1556900493117:p <- ggplot(dat2, aes(x = as.character(variable), y = mean_t, shape = trans, group = trans)) +
1556900493118:geom_point() +
1556900493119:geom_line() +
1556900493121:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20))
1556900493157:# h1b:test over all--------
1556900493159:wilcox.test(dat$T0_phq9, dat$T1_phq9, paired = T) # über alles hoch signifikant
1556900493170:# h1b:test over group an time--------
1556900493174:dat1$variable <- as.character(dat1$variable)
1556900493185:av1 <- aov(dat1$value ~ dat1$variable * dat1$trans) # take long format
1556900493227:summary.lm(av1)
1556900493241:library(ggfortify) # dont look that bad
1556900493293:autoplot(av1)
1556900494089:boxplot(dat1$value~dat1$variable + dat1$trans)
1556900494294:# test with glm-------
1556900494296:lm1 <- lmer(dat1$value ~ dat1$variable * dat1$trans + (1|dat1$Patientencode))
1556900927104:dat2 <- dat1 %>%
1556900927115:group_by(variable, trans) %>%
1556900927116:summarise(mean_t = mean(value))
1556900927126:p <- ggplot(dat2, aes(x = as.character(variable), y = mean_t, shape = trans, group = trans)) +
1556900927128:geom_point() +
1556900927129:geom_line() +
1556900927130:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20))
1556900936751:p
1556900949681:View(dat2)
1556900957447:View(dat1)
1556901002039:# h1b:test over all
1556901002040:wilcox.test(dat$vriable, dat$trans, paired = T) # über alles hoch signifikant
1556901027730:View(dat)
1556915275414:View(dat)
1556915356371:View(data_wide)
1556915403927:filter(is.na(dat_wide$T1_phq15))
1556915409303:filter(is.na(data_wide$T1_phq15))
1556915417224:filter(data_wide, is.na(data_wide$T1_phq15))
1556915432809:miss_ <- filter(data_wide, is.na(data_wide$T1_phq15))
1556915435690:View(miss_)
1556915474856:miss_ <- filter(data_wide, is.na(data_wide$T1_phq9))
1556915477611:View(miss_)
1556915614453:apply(miss_, FUN = table())
1556915621255:apply(miss_, FUN = table)
1556915677925:apply(miss_, FUN = describe())
1556915686879:apply(miss_, FUN = describe(x))
1556915700612:lapply(miss_, FUN = describe(x))
1556915755078:lapply(miss_,1, FUN = describe(x))
1556915771921:apply(miss_,1, FUN = describe(x))
1556915798427:data(beavers)
1556915814337:head(t(beaver1))
1556915820302:t()
1556915836923:t(miss_)
1556915849210:apply(t(miss_),1, FUN = describe(x))
1556915863083:apply(t(miss_),1, FUN = describe)
1556915960565:miss_[ ,c(2:3,5:8)]
1556915982618:apply(t(miss_[ ,c(2:3,5:8)]),1, FUN = describe)
1556916201679:miss_ <- filter(data_wide, is.na(data_wide$T1_phq15))
1556916307193:miss_ <- filter(data_wide, is.na(data_wide$T1_gad))
1556916307483:apply(t(miss_[ ,c(2:3,5:8)]),1, FUN = describe)
1556917023871:# subsample
1556917023873:dat <- data_wide[data_wide$condit == "Intervention",] # nehme nur personen aus der Intervention (telefongespräche)
1556917026898:View(dat)
1556918574812:# subsample
1556918574813:dat <- data_wide[data_wide$condit == "Intervention" & is.na(data_wide$T1_phq9),] # nehme nur personen aus der Intervention (telefongespräche)
1556918578833:View(dat)
1556918592177:# subsample
1556918592179:dat <- data_wide[data_wide$condit == "Intervention" & !is.na(data_wide$T1_phq9),] # nehme nur personen aus der Intervention (telefongespräche)
1556918610668:table(dat$trans)
1556918646603:dat <- data_wide[data_wide$condit == "Intervention",]
1556918651993:table(dat$trans) # sehr ungleiche gruppengrössen
1556918711452:# subsample
1556918711453:dat <- data_wide[data_wide$condit == "Intervention" & !is.na(data_wide$T1_phq9),] # nehme nur personen aus der Intervention (telefongespräche)
1556918715223:View(dat)
1556918736878:ggplot(dat, aes(x = dat$T0_phq9 )) + geom_histogram()
1556918752063:# h1b:schaue boxplots an
1556918752064:p1 <- ggplot(dat, aes(y = dat$T0_phq9 , x = trans)) +
1556918752066:geom_boxplot() # dont look very nice :(
1556918753531:p2 <- ggplot(dat, aes(y = dat$T1_phq9 , x = trans)) +
1556918753533:geom_boxplot() # looks good
1556918755120:plot_grid(p1, p2, ncol = 2)
1556918840115:# h1b:schaue boxplots an
1556918840116:p1 <- ggplot(dat, aes(y = dat$T0_phq9 , x = trans)) +
1556918840118:geom_boxplot() +
1556918840119:scale_y_continuous(limits = c(0,20))# dont look very nice :(
1556918841486:p2 <- ggplot(dat, aes(y = dat$T1_phq9 , x = trans)) +
1556918841488:geom_boxplot() +
1556918841489:scale_y_continuous(limits = c(0,20))# looks good
1556918842942:plot_grid(p1, p2, ncol = 2)
1556918925650:dat1 <- data_long[grepl(pat, data_long$variable) & data_long$condit == "Intervention" & !is.na(data_long$variable),]
1556918928933:View(dat1)
1556918945883:dat1 <- data_long[grepl(pat, data_long$variable) & data_long$condit == "Intervention" & !is.na(data_long$value),]
1556918962896:# # h1b:balkendiagramm--------
1556918962898:ggplot(dat1, aes(x = as.character(variable), y = value, fill = trans)) +
1556918962899:geom_bar(stat = "identity", position = position_dodge())
1556919120532:# h1b:linienplot (mit mittelwerten)
1556919120534:dat2 <- dat1 %>%
1556919120535:group_by(variable, trans) %>%
1556919120537:summarise(mean_t = mean(value))
1556919122804:p <- ggplot(dat2, aes(x = as.character(variable), y = mean_t, shape = trans, group = trans)) +
1556919122806:geom_point() +
1556919122808:geom_line() +
1556919122809:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20))
1556919127107:p
1556919168589:# h1b:test over all
1556919168591:wilcox.test(dat$T0_phq9, dat$T1_phq9, paired = T) # über alles hoch signifikant
1556919209397:av1 <- aov(dat1$value ~ dat1$variable * dat1$trans) # take long format
1556919214514:# h1b:test over group an time
1556919214516:dat1$variable <- as.character(dat1$variable)
1556919214872:av1 <- aov(dat1$value ~ dat1$variable * dat1$trans) # take long format
1556919222663:summary.lm(av1)
1556919272619:library(ggfortify) # dont look that bad
1556919273065:autoplot(av1)
1556919288546:boxplot(dat1$value~dat1$variable + dat1$trans)
1556919454529:lm1 <- lmer(dat1$value ~ dat1$variable * dat1$trans + (1|dat1$Patientencode))
1556919459976:summary(lm1)
1556919490562:isSingular(lm1)
1556919503483:summary(lm1)
1556919713953:dat <- data_wide[!is.na(data_wide$value), ]
1556919721043:is.na(data_wide$value)
1556919729767:dat <- data_wide[!is.na(data_long$value), ]
1556919772456:View(dat)
1556919788369:View(data_long)
1556919830961:unique(data_long$variable)
1556919851725:unique(as.character(data_long$variable))
1556919926551:pat <- c("ld|ho|zw|vh")
1556919927087:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value), ]
1556919930658:View(dat)
1556919951737:t.test(dat$value, dat$trans)
1556919971759:aov(dat$value ~ dat$trans)
1556919984948:summary.lm(aov(dat$value ~ dat$trans))
1556920005103:summary.lm(aov(dat$value ~ dat$trans * dat$variable))
1556920058604:summary.lm(aov(dat$value ~ dat$trans * as.character(dat$variable)))
1556920244895:t(dat)
1556920375320:# subsample
1556920375322:pat <- c("ld|ho|zw|vh|motivation")
1556920376398:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value), ]
1556920409460:summary.lm(aov(dat[dat$variable == "ld",]$value ~ dat$trans * as.character(dat$variable)))
1556920442430:summary.lm(aov(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld"]$trans))
1556920451099:dat[dat$variable == "ld",]$value
1556920460604:dat[dat$variable == "ld"]$trans
1556920467602:summary.lm(aov(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans))
1556920566433:# ho:
1556920566436:summary.lm(aov(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",]$trans))
1556920679393:# zw:
1556920679395:summary.lm(aov(dat[dat$variable == "zw",]$value ~ dat[dat$variable == "zw",]$trans))
1556920743044:# vh:
1556920743046:summary.lm(aov(dat[dat$variable == "vh",]$value ~ dat[dat$variable == "vh",]$trans))
1556920770330:t.test(dat[dat$variable == "vh",]$value ~ dat[dat$variable == "vh",]$trans))
1556920778028:t.test(dat[dat$variable == "vh",]$value ~ dat[dat$variable == "vh",]$trans)
1556920808440:t.test(dat[dat$variable == "zw",]$value ~ dat[dat$variable == "zw",]$trans)
1556920977118:t.test(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans)
1556920982232:t.test(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",]$trans)
1556920987304:t.test(dat[dat$variable == "zw",]$value ~ dat[dat$variable == "zw",]$trans)
1556920990931:t.test(dat[dat$variable == "vh",]$value ~ dat[dat$variable == "vh",]$trans)
1556921046783:t.test(dat[dat$variable == "motivation",]$value ~ dat[dat$variable == "motivation",]$trans)
1556921259585:unique(data_long$variable)
1556921272415:unique(as.character(data_long$variable))
1556921309591:dat <- data_wide[data_wide$variable == "T0_gad" & data_wide$variable == "T1_gad",]
1556921321445:dat <- data_wide[data_wide$variable == "T0_gad" | data_wide$variable == "T1_gad",]
1556921325346:View(dat)
1556921333225:data_wide[data_wide$variable == "T0_gad" | data_wide$variable == "T1_gad",]
1556921346753:dat <- data_wide[data_wide$variable == "T0_gad" ,]
1556921378018:dat <- data_long[data_long$variable == "T0_gad" | data_long$variable == "T1_gad",]
1556921382674:View(dat)
1556921417969:dat <- data_long[data_long$variable == "T0_gad" | data_long$variable == "T1_gad" & !is.na(data_long$value),]
1556921466688:summary.lm(aov(dat$value ~ dat$variable * dat$trans))
1556921481927:summary.lm(aov(dat$value ~ as.character(dat$variable) * dat$trans))
1556921569198:lmer(dat$value ~ dat$variable * dat$trans + (1|dat$Patientencode))
1556921580673:lmer(dat$value ~ as.character(dat$variable) * dat$trans + (1|dat$Patientencode))
1556921629762:lmer(dat$value ~ as.character(dat$variable) * dat$trans)
1556921651229:lm2 <- lmer(dat$value ~ as.character(dat$variable) * dat$trans + (1|dat$Patientencode))
1556921718406:View(dat)
1556921750324:dat$variable <- as.character(dat$variable)
1556921752156:lm2 <- lmer(dat$value ~ as.character(dat$variable) * dat$trans + (1|dat$Patientencode))
1556921769022:str(dat)
1556922205125:summary.lm(aov(dat$value ~ as.character(dat$variable) * dat$trans + Error(1|dat$Patientencode)))
1556922438946:dat <- data_long[data_long$variable == "T0_phq15" & data_long$variable == "T1_phq15" & !is.na(data_long$value)]
1556922447563:dat <- data_long[data_long$variable == "T0_phq15" & data_long$variable == "T1_phq15" & !is.na(data_long$value), ]
1556922480885:dat <- data_long[data_long$variable == "T0_phq15" | data_long$variable == "T1_phq15" & !is.na(data_long$value), ]
1556922483818:View(dat)
1556987972359:# h1b:versuche das ganze zu plotten
1556987972379:pat <- ("T0_phq9|T1_phq9")
1556987972798:dat1 <- data_long[grepl(pat, data_long$variable) & data_long$condit == "Intervention" & !is.na(data_long$value),]
1556987976194:View(dat1)
1556988078071:t <- group_by(dat1, Patientencode)
1556988083569:View(t)
1556988105297:t <- group_by(dat1, Patientencode) %>% summarise(occur = n())
1556988108231:View(t)
1556988176655:dat2 <- group_by(dat1, Patientencode) %>%
1556988176657:summarise(occur = n()) %>%
1556988176658:filter(occur == 2) %>%
1556988176659:left_join(., dat1, by = "Patientencode")
1556988179123:View(dat2)
1556988208106:# # h1b:balkendiagramm--------
1556988208108:ggplot(dat1, aes(x = as.character(variable), y = value, fill = trans)) +
1556988208109:geom_bar(stat = "identity", position = position_dodge())
1556988250955:# h1b:linienplot (mit mittelwerten)
1556988250957:dat2 <- dat2 %>%
1556988250958:group_by(variable, trans) %>%
1556988250959:summarise(mean_t = mean(value))
1556988256350:# # h1b:balkendiagramm--------
1556988256352:ggplot(dat2, aes(x = as.character(variable), y = value, fill = trans)) +
1556988256353:geom_bar(stat = "identity", position = position_dodge())
1556988273107:dat2 <- group_by(dat1, Patientencode) %>%
1556988273108:summarise(occur = n()) %>%
1556988273109:filter(occur == 2) %>%
1556988273111:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1556988274774:# # h1b:balkendiagramm--------
1556988274776:ggplot(dat2, aes(x = as.character(variable), y = value, fill = trans)) +
1556988274777:geom_bar(stat = "identity", position = position_dodge())
1556988322354:# h1b:test over group an time
1556988322356:dat2$variable <- as.character(dat2$variable)
1556988331922:av1 <- aov(dat2$value ~ dat2$variable * dat2$trans) # die einzelnen personen sind noch nicht verlinkt
1556988333122:summary.lm(av1)
1556988360514:# # test with glm
1556988360516:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans + (1|dat2$Patientencode))
1556988361424:summary(lm1)
1556988405234:isSingular(lm1) # sieht gut aus
1556988426219:# subsample
1556988426221:pat <- c("ld|ho|zw|vh|motivation")
1556988428290:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value), ]
1556988430801:View(dat)
1556988509076:# überprüfe ob auch alle datenpunkte drin sind
1556988509077:t <- dat %>%
1556988509079:group_by(Patientencode) %>%
1556988509080:summarise(occur = n()) %>%
1556988509081:filter(occur == 5)
1556988551736:# subsample
1556988551738:dat <- data_long[data_long$variable == "T0_gad" | data_long$variable == "T1_gad" & !is.na(data_long$value),]
1556988555425:View(dat)
1556988603101:t <- dat %>%
1556988603102:group_by(Patientencode) %>%
1556988603104:summarise(occur = n()) %>%
1556988603105:filter( occur == 2)
1556988645851:# überprüfe ob alle patienten auch zwei datenpunkte haben => rest weg
1556988645852:t <- dat %>%
1556988645854:group_by(Patientencode) %>%
1556988645855:summarise(occur = n()) %>%
1556988645856:filter( occur == 2) %>%
1556988645858:left_join(., dat, by = "Patientencode")
1556988665267:# überprüfe ob alle patienten auch zwei datenpunkte haben => rest weg
1556988665268:dat <- dat %>%
1556988665271:group_by(Patientencode) %>%
1556988665273:summarise(occur = n()) %>%
1556988665274:filter( occur == 2) %>%
1556988665276:left_join(., dat, by = "Patientencode")
1556988669149:dat$variable <- as.character(dat$variable)
1556988671965:lm2 <- lmer(dat$value ~ as.character(dat$variable) * dat$trans + (1|dat$Patientencode)) # wieso dieser fehler??
1556988687250:summary(lm2)
1556988763694:isSingular(lm2)
1556988778677:dat <- data_long[data_long$variable == "T0_phq15" | data_long$variable == "T1_phq15" & !is.na(data_long$value), ]
1556988842382:View(dat)
1556988880962:# scheint viele doppelten einträge => gründe
1556988880964:dat <- data_long[data_long$variable == "T0_phq15" & data_long$variable == "T1_phq15" & !is.na(data_long$value), ]
1556988902315:duplicated(dat)
1556988915860:t <- group_by(dat, Patientencode) %>%
1556988915862:summarise(occur =n())
1556988922373:# scheint viele doppelten einträge => gründe
1556988922374:dat <- data_long[data_long$variable == "T0_phq15" | data_long$variable == "T1_phq15" & !is.na(data_long$value), ]
1556988923370:duplicated(dat)
1556988932690:sum(duplicated(dat))
1556988942475:t <- group_by(dat, Patie
1556988947285:View(t)
1556988953464:<- group_by(dat, Patientencode) %>%
1556988971269:t <- group_by(dat, Patientencode) %>%
1556988971272:summarise(occur =n())# %>%
1556988974610:View(t)
1557037501501:# # h1b:balkendiagramm--------
1557037501504:# überprüfe wie balkendiagramm zustande kommt
1557037501508:ggplot(dat2, aes(x = as.character(variable), y = value, fill = trans)) +
1557037501512:geom_bar(stat = "identity", position = position_dodge())
1557037542638:aggregate(dat2$value, FUN = mean())
1557037546739:aggregate(dat2$value, FUN = mean)
1557037551583:aggregate(dat2, value, FUN = mean)
1557037557405:aggregate(dat2, dat2$value, FUN = mean)
1557037582792:aggregate(dat2$variable ~ dat2$value, FUN = mean)
1557037597389:aggregate(dat2$value ~ dat2$variable, FUN = mean)
1557037614660:aggregate(dat2$value ~ dat2$variable + dat2$trans, FUN = mean)
1557037640187:aggregate(dat2$value ~ dat2$variable + dat2$trans, FUN = median())
1557037644064:aggregate(dat2$value ~ dat2$variable + dat2$trans, FUN = median)
1557037653034:aggregate(dat2$value ~ dat2$variable + dat2$trans, FUN = count)
1557037704310:group_by(dat2, variable, trans) %>% summarise(tot = n())
1557037714620:group_by(dat2, variable, trans) %>% summarise(tot = count)
1557037716894:group_by(dat2, variable, trans) %>% summarise(tot = count())
1557037724343:group_by(dat2, variable, trans) %>% count()
1557037738368:group_by(dat2, variable, trans) %>% summarise(tot = sum(value)
1557037739652:)
1557037772017:group_by(dat2, variable, trans) %>% summarise(tot = mediaan(value)
1557037774914:)
1557037780091:group_by(dat2, variable, trans) %>% summarise(tot = median(value))
1557037829064:# # h1b:balkendiagramm--------
1557037829067:# überprüfe wie balkendiagramm zustande kommt
1557037829069:ggplot(dat2, aes(x = as.character(variable), y = value, fill = trans)) +
1557037829070:geom_bcol(stat = "identity", position = position_dodge())
1557037832934:# # h1b:balkendiagramm--------
1557037832935:# überprüfe wie balkendiagramm zustande kommt
1557037832936:ggplot(dat2, aes(x = as.character(variable), y = value, fill = trans)) +
1557037832938:geom_col(stat = "identity", position = position_dodge())
1557037993598:aggregate(dat2$value ~ dat2$variable + dat2$trans, FUN = max)
1557038091830:# subsample
1557038091832:dat <- data_wide[data_wide$condit == "Intervention" & !is.na(data_wide$T1_phq9),] # nehme nur personen aus der Intervention (telefongespräche)
1557038094241:View(dat)
1557038133948:table(dat$trans) # sehr ungleiche gruppengrössen
1557038222752:# h1b:test over group an time
1557038222754:dat2$variable <- as.character(dat2$variable)
1557038223863:av1 <- aov(dat2$value ~ dat2$variable * dat2$trans) # die einzelnen personen sind noch nicht verlinkt
1557038225018:summary.lm(av1)
1557038245040:av1 <- aov(dat2$value ~ dat2$variable * dat2$trans + Error(Patientencode)) # die einzelnen personen sind noch nicht verlinkt
1557038252850:av1 <- aov(dat2$value ~ dat2$variable * dat2$trans + Error(dat2$Patientencode)) # die einzelnen personen sind noch nicht verlinkt
1557038254233:summary.lm(av1)
1557038260723:av1 <- aov(dat2$value ~ dat2$variable * dat2$trans + Error(1 + dat2$Patientencode)) # die einzelnen personen sind noch nicht verlinkt
1557038261653:summary.lm(av1)
1557038267730:summary(av1)
1557038341908:# test with glm
1557038341910:# schaue nochmals nach wie man den random effect interpretiert
1557038341911:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans + (1|dat2$Patientencode))
1557038344485:# überprüfe nochmals die modell-güte
1557038344486:library(ggfortify)
1557038344950:autoplot(lm1)
1557038374932:# überprüfe nochmals die modell-güte
1557038374933:av1 <- aov(dat2$value ~ dat2$variable * dat2$trans)
1557038378302:autoplot(av1)
1557038395025:boxplot(dat2$value~dat2$variable + dat2$trans)
1557039150142:# überprüfe nochmals die modell-güte
1557039150143:av1 <- aov(value ~ $variable * trans + Error(Patientencode/trans), data = dat2)
1557039157842:# überprüfe nochmals die modell-güte
1557039157843:av1 <- aov(value ~ variable * trans + Error(Patientencode/trans), data = dat2)
1557039166209:summary(av1)
1557039189924:# überprüfe nochmals die modell-güte
1557039189926:av1 <- aov(value ~ variable * trans + Error(Patientencode), data = dat2)
1557039190609:summary(av1)
1557039299739:# überprüfe nochmals die modell-güte
1557039299741:av1 <- aov(value ~ variable * trans + Error(Patientencode/variable), data = dat2)
1557039300355:summary(av1)
1557039512041:library(ggfortify)
1557039512271:autoplot(av1)
1557039540921:# überprüfe nochmals die modell-güte
1557039540922:av1 <- aov(value ~ variable * trans, data = dat2)
1557039544211:av2 <- aov(value ~ variable * trans + Error(Patientencode/variable), data = dat2)
1557039555118:summary(lm1)
1557040651504:library(brms)
1557040694117:brm(value ~ variable * trans + (1|Patientencode), data = dat2)
1557040768046:# überprüfe ob auch alle datenpunkte drin sind
1557040768048:t <- dat %>%
1557040768049:group_by(Patientencode) %>%
1557040768051:summarise(occur = n()) %>%
1557040768052:filter(occur == 5)
1557040768065:t <- dat %>%
1557040768067:group_by(Patientencode) %>%
1557040768068:summarise(occur = n())
1557040923557:# überprüfe ob auch alle datenpunkte drin sind
1557040923558:t <- dat %>%
1557040923560:group_by(Patientencode) %>%
1557040923561:summarise(occur = n()) %>%
1557040923562:filter(occur == 5)
1557040929781:t <- dat %>%
1557040929783:group_by(Patientencode) %>%
1557040929784:summarise(occur = n())
1557040934262:# subsample
1557040934263:pat <- c("ld|ho|zw|vh|motivation")
1557040934732:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value), ]
1557040938836:t <- dat %>%
1557040938838:group_by(Patientencode) %>%
1557040938839:summarise(occur = n())
1557040944712:View(t)
1557040982765:# überprüfe ob auch alle datenpunkte drin sind
1557040982767:t <- dat %>%
1557040982768:group_by(Patientencode) %>%
1557040982770:summarise(occur = n()) %>%
1557040982772:mutate(occur = ifelse(occur == 5, T, F))
1557040995586:sum(t$occur)
1557041023516:table(dat$trans)
1557041054848:table(unique(dat$trans))
1557041117829:table(unique(dat[dat$Patientencode,]$trans))
1557041139998:dat[dat$Patientencode,]$trans
1557041154263:dat[unique(dat$Patientencode), ]$trans
1557041159418:dat[unique(dat$Patientencode), ]
1557041171015:dat[unique(dat$Patientencode), ]
1557041179959:dat$Patientencode
1557041191817:unique(dat$Patientencode)
1557041202230:dat[unique(dat$Patientencode),]
1557041249693:# überprüfe ob auch alle datenpunkte drin sind
1557041249695:t <- dat %>%
1557041249696:group_by(Patientencode, trans) %>%
1557041249698:summarise(occur = n()) %>%
1557041249699:mutate(occur = ifelse(occur == 5, T, F))
1557041251739:sum(t$occur) # 53 personen
1557041263232:table(t$trans)
1557041282018:# ld: n.s.
1557041282020:summary.lm(aov(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans))
1557041303284:dat[dat$variable == "ld",]$value
1557041307899:t.test(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans)
1557041355860:aggregate(value ~ variable, FUN = mean, data = dat)
1557041390013:# schaue die mittelwerte an
1557041390014:aggregate(dat$value ~ dat$variable + dat$trans, FUN = mean)
1557041425628:h
1557041525306:t.test(dat[dat$variable == "vh",]$value ~ dat[dat$variable == "vh",]$trans)
1557041543749:?t.test
1557041561605:t.test(dat[dat$variable == "zw",]$value ~ dat[dat$variable == "zw",]$trans, paired = T)
1557041578436:dat[dat$variable == "zw",]$value
1557041584099:dat[dat$variable == "zw",]$trans
1557041711525:dat <- data_long[grepl(pat, data_long$variable), ]
1557041730453:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1557041734690:View(dat)
1557041747642:#glmm oder anova mit interaction
1557041747644:pat <- ("T0_phq9|T1_phq9")
1557041747928:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1557041750065:View(dat)
1557041805526:# nehme nur die mit zwei einträge (t0 und t1)
1557041805528:dat2 <- group_by(dat, Patientencode) %>%
1557041805531:summarise(occur = n()) %>%
1557041805532:filter(occur == 2) %>%
1557041805534:left_join(., dat, by = "Patientencode")
1557042015431:# nehme nur die mit zwei einträge (t0 und t1)
1557042015432:dat2 <- group_by(dat, Patientencode) %>%
1557042015434:summarise(occur = n()) %>%
1557042015435:filter(occur == 2) %>%
1557042015437:left_join(., data_wide, by = "Patientencode") # 46 personen
1557042018779:View(dat2)
1557042163901:# subsample
1557042163902:dat <- data_long[data_long$variable == "T0_gad" | data_long$variable == "T1_gad" & !is.na(data_long$value),]
1557042165908:# überprüfe ob alle patienten auch zwei datenpunkte haben => rest weg
1557042165910:dat <- dat %>%
1557042165911:group_by(Patientencode) %>%
1557042165912:summarise(occur = n()) %>%
1557042165914:filter( occur == 2) %>%
1557042165915:left_join(., dat, by = "Patientencode")
1557042186490:table(dat$Patientencode)
1557042212332:# überprüfe ob alle patienten auch zwei datenpunkte haben => rest weg
1557042212336:dat <- dat %>%
1557042212338:group_by(Patientencode, trans) %>%
1557042212339:summarise(occur = n()) %>%
1557042212341:filter( occur == 2) %>%
1557042212342:left_join(., dat, by = "Patientencode") # 45 personen
1557042217653:table(dat$trans)
1557042222363:# überprüfe ob alle patienten auch zwei datenpunkte haben => rest weg
1557042222365:dat <- dat %>%
1557042222366:group_by(Patientencode, trans) %>%
1557042222368:summarise(occur = n()) %>%
1557042222369:filter( occur == 2) %>%
1557042222370:left_join(., dat, by = "Patientencode") # 45 personen
1557042228772:# subsample
1557042228773:dat <- data_long[data_long$variable == "T0_gad" | data_long$variable == "T1_gad" & !is.na(data_long$value),]
1557042230550:# überprüfe ob alle patienten auch zwei datenpunkte haben => rest weg
1557042230552:dat <- dat %>%
1557042230553:group_by(Patientencode, trans) %>%
1557042230555:summarise(occur = n()) %>%
1557042230557:filter( occur == 2) %>%
1557042230559:left_join(., dat, by = "Patientencode") # 45 personen
1557042232168:table(dat$trans)
1557042238236:View(dat)
1557042255530:# subsample
1557042255532:dat <- data_long[data_long$variable == "T0_gad" | data_long$variable == "T1_gad" & !is.na(data_long$value),]
1557042256904:# überprüfe ob alle patienten auch zwei datenpunkte haben => rest weg
1557042256909:dat1 <- dat %>%
1557042256914:group_by(Patientencode, trans) %>%
1557042256915:summarise(occur = n()) %>%
1557042256916:filter( occur == 2) %>%
1557042256918:left_join(., dat, by = "Patientencode") # 45 personen
1557042259367:View(dat1)
1557042282108:# überprüfe ob alle patienten auch zwei datenpunkte haben => rest weg
1557042282109:dat1 <- dat %>%
1557042282111:group_by(Patientencode, trans) %>%
1557042282116:summarise(occur = n()) %>%
1557042282119:filter( occur == 2) %>%
1557042282120:left_join(., dat, by = c("Patientencode", "trans")) # 45 personen
1557042285420:View(dat1)
1557042290167:table(dat$trans)
1557042293487:table(dat1$trans)
1557042307395:dat1 <- dat %>%
1557042307399:group_by(Patientencode, trans) %>%
1557042307400:summarise(occur = n())
1557042309272:table(dat1$trans)
1557042380645:aggregate(value ~ variable + trans, FUN = mean, data = dat1)
1557042386749:# überprüfe ob alle patienten auch zwei datenpunkte haben => rest weg
1557042386751:dat1 <- dat %>%
1557042386753:group_by(Patientencode, trans) %>%
1557042386755:summarise(occur = n()) %>%
1557042386756:filter( occur == 2) %>%
1557042386761:left_join(., dat, by = c("Patientencode", "trans")) # 45 personen
1557042388384:aggregate(value ~ variable + trans, FUN = mean, data = dat1)
1557042476406:# modelle
1557042476408:av3 <- aov(value ~ variable * trans + Error(Patientencode/variable), data = dat1)
1557042507319:# modelle
1557042507320:dat1$variable <- as.character(dat1$variable) # probleme mit factoren => versuche noch zu ändern
1557042508927:av3 <- aov(value ~ variable * trans + Error(Patientencode/variable), data = dat1)
1557042524779:summary.lm(av3)
1557042528822:summary(av3)
1557042563404:lm3 <- lmer(dat1$value ~ dat1$variable * dat1$trans + (1|dat1$Patientencode))
1557042570431:isSingular(lm3)
1557042595392:summary(lm3)
1557042730129:dat <- data_long[grepl(pat, data_long$variable) & is.na(data_long$value), ]
1557042732309:# subsample
1557042732310:# scheint viele doppelten einträge => gründe
1557042732312:pat = c("T0_phq15|T1_phq15")
1557042732638:dat <- data_long[grepl(pat, data_long$variable) & is.na(data_long$value), ]
1557042738075:View(dat)
1557042749521:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value), ]
1557042754998:sum(duplicated(dat)) # 54 doppelte einträge??
1557042757906:View(dat)
1557042781627:dat <- data_long[grepl(pat, data_long$variable), ]
1557042785065:View(dat)
1557042801883:str(data_long)
1557042824652:levels(data_long$variable)
1557042866847:# melt into long format => v.a. für statistische analysen wichtig
1557042866848:data_long <- melt(data_wide,  measure.vars = c("T0_phq9","T1_phq9", "T0_phq15", "T1_phq15", "T0_gad", "T1_gad", "ld", "ho", "zw", "vh", "motivation"))
1557042909277:# achtung variable sind factoren => parse to characters
1557042909279:data_long$variable <- parse_character(data_long$variable)
1557042919264:# achtung variable sind factoren => parse to characters
1557042919265:data_long$variable <- as.character(data_long$variable)
1557042931859:unique(data_long$variable)
1557042945154:# subsample
1557042945156:# scheint viele doppelten einträge => gründe
1557042945157:pat = c("T0_phq15|T1_phq15")
1557042962277:dat <- data_long[grepl(pat, data_long$variable) &! is.na(dat$value), ]
1557042965158:sum(duplicated(dat)) # 54 doppelte einträge??
1557042977852:t <- group_by(dat, Patientencode) %>%
1557042977856:summarise(occur =n())# %>%
1557042982460:View(t)
1557043025081:dat1 <- group_by(dat, Patientencode, trans) %>%
1557043025083:summarise(occur =n())  %>%
1557043025087:filter(occur == 2) %>%
1557043025088:left_join(, dat, by = "Patientencode")
1557043034745:dat1 <- group_by(dat, Patientencode, trans) %>%
1557043034747:summarise(occur =n())  %>%
1557043034749:filter(occur == 2) %>%
1557043034751:left_join(., dat, by = "Patientencode")
1557043059625:# schaue daten an
1557043059627:table(dat$trans)
1557043071742:# schaue daten an
1557043071745:table(dat1$trans)
1557043080620:dat1 <- group_by(dat, Patientencode, trans) %>%
1557043080622:summarise(occur =n())
1557043082281:# schaue daten an
1557043082289:table(dat1$trans)
1557043092996:# schaue daten an
1557043093000:table(dat1$trans)*2
1557043101477:# schaue daten an
1557043101479:sum(table(dat1$trans)*2)
1557043138906:dat1 <- group_by(dat, Patientencode, trans) %>%
1557043138907:summarise(occur = n())  %>%
1557043138909:filter(occur == 2)
1557043140527:# schaue daten an
1557043140529:table(dat1$trans)
1557043149980:# schaue daten an
1557043149983:sum(table(dat1$trans))
1557043155625:dat1 <- group_by(dat, Patientencode, trans) %>%
1557043155627:summarise(occur = n())  %>%
1557043155628:filter(occur == 2) %>%
1557043155630:left_join(., dat, by = "Patientencode")
1557043224221:aggregate(value ~ variable + trans, FUN = mean, data = dat1)
1557043229205:dat1 <- group_by(dat, Patientencode, trans) %>%
1557043229206:summarise(occur = n())  %>%
1557043229208:filter(occur == 2) %>%
1557043229210:left_join(., dat, by = "Patientencode") # 44 patienten; 13_PR und 31_SR
1557043230704:aggregate(value ~ variable + trans, FUN = mean, data = dat1)
1557043236224:View(dat1)
1557043250031:dat1 <- group_by(dat, Patientencode, trans) %>%
1557043250037:summarise(occur = n())  %>%
1557043250039:filter(occur == 2) %>%
1557043250041:left_join(., dat, by = c("Patientencode", "trans")) # 44 patienten; 13_PR und 31_SR
1557043251656:aggregate(value ~ variable + trans, FUN = mean, data = dat1)
1557043357673:lm4 <- lmer(value ~ variable * trans + (1|Patientencode), data = dat1)
1557043368122:summary(av4)
1557043370515:# modelle
1557043370517:av4 <- aov(value ~ variable * trans + Error(Patientencode/variable), data = dat1)
1557043371233:summary(av4)
1557043394577:lm4 <- glmer(value ~ variable * trans + (1|Patientencode), data = dat1)
1557043404067:lm4 <- lmer(value ~ variable * trans + (1|Patientencode), data = dat1)
1557043404981:summary(lm4)
1557043609763:# h1b:versuche das ganze zu plotten
1557043609765:pat <- ("T0_phq9|T1_phq9")
1557043609968:dat1 <- data_long[grepl(pat, data_long$variable) & data_long$condit == "Intervention" & !is.na(data_long$value),]
1557043611140:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1557043611144:dat2 <- group_by(dat1, Patientencode) %>%
1557043611149:summarise(occur = n()) %>%
1557043611150:filter(occur == 2) %>%
1557043611153:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1557043629909:# h1b:linienplot (mit mittelwerten)
1557043629914:dat2 <- dat2 %>%
1557043629918:group_by(variable, trans) %>%
1557043629919:summarise(mean_t = mean(value))
1557043633353:p <- ggplot(dat2, aes(x = as.character(variable), y = mean_t, shape = trans, group = trans)) +
1557043633355:geom_point() +
1557043633357:geom_line() +
1557043633358:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20))
1557043634368:p
1557043653262:p <- ggplot(dat2, aes(x = as.character(variable), y = mean_t, shape = trans, group = trans)) +
1557043653263:geom_point(size= 2) +
1557043653265:geom_line(size = 1.5) +
1557043653266:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20))
1557043666745:p
1557043789482:ggplot(dat2, aes(x = variable, y = mean_t, shape = trans, group = trans)) +
1557043789485:geom_point(size= 2) +
1557043789487:geom_line(size = 1.5) +
1557043789488:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557043789490:xlab("Mittelwerte der Summenscore") +
1557043789491:ylab("")
1557043919281:ggplot(dat2, aes(x = variable, y = mean_t, shape = trans, group = trans)) +
1557043919282:geom_point(size= 2) +
1557043919284:geom_line(size = 1.5) +
1557043919289:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557043919290:ylab("Mittelwerte der Summenscore") +
1557043919292:xlab("Zeitpunk t0 und t1") +
1557043919293:guides(fill = guide_legend(title = "Überweisungsquelle")) +
1557043919295:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1557043919296:mytheme
1557043940848:ggplot(dat2, aes(x = variable, y = mean_t, shape = trans, group = trans)) +
1557043940851:geom_point(size= 2) +
1557043940853:geom_line(size = 1.5) +
1557043940856:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557043940857:ylab("Mittelwerte der Summenscore") +
1557043940859:xlab("Zeitpunk t0 und t1") +
1557043940860:guides(group = guide_legend(title = "Überweisungsquelle")) +
1557043940862:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1557043940863:mytheme
1557043953193:ggplot(dat2, aes(x = variable, y = mean_t, shape = trans, group = trans)) +
1557043953196:geom_point(size= 2) +
1557043953197:geom_line(size = 1.5) +
1557043953199:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557043953200:ylab("Mittelwerte der Summenscore") +
1557043953203:xlab("Zeitpunk t0 und t1") +
1557043953207:guides(shape = guide_legend(title = "Überweisungsquelle")) +
1557043953212:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1557043953215:mytheme
1557044020571:ggplot(dat2, aes(x = variable, y = mean_t, shape = trans, group = trans)) +
1557044020572:geom_point(size= 2) +
1557044020573:geom_line(size = 1.5, linetype = c(2,3)) +
1557044020575:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557044020577:ylab("Mittelwerte der Summenscore") +
1557044020578:xlab("Zeitpunk t0 und t1") +
1557044020581:guides(shape = guide_legend(title = "Überweisungsquelle")) +
1557044020583:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1557044020584:mytheme
1557044052195:ggplot(dat2, aes(x = variable, y = mean_t, linetype =trans ,shape = trans, group = trans)) +
1557044052196:geom_point(size= 2) +
1557044052198:geom_line(size = 1.5) +
1557044052200:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557044052201:ylab("Mittelwerte der Summenscore") +
1557044052203:xlab("Zeitpunk t0 und t1") +
1557044052204:guides(shape = guide_legend(title = "Überweisungsquelle")) +
1557044052206:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1557044052207:mytheme
1557044095552:ggplot(dat2, aes(x = variable, y = mean_t, linetype =trans ,shape = trans, group = trans)) +
1557044095553:geom_point(size= 2) +
1557044095555:geom_line(size = 1.5) +
1557044095556:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557044095558:ylab("Mittelwerte der Summenscore") +
1557044095559:xlab("Zeitpunk t0 und t1") +
1557044095561:guides(linetype = guide_legend(title = "Überweisungsquelle"), shape = F) +
1557044095562:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1557044095564:mytheme
1557044581168:# another plot
1557044581169:ggplot(dat2, aes(x = variable, y = mean_t, linetype =trans ,shape = trans, group = trans)) +
1557044581171:geom_point(size= 15, size = 4) +
1557044581172:geom_errorbar(aes(ymin  =  lower.CL,
1557044581174:ymax  =  upper.CL),
1557044581175:width =  0.2,
1557044581177:size  =  0.7)
1557044626507:# posthoc tests
1557044626508:CLD = cld(av2,
1557044626510:alpha   = 0.05,
1557044626511:Letters = letters,  ### Use lower-case letters for .group
1557044626512:adjust  = "tukey")
1557044638446:library(multcompView)
1557044643967:library(multcomp)
1557044687111:# posthoc tests
1557044687113:TukeyHSD(av2)
1557044693012:# posthoc tests
1557044693014:TukeyHSD(av1)
1557044819126:# another plot
1557044819128:ggplot(dat2, aes(x = variable, y = mean_t, linetype =trans ,shape = trans, group = trans)) +
1557044819129:geom_point(size= 15, size = 4) +
1557044819131:stat_summary(fun.data = "mean_cl_boot", colour = "red", size = 2)
1557045082841:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1557045082843:dat2 <- group_by(dat1, Patientencode) %>%
1557045082845:summarise(occur = n()) %>%
1557045082847:filter(occur == 2) %>%
1557045082848:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1557045259635:install.packages("lsmeand")
1557045264497:install.packages("lsmeans")
1557045283041:ggplot(dat2, aes(x = variable, y = mean_t)) +
1557045283043:geom_point(size= 15, size = 4) +
1557045283045:stat_summary(fun.data = "mean_cl_boot", colour = "red", size = 2)
1557045336738:# another plot
1557045336740:# sample
1557045336742:pl <- dat2 %>%
1557045336743:group_by(variable, trans) %>%
1557045336747:summarise(mean_ = mean(value),
1557045336748:mean_ls = lsmean(value)) %>%
1557045336749:mutate(xlab = paste(trans, variable, sep = "_"))
1557045343148:# another plot
1557045343150:# sample
1557045343151:pl <- dat2 %>%
1557045343152:group_by(variable, trans) %>%
1557045343154:summarise(mean_ = mean(value),
1557045343155:mean_ls = lsmeans(value)) %>%
1557045343157:mutate(xlab = paste(trans, variable, sep = "_"))
1557045360714:lsmeans::lsmeans(av2)
1557045378913:lsmeans::lsmeans(av2, ~ variable)
1557045394725:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1557045394728:dat2 <- group_by(dat1, Patientencode) %>%
1557045394730:summarise(occur = n()) %>%
1557045394732:filter(occur == 2) %>%
1557045394734:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1557045399631:av2 <- aov(value ~ variable * trans + Error(Patientencode/variable), data = dat2)
1557045406627:lsmeans::lsmeans(av2, ~ variable)
1557045442623:marginal <- lsmeans::lsmeans(av2, ~ variable)
1557045451243:install.packages("multcompView")
1557045464055:library(multcompView)
1557045497874:pairs(marginal, adjust = "tukey")
1557045552006:cld(marginal,
1557045552007:alpha   = 0.05,
1557045552009:Letters = letters,  ### Use lower-case letters for .group
1557045552010:adjust  = "tukey")
1557045585199:# another plot
1557045585201:# sample
1557045585202:pl <- dat2 %>%
1557045585204:group_by(variable, trans) %>%
1557045585205:summarise(mean_ = mean(value)) %>%
1557045585207:mutate(xlab = paste(trans, variable, sep = "_"))
1557045602807:marginal <- lsmeans::lsmeans(av2, ~ variable)
1557045607447:marginal
1557045618576:View(pl)
1557045644307:summary(av2)
1557045664313:summary(av1)
1557045673745:summary.lm(av1)
1557045687870:marginal <- lsmeans::lsmeans(av1, ~ variable)
1557045693036:marginal
1557045719919:ggplot(pl, aes(x = xlab, y = mean_)) +
1557045719924:geom_point(size= 15, size = 4) +
1557045719926:stat_summary(fun.data = "mean_cl_boot", colour = "red", size = 2)
1557045758731:ggplot(pl, aes(x = xlab, y = mean_)) +
1557045758733:geom_point(size= 15, size = 4) +
1557045758737:stat_summary(fun.data = "mean_cl_boot", colour = "red", size = 2) +
1557045758738:geom_errorbar(aes(ymin  =  lower.CL,
1557045758742:ymax  =  upper.CL),
1557045758749:width =  0.2,
1557045758752:size  =  0.7)
1557045777139:ggplot(pl, aes(x = xlab, y = mean_)) +
1557045777143:geom_point(shape= 15, size = 4) +
1557045777145:stat_summary(fun.data = "mean_cl_boot", colour = "red", size = 2) +
1557045777147:geom_errorbar(aes(ymin  =  lower.CL,
1557045777148:ymax  =  upper.CL),
1557045777150:width =  0.2,
1557045777151:size  =  0.7)
1557045830053:ggplot(pl, aes(x = xlab, y = mean_)) +
1557045830055:geom_point(shape= 15, size = 4) +
1557045830056:stat_summary(fun.data = "mean_cl_boot", colour = "red", size = 2)
1557045851399:ggplot(pl, aes(x = xlab, y = mean_)) +
1557045851402:geom_point(shape= 15, size = 4) +
1557045851404:stat_summary(fun.data = "mean_cl_boot", colour = "red", size = 2) +
1557045851405:scale_y_continuous(limits = c(0,20))
1557045906271:# another plot
1557045906291:# sample
1557045906318:pl <- dat2 %>%
1557045906320:group_by(variable, trans) %>%
1557045906324:summarise(tot = sum(value)) %>%
1557045906326:mutate(xlab = paste(trans, variable, sep = "_"))
1557045909042:View(pl)
1557045938693:# another plot
1557045938694:# sample
1557045938696:pl <- dat2 %>%
1557045938699:mutate(xlab = paste(trans, variable, sep = "_"))
1557046103249:stat_summary(fun.data = "mean_cl_boot", gwom = "errorbar", size = .7) +
1557046103251:scale_y_continuous(limits = c(0,20))
1557046111895:ggplot(pl, aes(x = xlab, y = value)) +
1557046111897:geom_point(shape= 15, size = 4) +
1557046111898:stat_summary(fun.y = mean, geom = "bar") +
1557046111900:stat_summary(fun.data = "mean_cl_boot", gwom = "errorbar", size = .7) +
1557046111901:scale_y_continuous(limits = c(0,20))
1557046137137:ggplot(pl, aes(x = xlab, y = value)) +
1557046137139:geom_point(shape= 15, size = 4) +
1557046137140:stat_summary(fun.y = mean, geom = "point") +
1557046137142:stat_summary(fun.data = "mean_cl_boot", gwom = "errorbar", size = .7) +
1557046137143:scale_y_continuous(limits = c(0,20))
1557046181763:ggplot(pl, aes(x = xlab, y = value)) +
1557046181766:geom_point(shape= 15, size = 4) +
1557046181768:stat_summary(fun.y = mean, geom = "point") +
1557046181769:stat_summary(fun.data = "mean_cl_boot", gwom = "errorbar", size = .7, width = .2) +
1557046181771:scale_y_continuous(limits = c(0,20))
1557046204160:ggplot(pl, aes(x = xlab, y = value)) +
1557046204162:geom_point(shape= 15, size = 4) +
1557046204164:# stat_summary(fun.y = mean, geom = "point") +
1557046204168:stat_summary(fun.data = "mean_cl_boot", gwom = "errorbar", size = .7, width = .2) +
1557046204172:scale_y_continuous(limits = c(0,20))
1557046212966:ggplot(pl, aes(x = xlab, y = value)) +
1557046212976:geom_point(shape= 15, size = 4) +
1557046212983:# stat_summary(fun.y = mean, geom = "point") +
1557046212987:stat_summary(fun.data = "mean_cl_boot", geom = "errorbar", size = .7, width = .2) +
1557046212990:scale_y_continuous(limits = c(0,20))
1557046232077:ggplot(pl, aes(x = xlab, y = value)) +
1557046232079:# geom_point(shape= 15, size = 4) +
1557046232083:# stat_summary(fun.y = mean, geom = "point") +
1557046232089:stat_summary(fun.data = "mean_cl_boot", geom = "errorbar", size = .7, width = .2) +
1557046232092:scale_y_continuous(limits = c(0,20))
1557046240713:ggplot(pl, aes(x = xlab, y = value)) +
1557046240719:# geom_point(shape= 15, size = 4) +
1557046240723:stat_summary(fun.y = mean, geom = "point") +
1557046240731:stat_summary(fun.data = "mean_cl_boot", geom = "errorbar", size = .7, width = .2) +
1557046240739:scale_y_continuous(limits = c(0,20))
1557046248028:ggplot(pl, aes(x = xlab, y = value)) +
1557046248030:# geom_point(shape= 15, size = 4) +
1557046248031:stat_summary(fun.y = mean, geom = "point", shape = 15) +
1557046248033:stat_summary(fun.data = "mean_cl_boot", geom = "errorbar", size = .7, width = .2) +
1557046248034:scale_y_continuous(limits = c(0,20))
1557046337742:ggplot(pl, aes(x = xlab, y = value)) +
1557046337751:stat_summary(fun.y = mean, geom = "point", shape = 15, size = 4) +
1557046337757:stat_summary(fun.data = "mean_cl_boot", geom = "errorbar", size = .7, width = .2) +
1557046337762:scale_y_continuous(limits = c(0,20)) +
1557046337764:ylab("Mittelwerte der Summenscores") +
1557046337770:xlab("Überweisungsquellen und Zeitpunkt")
1557046369671:ggplot(pl, aes(x = xlab, y = value)) +
1557046369673:stat_summary(fun.y = mean, geom = "point", shape = 15, size = 4) +
1557046369681:stat_summary(fun.data = "mean_cl_boot", geom = "errorbar", size = .7, width = .2) +
1557046369684:scale_y_continuous(limits = c(0,20)) +
1557046369689:ylab("Mittelwerte und Standardfehler der Summenscores") +
1557046369696:xlab("Überweisungsquellen und Zeitpunkt")
1557046409180:ggplot(pl, aes(x = xlab, y = value)) +
1557046409182:stat_summary(fun.y = mean, geom = "point", shape = 15, size = 4) +
1557046409183:stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", size = .7, width = .2) +
1557046409185:scale_y_continuous(limits = c(0,20)) +
1557046409186:ylab("Mittelwerte und Standardfehler der Summenscores") +
1557046409188:xlab("Überweisungsquellen und Zeitpunkt")
1557046440828:aggregate(value ~ xlab, FUN = pl)
1557046445722:names(pl)
1557046460592:aggregate(value ~ xlab, FUN = mean, data = pl)
1557046480439:aggregate(value ~ xlab, FUN = mean_cl_boot, data = pl)
1557046498898:aggregate(value ~ xlab, FUN = mean_cl_normal, data = pl)
1557126606009:# subsample
1557126606011:pat <- c("ld|ho|zw|vh|motivation")
1557126606568:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value), ]
1557126613747:# schaue die mittelwerte an
1557126613751:aggregate(dat$value ~ dat$variable + dat$trans, FUN = mean)
1557126711907:# h1b:linienplot (mit mittelwerten)
1557126711909:pl <- dat2 %>%
1557126711911:group_by(variable, trans) %>%
1557126711913:summarise(mean_t = mean(value))
1557126713686:ggplot(pl, aes(x = variable, y = mean_t, linetype =trans ,shape = trans, group = trans)) +
1557126713687:geom_point(size= 2) +
1557126713689:geom_line(size = 1.5) +
1557126713690:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557126713691:ylab("Mittelwerte der Summenscore") +
1557126713693:xlab("Zeitpunk t0 und t1") +
1557126713694:guides(linetype = guide_legend(title = "Überweisungsquelle"), shape = F) +
1557126713696:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1557126713698:mytheme
1557126717410:# another plot
1557126717413:# sample
1557126717414:pl <- dat2 %>%
1557126717416:mutate(xlab = paste(trans, variable, sep = "_"))
1557126728294:ggplot(pl, aes(x = xlab, y = value)) +
1557126728297:stat_summary(fun.y = mean, geom = "point", shape = 15, size = 4) +
1557126728299:stat_summary(fun.data = "mean_cl_boot", geom = "errorbar", size = .7, width = .2) + # lese standardfehler nach => stimmt was nicht
1557126728303:scale_y_continuous(limits = c(0,20)) +
1557126728306:ylab("Mittelwerte und Standardfehler der Summenscores") +
1557126728308:xlab("Überweisungsquellen und Zeitpunkt")
1557126950732:vars
1557126963175:names(data_wide)
1557127021029:#daten aufbereiten
1557127021030:dat <- melt(data_wide, measure.vars = c("T0_phq9", "T1_phq9"))
1557127023640:View(dat)
1557127060905:#daten aufbereiten
1557127060907:dat <- melt(data_wide, measure.vars = c("T0_phq9", "T1_phq9")) %>%
1557127060908:select(-T1_phq15, T0_pqh15)
1557127070027:#daten aufbereiten
1557127070029:dat <- melt(data_wide, measure.vars = c("T0_phq9", "T1_phq9")) %>%
1557127070030:select(-T1_phq15, T0_phq15)
1557127130726:View(data_wide)
1557127190953:t <- group_by(dat, Patientencode, trans) %>%
1557127190956:summarise(occur = n())
1557127194842:View(t)
1557127208653:View(dat)
1557127230365:#daten aufbereiten
1557127230366:dat <- melt(data_wide, measure.vars = c("T0_phq9", "T1_phq9")) %>%
1557127230368:select(-T1_phq15, T0_phq15) %>%
1557127230369:drop_na()
1557127233405:View(dat)
1557127246730:#daten aufbereiten
1557127246732:dat <- melt(data_wide, measure.vars = c("T0_phq9", "T1_phq9")) %>%
1557127246734:select(-T1_phq15, T0_phq15) %>%
1557127246735:drop_na(value)
1557127252388:t <- group_by(dat, Patientencode, trans) %>%
1557127252391:summarise(occur = n())
1557127257605:View(t)
1557127292840:t <- group_by(dat, Patientencode, trans) %>%
1557127292842:summarise(occur = n()) %>%
1557127292843:filter( occur == 2) %>%
1557127292845:left_join(., dat, by=("Patientencode", "trans"))
1557127298803:t <- group_by(dat, Patientencode, trans) %>%
1557127298805:summarise(occur = n()) %>%
1557127298806:filter( occur == 2) %>%
1557127298807:left_join(., dat, by=c("Patientencode", "trans"))
1557174274911:# subsample
1557174274913:pat = c("T0_phq15")
1557174276914:dat <- data_long[grepl(pat, data_long$variable) &! is.na(dat$value), ]
1557174281903:dat1 <- group_by(dat, Patientencode, trans) %>%
1557174281905:summarise(occur = n())
1557174284277:View(dat1)
1557174297921:# schaue daten an
1557174297924:table(dat1$trans) # nur erste drei linien vom obigen code
1557174305074:# schaue daten an
1557174305076:table(dat$trans) # nur erste drei linien vom obigen code
1557174315850:aggregate(value ~ variable, FUN = mean, data = dat1) # kaum unterschiede
1557174323811:aggregate(value ~ variable, FUN = mean, data = dat) # kaum unterschiede
1557174336604:aggregate(value ~ variable + trans, FUN = mean, data = dat) # kaum unterschiede
1557174403651:t.test(data_wide$T0_phq15 ~ data_wide$trans)
1557174499258:#plotte ergebnisse
1557174499260:ggplot(dat, aes(x = trans, y = value)) + geom_boxplot()
1557174550914:# subsample
1557174550915:dat <- data_long[grepl("T0_phq15", data_long$variable), ]
1557174563711:is.na(dat$value)
1557174614048:# subsample
1557174614050:dat <- data_long[grepl("T0_phq15", data_long$variable) &! is.na(dat$value), , ]
1557174629210:# schaue daten an
1557174629212:table(dat$trans) # nur erste drei linien vom obigen code
1557174633238:# t-test
1557174633240:t.test(data_wide$T0_phq15 ~ data_wide$trans)
1557174637382:#plotte ergebnisse
1557174637385:ggplot(dat, aes(x = trans, y = value)) + geom_boxplot() # wieso zwei punkte weniger?
1557174697303:# subsample
1557174697305:dat <- data_long[data_long$variable == "T0_gad" & !is.na(data_long$value),]
1557174701804:# paar weitere parameter
1557174701806:table(dat$trans) # führe nur die ersten drei linien vom obigen code aus => 18_PR und 36_SR
1557174705088:View(dat)
1557174761514:aggregate(value ~ variable + trans, FUN = mean, data = dat1)
1557174765011:aggregate(value ~ variable + trans, FUN = mean, data = dat)
1557174808351:# t-test
1557174808353:t.test(data_wide$T0_gad ~ data_wide$trans)
1557174851617:#plotte das ergebnis =>  boxplot
1557174851619:ggplot(dat, aes(x = trans, y = value)) +
1557174851621:geom_boxplot()
1557247197582:# h1b:versuche das ganze zu plotten
1557247197584:pat <- ("T0_phq9|T1_phq9")
1557247198231:dat1 <- data_long[grepl(pat, data_long$variable) & data_long$condit == "Intervention" & !is.na(data_long$value),]
1557247222375:intert0_t1 <- interaction(dat1$value,dat1$trans)
1557247234031:intert0_t1
1557247271112:wilcox.test(dat1$value, dat1$trans, paired = T)
1557247288550:wilcox.test(dat1$trans, dat1$value, paired = T)
1557255689386:# h1b:versuche das ganze zu plotten
1557255689388:pat <- ("T0_phq9|T1_phq9")
1557255769007:# h1b:versuche das ganze zu plotten
1557255769009:pat <- ("T0_phq9|T1_phq9")
1557255769510:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1557255773521:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1557255773523:dat2 <- group_by(dat1, Patientencode) %>%
1557255773524:summarise(occur = n()) %>%
1557255773525:filter(occur == 2) %>%
1557255773526:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1557255775642:View(dat2)
1557256096349:# h1b:versuche das ganze zu plotten
1557256096351:pat <- ("T0_phq9|T1_phq9")
1557256096927:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1557256101850:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1557256101852:dat2 <- group_by(dat1, Patientencode) %>%
1557256101853:summarise(occur = n()) %>%
1557256101854:filter(occur == 2) %>%
1557256101856:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1557256107788:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans + (1|dat2$Patientencode))
1557256127927:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (1|dat2$Patientencode))
1557256129232:summary(lm1)
1557256131676:isSingular(lm1) # False = gut
1557256163291:av2 <- aov(value ~ variable * trans + Error(Patientencode/variable), data = dat2)
1557256163749:summary(av1)
1557256168640:summary(av2)
1557256190596:av2 <- aov(value ~ variable * trans * condit + Error(Patientencode/variable), data = dat2)
1557256191377:summary(av2)
1557256256981:av2 <- aov(value ~ variable * trans + condit + Error(Patientencode/variable), data = dat2)
1557256268810:summary(av2)
1557256595065:# h1b:linienplot (mit mittelwerten)
1557256595067:pl <- dat2 %>%
1557256595068:group_by(variable, trans) %>%
1557256595069:summarise(mean_t = mean(value))
1557256595840:ggplot(pl, aes(x = variable, y = mean_t, linetype =trans ,shape = trans, group = trans)) +
1557256595841:geom_point(size= 2) +
1557256595843:geom_line(size = 1.5) +
1557256595844:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557256595846:ylab("Mittelwerte der Summenscore") +
1557256595847:xlab("Zeitpunk t0 und t1") +
1557256595849:guides(linetype = guide_legend(title = "Überweisungsquelle"), shape = F) +
1557256595850:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1557256595852:mytheme
1557256628633:ggplot(pl, aes(x = variable, y = mean_t, linetype =trans ,shape = trans, group = trans)) +
1557256628635:geom_point(size= 2) +
1557256628643:geom_line(size = 1.5) +
1557256628644:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557256628646:ylab("Mittelwerte der Summenscore") +
1557256628647:xlab("Zeitpunk t0 und t1") +
1557256628649:guides(linetype = guide_legend(title = "Überweisungsquelle"), shape = F) +
1557256628650:facet_wrap(~condit)
1557256640555:# h1b:linienplot (mit mittelwerten)
1557256640557:pl <- dat2 %>%
1557256640558:group_by(variable, trans, condit) %>%
1557256640559:summarise(mean_t = mean(value))
1557256641650:ggplot(pl, aes(x = variable, y = mean_t, linetype =trans ,shape = trans, group = trans)) +
1557256641651:geom_point(size= 2) +
1557256641653:geom_line(size = 1.5) +
1557256641657:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557256641658:ylab("Mittelwerte der Summenscore") +
1557256641659:xlab("Zeitpunk t0 und t1") +
1557256641661:guides(linetype = guide_legend(title = "Überweisungsquelle"), shape = F) +
1557256641662:facet_wrap(~condit)
1557256692998:ggplot(pl, aes(x = variable, y = mean_t, linetype =trans ,shape = trans, group = trans)) +
1557256693000:geom_point(size= 2) +
1557256693001:geom_line(size = 1.5) +
1557256693003:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557256693004:ylab("Mittelwerte der Summenscore") +
1557256693005:xlab("Zeitpunk t0 und t1") +
1557256693007:guides(linetype = guide_legend(title = "Überweisungsquelle"), shape = F) +
1557256693008:facet_wrap(~condit) +
1557256693010:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1557256693011:mytheme
1557257514305:names(data_wide)
1557257536273:# andere möglichkeit nehme differenz und teste ob ungleich 0
1557257536274:dat$diff_phq15 <- data_wide$T0_phq15 - data_wide$T1_phq15
1557257562637:# andere möglichkeit nehme differenz und teste ob ungleich 0
1557257562639:dat$diff_phq15 <- diff(data_wide$T0_phq15, data_wide$T1_phq15)
1557257768206:aggregate(value ~ variable, data_long, diff)
1557257779127:#daten aufbereiten
1557257779128:dat <- melt(data_wide, measure.vars = c("T0_phq9", "T1_phq9")) %>%
1557257779131:select(-T1_phq15, T0_phq15) %>%
1557257779133:drop_na(value)
1557257782727:aggregate(value ~ variable, dat, diff)
1557257792236:a <- aggregate(value ~ variable, dat, diff)
1557257795428:a
1557257815073:View(a)
1557258739026:# nehme nur die mit zwei einträge (t0 und t1)
1557258739028:dat2 <- group_by(dat, Patientencode) %>%
1557258739029:summarise(occur = n()) %>%
1557258739030:filter(occur == 2) %>%
1557258739032:left_join(., data_wide, by = "Patientencode") # 46 personen
1557258743791:View(dat2)
1557258780076:# andere möglichkeit nehme differenz und teste ob ungleich 0
1557258780078:dat2$diff_phq15 <- dat2$T0_phq15 - dat2$T1_phq15
1557258787313:a <- aggregate(value ~ variable, dat2, diff)
1557258837660:aov(dat2$diff_phq15 ~ dat2$condit * dat2$trans + Error(dat2$Patientencode))
1557258852442:summary.lm(av3)
1557258861900:summary(av3)
1557258921631:TukeyHSD(av3)
1557258969500:lm3 <- lmer(diff_phq15 ~ condit * trans + (1|Patientencode), data = dat2)
1557258988739:lm3 <- lmer(diff_phq15 ~ condit * trans , data = dat2)
1557259092861:View(av3)
1557259097603:View(av2)
1557259099628:View(av2)
1557259166237:av3 <- aov(dat2$diff_phq15 ~ dat2$condit * dat2$trans)# + Error(dat2$Patientencode))
1557259168034:summary(av3)
1557259182003:summary.lm(av3)
1557259209984:TukeyHSD(av3)
1557259213667:View(av3)
1557259219500:View(av4)
1557259222553:View(av3)
1557259260184:av3 <- aov(dat2$diff_phq15 ~ dat2$condit * dat2$trans + Error(dat2$Patientencode))
1557259273122:summary(av3)
1557259298544:av3 <- aov(dat2$diff_phq15 ~ dat2$condit * dat2$trans + Error(dat2$Patientencode))
1557259299452:summary(av3)
1557259345990:summary(av3)
1557259451225:ggplot(dat2, aes(x = paste(dat2$trans, dat2$condit), y = diff_phq15))
1557259466098:ggplot(dat2, aes(x = paste(dat2$trans, dat2$condit), y = diff_phq15)) + geom_boxplot()
1557260129301:# h1b:versuche das ganze zu plotten
1557260129302:pat <- ("T0_phq9|T1_phq9")
1557260131527:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1557260132882:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1557260132883:dat2 <- group_by(dat1, Patientencode) %>%
1557260132884:summarise(occur = n()) %>%
1557260132886:filter(occur == 2) %>%
1557260132887:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1557260137859:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (1|dat2$Patientencode))
1557260139127:summary(lm1)
1557260140106:isSingular(lm1) # False = gut
1557260197470:av2 <- aov(value ~ variable * trans * condit + Error(Patientencode/variable), data = dat2)
1557260198093:summary(av2)
1557260256583:#daten aufbereiten
1557260256584:dat <- melt(data_wide, measure.vars = c("T0_phq9", "T1_phq9")) %>%
1557260256586:select(-T1_phq15, T0_phq15) %>%
1557260256587:drop_na(value)
1557260259009:dat2 <- group_by(dat, Patientencode, trans) %>%
1557260259011:summarise(occur = n()) %>%
1557260259013:filter( occur == 2) %>%
1557260259014:left_join(., dat, by = c("Patientencode", "trans"))
1557260264217:View(dat2)
1557260330008:#daten aufbereiten
1557260330012:dat <- melt(data_wide, measure.vars = c("T0_phq9", "T1_phq9")) %>%
1557260330013:select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1557260330016:drop_na(value)
1557260332048:dat2 <- group_by(dat, Patientencode, trans) %>%
1557260332050:summarise(occur = n()) %>%
1557260332051:filter( occur == 2) %>%
1557260332053:left_join(., dat, by = c("Patientencode", "trans"))
1557260391333:# model
1557260391335:av3 <- aov(value ~ variable * lo, data = dat2)
1557260406158:# model
1557260406160:av3 <- aov(value ~ variable + ld, data = dat2)
1557260417520:# model
1557260417521:av3 <- aov(value ~ variable + ld + Error(Patientencode), data = dat2)
1557260427515:summary(av3)
1557260442576:# model
1557260442578:av3 <- aov(value ~ variable * ld + Error(Patientencode), data = dat2)
1557260443462:summary(av3)
1557260471626:# model
1557260471628:av3 <- aov(value ~ variable * trans * ld + Error(Patientencode), data = dat2)
1557260472519:summary(av3)
1557260543390:lm3 <- lmer(value ~ variable * trans + ld + (1|Patientencode), data = dat2 )
1557260552809:summary(lm3)
1557260681349:lm3 <- lmer(value ~ variable * trans * ld + (1|Patientencode), data = dat2 )
1557260682650:summary(lm3)
1557261991845:table(data_wide$T0_phq9, data_wide$trans)
1557262002893:table(data_wide$trans)
1557262039032:sum(data_wide)
1557262054239:length(data_wide)
1557262063593:nrow(data_wide)
1557262073808:21+33
1557262577521:fisher.test(data_wide$T0_phq9, data_wide$trans)
1557262583759:t.test(data_wide$T0_phq9 ~ data_wide$trans) # n.s.
1557262619162:# fisher test
1557262619164:fisher.test(data_wide$T0_gad ~ data_wide$trans)
1557262624566:# fisher test
1557262624568:fisher.test(data_wide$T0_gad, data_wide$trans)
1557262632296:# subsample
1557262632298:dat <- data_long[data_long$variable == "T0_gad" & !is.na(data_long$value),] # eine person fehlt
1557262636849:# t-test
1557262636851:t.test(data_wide$T0_gad ~ data_wide$trans)
1557262639956:# fisher test
1557262639957:fisher.test(data_wide$T0_gad, data_wide$trans)
1557262653502:# subsample
1557262653504:dat <- data_long[grepl("T0_phq15", data_long$variable) &! is.na(dat$value), ] # zwei fehlende werte
1557262678801:# fisher test
1557262678803:fisher.test(data_wide$T0_phq15, data_wide$trans)
1557262682025:# t-test
1557262682027:t.test(data_wide$T0_phq15 ~ data_wide$trans)
1557262686685:# fisher test
1557262686687:fisher.test(data_wide$T0_phq15, data_wide$trans)
1557262733116:# man u test
1557262733118:wilcox.test(data_wide$T0_phq15 ~ data_wide$trans)
1557262770023:# fisher test
1557262770024:wilcox.test(data_wide$T0_gad, data_wide$trans)
1557262776195:# fisher test
1557262776196:wilcox.test(data_wide$T0_gad ~ data_wide$trans)
1557262798353:wilcox.test(data_wide$T0_phq9 ~ data_wide$trans)
1557262859829:# subsample
1557262859831:pat <- c("ld|ho|zw|vh")
1557262860152:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value), ]
1557262867217:View(dat)
1557262949610:wilcox.test(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans)
1557262953380:t.test(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans)
1557314124985:pat <- ("T0_phq9|T1_phq9")
1557314124988:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1557314125003:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1557314125006:dat2 <- group_by(dat1, Patientencode) %>%
1557314125009:summarise(occur = n()) %>%
1557314125012:filter(occur == 2) %>%
1557314125014:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1557314140064:# teste ob daten gruppiert
1557314140067:av <- aov(value ~ Patientencode, dat2)
1557314231319:# teste ob daten gruppiert
1557314231321:library(psych)
1557314232592:av <- aov(value ~ Patientencode, dat2)
1557314243721:ICC(av)
1557314249776:ICC1(av)
1557314304577:detach(package::psych, unload = T)
1557314313448:detach("package::psych", unload = T)
1557314346056:library(multilevel)
1557314352923:install.packages("multilevel")
1557314375577:library(multilevel)
1557314385568:ICC1(av)
1557314942627:library("multcomp")
1557314955613:library(multcomp)
1557314966166:install.packages("multcomp")
1557315317188:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (1|dat2$Patientencode))
1557315317658:summary(lm1)
1557316283529:boxplot(residuals(av) ~ dat2$Patientencode, xlab = "Schule", ylab = "Residuen")
1557316284510:abline(h=0)
1557316294720:boxplot(residuals(av) ~ dat2$Patientencode, xlab = "Schule", ylab = "Residuen")
1557316321617:residuals(av)
1557316344627:boxplot(residuals(av) ~ dat2$Patientencode, xlab = "Patient", ylab = "Residuen")
1557316437333:#2. Fehler sind i.i.d. normalverteilt mit EW 0 und Varianz (residuen)
1557316437335:fm <- lm(value ~ Patientencode, dat2)
1557316437696:boxplot(residuals(fm) ~ dat2$Patientencode, xlab = "Patient", ylab = "Residuen")
1557316472826:summary(fm)$coeffitients
1557316486761:summary(fm)$coefficients
1557316571244:boxplot(residuals(lm1) ~ dat2$Patientencode, xlab = "Patient", ylab = "Residuen")
1557316642155:# überprüfe nochmals die modell-güte
1557316642157:#1. Zufällige Abweichungen sind normalverteilt mit EW 0 und Varianz
1557316642158:boxplot(ranef(lm1) ~ dat2$Patientencode)
1557316673520:# überprüfe nochmals die modell-güte
1557316673521:#1. Zufällige Abweichungen sind normalverteilt mit EW 0 und Varianz
1557316673523:boxplot(lme4::ranef(lm1) ~ dat2$Patientencode)
1557316689665:library(lme4)
1557316695211:lme4::ranef(lm1)
1557316699939:# überprüfe nochmals die modell-güte
1557316699941:#1. Zufällige Abweichungen sind normalverteilt mit EW 0 und Varianz
1557316699943:boxplot(lme4::ranef(lm1) ~ dat2$Patientencode)
1557316729339:dat2$Patientencode
1557316736805:# überprüfe nochmals die modell-güte
1557316736807:#1. Zufällige Abweichungen sind normalverteilt mit EW 0 und Varianz
1557316736808:boxplot(lme4::ranef(lm1))
1557316766849:lme4::ranef(lm1)$`dat2$Patientencode`
1557316776555:lme4::ranef(lm1)$`dat2$Patientencode`
1557316780579:lme4::ranef(lm1)$`dat2$Patientencode`[1]
1557316786051:lme4::ranef(lm1)$`dat2$Patientencode`[[1]]
1557316789033:lme4::ranef(lm1)$`dat2$Patientencode`[[2]]
1557316805821:str(lme4::ranef(lm1)$`dat2$Patientencode`)
1557316831140:lm1
1557316838150:attributes(lm1)
1557316917213:a <- lme4::ranef(lm1)$`dat2$Patientencode`
1557316919947:View(a)
1557317017247:rownames(a)
1557317027942:rownames(lme4::ranef(lm1)$`dat2$Patientencode`)
1557317039545:# überprüfe nochmals die modell-güte
1557317039546:#1. Zufällige Abweichungen sind normalverteilt mit EW 0 und Varianz
1557317039548:boxplot(lme4::ranef(lm1) ~ rownames(lme4::ranef(lm1)$`dat2$Patientencode`))
1557317061750:# überprüfe nochmals die modell-güte
1557317061752:#1. Zufällige Abweichungen sind normalverteilt mit EW 0 und Varianz
1557317061753:pl <- ranef(lm1)
1557317065911:View(pl)
1557317092655:# überprüfe nochmals die modell-güte
1557317092656:#1. Zufällige Abweichungen sind normalverteilt mit EW 0 und Varianz
1557317092658:pl <- lme4::ranef(lm1)$`dat2$Patientencode`
1557317093452:boxplot(pl[[1]] ~ rownames(pl))
1557317113615:abline(h=0)
1557317120357:boxplot(pl[[1]] ~ rownames(pl))
1557317120724:abline(h=0)
1557317212959:boxplot(pl[[1]] ~ rownames(pl)) +
1557317212961:abline(h=0)
1557317219736:boxplot(pl[[1]] ~ rownames(pl)) + abline(h=0)
1557317228699:boxplot(pl[[1]] ~ rownames(pl)) + abline(h="zero")
1557317235461:boxplot(pl[[1]] ~ rownames(pl)) + abline(lm1)
1557317240615:boxplot(pl[[1]] ~ rownames(pl)) + abline()
1557317250709:boxplot(pl[[1]] ~ rownames(pl))
1557317251724:+ abline()
1557317262428:boxplot(pl[[1]] ~ rownames(pl))
1557317297726:+ abline(h = 2)
1557317300976:boxplot(pl[[1]] ~ rownames(pl))
1557317301237:abline(h = 2)
1557317312072:boxplot(pl[[1]] ~ rownames(pl))
1557317312092:abline(h = 2)
1557317370396:boxplot(pl[[1]] ~ rownames(pl))
1557317370433:abline(h = 2)
1557317396624:abline(h = c(-2,2), color = red)
1557317399800:boxplot(pl[[1]] ~ rownames(pl))
1557317400026:abline(h = c(-2,2), color = red)
1557317405195:abline(h = c(-2,2), color = "red")
1557317420136:?abline
1557317467390:boxplot(pl[[1]] ~ rownames(pl)) +
1557317467392:abline(h = c(-2,2), col = "red") +
1557317467393:abline(h = 0, col = "black")
1557317482940:boxplot(pl[[1]] ~ rownames(pl)) +
1557317482941:abline(h = c(-2,2), col = "red") +
1557317482942:abline(h = 0, col = "black")
1557317487792:boxplot(pl[[1]] ~ rownames(pl))
1557317488239:abline(h = c(-2,2), col = "red")
1557317488482:abline(h = 0, col = "black")
1557317530524:boxplot(pl[[1]] ~ rownames(pl), xlab = "Patient", ylab = "Zufällige Abweichungen") # nicht sehr normalverteilt
1557317531104:abline(h = c(-2,2), col = "red")
1557317531287:abline(h = 0, col = "black")
1557317548952:boxplot(residuals(lm1) ~ dat2$Patientencode, xlab = "Patient", ylab = "Residuen")
1557317563952:boxplot(residuals(lm1) ~ dat2$Patientencode, xlab = "Patient", ylab = "Residuen")
1557317564208:abline(h = c(-2,2), col = "red")
1557317564640:abline(h = 0, col = "black")
1557317587141:#2. Fehler sind i.i.d. normalverteilt mit EW 0 und Varianz (residuen)
1557317587142:fm <- lm(value ~ Patientencode, dat2)
1557317592892:boxplot(residuals(lfm) ~ dat2$Patientencode, xlab = "Patient", ylab = "Residuen") # boxplots sind nicht um 0 verzeilt => wieso?? mit fm ja
1557317593520:abline(h = c(-2,2), col = "red")
1557317593704:abline(h = 0, col = "black")
1557317599691:boxplot(residuals(fm) ~ dat2$Patientencode, xlab = "Patient", ylab = "Residuen") # boxplots sind nicht um 0 verzeilt => wieso?? mit fm ja
1557317600025:abline(h = c(-2,2), col = "red")
1557317600264:abline(h = 0, col = "black")
1557317620395:#2. Fehler sind i.i.d. normalverteilt mit EW 0 und Varianz (residuen)
1557317620397:fm <- lm(value ~ Patientencode * variable, dat2)
1557317620996:boxplot(residuals(fm) ~ dat2$Patientencode, xlab = "Patient", ylab = "Residuen") # boxplots sind nicht um 0 verzeilt => wieso?? mit fm ja
1557317630809:residuals(fm)
1557317656548:#2. Fehler sind i.i.d. normalverteilt mit EW 0 und Varianz (residuen)
1557317656549:fm <- lm(value ~ variable + (1|Patientencode), dat2)
1557317656995:boxplot(residuals(fm) ~ dat2$Patientencode, xlab = "Patient", ylab = "Residuen") # boxplots sind nicht um 0 verzeilt => wieso?? mit fm ja
1557317663430:#2. Fehler sind i.i.d. normalverteilt mit EW 0 und Varianz (residuen)
1557317663431:fm <- lm(value ~ variable + (1|Patientencode), dat2)
1557317668421:#2. Fehler sind i.i.d. normalverteilt mit EW 0 und Varianz (residuen)
1557317668422:fm <- lmer(value ~ variable + (1|Patientencode), dat2)
1557317669437:boxplot(residuals(fm) ~ dat2$Patientencode, xlab = "Patient", ylab = "Residuen") # boxplots sind nicht um 0 verzeilt => wieso?? mit fm ja
1557317850997:#2. Fehler sind i.i.d. normalverteilt mit EW 0 und Varianz (residuen)
1557317850998:fm <- lmer(value ~ Patientencode, dat2)
1557317855309:#2. Fehler sind i.i.d. normalverteilt mit EW 0 und Varianz (residuen)
1557317855310:fm <- glm(value ~ Patientencode, dat2)
1557317856532:boxplot(residuals(fm) ~ dat2$Patientencode, xlab = "Patient", ylab = "Residuen") # boxplots sind nicht um 0 verzeilt => wieso?? mit fm ja
1557317879895:#2. Fehler sind i.i.d. normalverteilt mit EW 0 und Varianz (residuen)
1557317879896:fm <- lm(value ~ Patientencode, dat2)
1557317880525:boxplot(residuals(fm) ~ dat2$Patientencode, xlab = "Patient", ylab = "Residuen") # boxplots sind nicht um 0 verzeilt => wieso?? mit fm ja
1557317916342:# andere möglichkeit nehme differenz und teste ob ungleich 0
1557317916343:dat2$diff_phq9 <- dat2$T0_phq9 - dat2$T1_phq9
1557317918028:View(dat2)
1557317931810:dat2$diff_phq9 <- dat2$T0_phq9 - dat2$T1_phq9
1557317966238:# andere möglichkeit nehme differenz und teste ob ungleich 0
1557317966239:dat2 <- data_wide[data_wide$condit == "Intervention" & !is.na(data_wide$T1_phq9),] # nehme nur
1557318002003:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1557318002004:dat2 <- group_by(dat1, Patientencode) %>%
1557318002005:summarise(occur = n()) %>%
1557318002006:filter(occur == 2) %>%
1557318002008:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1557318046054:# andere möglichkeit nehme differenz und teste ob ungleich 0
1557318046056:dat <- data_wide[is.na(data_wide$T1_phq9),] # nehme nur
1557318051647:# andere möglichkeit nehme differenz und teste ob ungleich 0
1557318051649:dat <- data_wide[!is.na(data_wide$T1_phq9),] # nehme nur
1557318054020:dat2$diff_phq9 <- dat2$T0_phq9 - dat2$T1_phq9
1557318060756:dat$diff_phq9 <- dat$T0_phq9 - dat$T1_phq9
1557318063133:View(dat)
1557318128823:av3 <- aov(dat$diff_phq15 ~ dat$condit * dat$trans + Error(dat$Patientencode))
1557318129187:summary(av3)
1557318156474:av3 <- aov(dat$diff_phq15 ~ dat$condit * dat$trans + Error(dat$Patientencode))
1557318156478:summary(av3)
1557318168197:av3 <- aov(dat$diff_phq9 ~ dat$condit * dat$trans + Error(dat$Patientencode))
1557318169092:summary(av3)
1557318182103:ggplot(dat2, aes(x = paste(dat2$trans, dat2$condit), y = diff_phq15)) + geom_boxplot()
1557318197262:ggplot(dat, aes(x = paste(dat$trans, dat$condit), y = diff_phq15)) + geom_boxplot()
1557318202286:ggplot(dat, aes(x = paste(dat$trans, dat$condit), y = diff_phq9)) + geom_boxplot()
1557318333374:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (1|dat2$Patientencode))
1557318333685:summary(lm1)
1557318390078:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans + dat2$condit + (1|dat2$Patientencode))
1557318390373:summary(lm1)
1557318433974:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$condit + (1|dat2$Patientencode))
1557318434805:summary(lm1)
1557318882642:library(multcomp)
1557318892170:library("multcomp")
1557318898609:isnt("multcomp")
1557318907378:install.packages("multcomp")
1557318929465:install.packages("multcomp", dependencies = T)
1557319038965:library("multcomp")
1557319042482:library(multcomp)
1557319058890:library(cowplot)
1557319074036:library(multcompView)
1557319095172:library(multcomp)
1557326528012:I(x)
1557326536376:?I
1557345829681:dat <- data_wide %>%
1557345829683:# filter(!duplicated(raw_data3$Patientencode)) %>%
1557345829684:dplyr::group_by(sex) %>%
1557345829685:dplyr::summarise(tot = n()) %>%
1557345829686:mutate(pct = tot / sum(tot))
1557345830826:ggplot(dat, aes(x = sex, y = pct)) +
1557345830832:geom_bar(stat = "identity") +
1557345830835:scale_y_continuous(labels = scales::percent) +
1557345830837:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25) +
1557345830839:mytheme
1557345874648:# lade Packages
1557345874651:library(tidyverse)
1557345874652:library(foreign)
1557345874654:library(Amelia)
1557345874655:library(reshape2)
1557345874656:library(gmodels)
1557345874658:library(lubridate)
1557345874659:library(psych)
1557345874660:library(Hmisc)
1557345874662:library(psych)
1557345874666:# # lade original spss
1557345874667:# orig_data <- read.spss("TIDe_Gesamt_20190404_kopie.sav",
1557345874668:#                        to.data.frame = T,
1557345874669:#                        add.undeclared.levels = "append")
1557345874672:# lade daten csv
1557345874673:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1557345874674:delim = ";",
1557345874675:na = c(" ", "-99"),
1557345874676:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1557345874678:drop_na(Patientencode) %>%
1557345874680:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1557345874681:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1557345874682:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1557345874683:'1' = "noch in der Schule",
1557345874685:'2' = "ohne Schulabschluss",
1557345874686:'3' = "Primar/Sekundarschule",
1557345874687:'4' = "Berufsmaturität",
1557345874688:'5' = "Sekundarschule",
1557345874689:'6' = "Fachmatur",
1557345874690:'7' = "Fachchule",
1557345874691:'8' = "Universität",
1557345874693:'9' = "anderes"),
1557345874694:REKRUTIERUNG = recode(.$REKRUTIERUNG, '0' = "PR", '1' = "SR")) %>%
1557345874695:# Psychotherapiemotivation Subskalen:
1557345874696:# Psychischer Leidensdruck (LD), Hoffnung (HO), Symptombezogene Zuwendung (ZW), Verneinung psychischer Hilfsbedürftigkeit (VH)
1557345874698:# Achtung: Hoffnungsitems rekodieren
1557345874699:# Achtung: einige items fptm23, einige fptm, eins fprm_9 -> noch ändern?
1557345874700:# LD <- c("T0_fptm_6, T0_fptm_7, T0_fptm_13, T0_fptm_15")
1557345874701:# HO <- c("T0_fptm23_1, T0_fptm23_4, T0_fprm_9, T0_fptm_14")
1557345874702:# ZW <- c("T0_fptm_5, T0_fptm_8, T0_fptm_11, T0_fptm_12")
1557345874704:# VH <- c("T0_fptm23_2, T0_fptm23_3, T0_fptm_10")
1557345874705:rename(ld1 = T0_fptm_6, ld2 = T0_fptm_7, ld3 = T0_fptm_13, ld4 = T0_fptm_15,
1557345874706:ho1 = T0_fptm23_1, ho2 = T0_fptm23_4, ho3 = T0_fprm_9, ho4 = T0_fptm_14,
1557345874708:zw_1 = T0_fptm_5, zw_2 = T0_fptm_8, zw_3 = T0_fptm_11, zw_4 = T0_fptm_12,
1557345874709:vh1 = T0_fptm23_2, vh2 = T0_fptm23_3, vh3 = T0_fptm_10) %>%
1557345874710:mutate(ho1 = recode(ho1, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1557345874711:ho2 = recode(ho2, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1557345874713:ho3 = recode(ho3, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1557345874714:ho4 = recode(ho4, '1' = "4",'2' = "3", '3' = "2", '4' = "1")) %>%
1557345874715:mutate(ho1 = parse_number(.$ho1),
1557345874716:ho2 = parse_number(.$ho2),
1557345874717:ho3 = parse_number(.$ho3),
1557345874718:ho4 = parse_number(.$ho4))
1557345874858:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960" # bei einer Altersangabe fehlt Monat => nehme Januar
1557345874861:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y") # Ändere Alter in Datum
1557345874862:raw_data$Alter <- 2018- year(raw_data$T0_Geb)
1557345874864:raw_data$Altersgruppen <- cut(raw_data$Alter,
1557345874865:breaks = c(-Inf, 34, 49, 64, Inf), # menuCH Kategorien
1557345874866:labels = c("18 bis 34-jährig", "35 bis 49-jährig", "50 bis 64-jährig", "65-jährig und älter"))
1557345874868:raw_data$Altersgruppen <- as.character(raw_data$Altersgruppen) # parse to character (parse_character funktioniet hier nicht => wieso?)
1557345874871:pattern2 <- c("T0_phq9" ,"T1_phq9", "T0_phq15", "T1_phq15", "ld", "ho", "zw_", "vh", "T0_gad", "T1_gad")
1557345874874:# achtung bei rowsums werden 0 erzeugt => ich gehe davon aus, dass diese NA' sein sollten
1557345874875:# überprüfe das mit plausibilitätschecks (...)
1557345874876:empty <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1557345874878:for (nam in pattern2) {
1557345874879:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1557345874880:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1557345874881:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1557345874883:empty[[nam]] <- sub_dat
1557345874884:}
1557345874905:data <- do.call(bind_cols,empty)
1557345874909:# slice raw_data and paste back
1557345874910:data2 <- raw_data[, c(1:23,69:78, 108:109)]
1557345874911:dat <- data[, grep("sum", names(data), value = T)]
1557345874913:raw_data2 <- bind_cols(data2, dat) # cbind
1557345874916:# #missing map
1557345874917:# missmap(raw_data2) # 20 percent fehlen v.a. bei variable schluabschluss
1557345874919:# drop all usless variables and rename
1557345874921:raw_data2 <- raw_data2[-55,] # contains only NA
1557345874922:data_wide <- raw_data2 %>%
1557345874923:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1557345874924:T0_Datum, T0_sex, T0_Schulabschluss, Alter, Altersgruppen,
1557345874925:sum, sum1, sum2, sum3, sum4, sum5, sum6, sum7, sum8, sum9) %>%
1557345874927:rename(trans = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss, age = Alter, age_group = Altersgruppen,
1557345874928:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1557345874929:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, ld = sum4, ho = sum5, zw = sum6, vh = sum7, T0_gad = sum8, T1_gad = sum9) # rename for melting data
1557345874956:# # neue variable therapiemotivation
1557345874958:# # rowsum von ld, ho, zw, vh
1557345874959:# pattern3 = c("ld|ho|zw|vh")
1557345874960:# data_wide$motivation <- rowSums(data_wide[, grep(pattern3, names(data_wide), value = T)], na.rm = T)
1557345874963:# rowsums mit 0 sind NA's
1557345874964:data_wide[data_wide == 0] <- NA
1557345874967:# funktioniert irgendwie nicht so recht
1557345874968:# test <- data_wide %>%
1557345874970:#          if_else(vars(10:19) == 0, "NA", .)
1557345874971:#
1557345874972:# data_wide %>% if_else(. == 0, TRUE ~ NA_real_, .)
1557345874975:# melt into long format => v.a. für statistische analysen wichtig
1557345874976:data_long <- melt(data_wide,  measure.vars = c("T0_phq9","T1_phq9", "T0_phq15", "T1_phq15", "T0_gad", "T1_gad", "ld", "ho", "zw", "vh", "motivation"))
1557345874981:# achtung variable sind factoren => parse to characters
1557345874982:data_long$variable <- as.character(data_long$variable)
1557345903274:# drop all usless variables and rename
1557345903276:raw_data2 <- raw_data2[-55,] # contains only NA
1557345903979:data_wide <- raw_data2 %>%
1557345903981:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1557345903983:T0_Datum, T0_sex, T0_Schulabschluss, Alter, Altersgruppen,
1557345903984:sum, sum1, sum2, sum3, sum4, sum5, sum6, sum7, sum8, sum9) %>%
1557345903985:rename(trans = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss, age = Alter, age_group = Altersgruppen,
1557345903987:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1557345903988:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, ld = sum4, ho = sum5, zw = sum6, vh = sum7, T0_gad = sum8, T1_gad = sum9) # rename for melting data
1557345934562:# slice raw_data and paste back
1557345934570:data2 <- raw_data[, c(1:23,69:78, 108:109)]
1557345934864:dat <- data[, grep("sum", names(data), value = T)]
1557345935953:raw_data2 <- bind_cols(data2, dat) # cbind
1557345944599:View(raw_data2)
1557346197079:dat <- dat.ja_wide %>%
1557346197081:# filter(!duplicated(raw_data3$Patientencode)) %>%
1557346197082:dplyr::group_by(sex) %>%
1557346197083:dplyr::summarise(tot = n()) %>%
1557346197084:mutate(pct = tot / sum(tot))
1557346197530:ggplot(dat, aes(x = sex, y = pct)) +
1557346197531:geom_bar(stat = "identity") +
1557346197532:scale_y_continuous(labels = scales::percent) +
1557346197533:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25) +
1557346197534:mytheme
1557346213213:dat <- data_wide %>%
1557346213214:# filter(!duplicated(raw_data3$Patientencode)) %>%
1557346213216:dplyr::group_by(sex) %>%
1557346213217:dplyr::summarise(tot = n()) %>%
1557346213218:mutate(pct = tot / sum(tot))
1557346214398:ggplot(dat, aes(x = sex, y = pct)) +
1557346214399:geom_bar(stat = "identity") +
1557346214401:scale_y_continuous(labels = scales::percent) +
1557346214404:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25) +
1557346214405:mytheme
1557346227837:ggplot(dat, aes(x = sex, y = pct)) +
1557346227839:geom_bar(stat = "identity") +
1557346227840:scale_y_continuous(labels = scales::percent) +
1557346227841:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25, size = 9) +
1557346227842:mytheme
1557346269603:ggplot(dat, aes(x = sex, y = pct)) +
1557346269604:geom_bar(stat = "identity") +
1557346269605:scale_y_continuous(labels = scales::percent) +
1557346269606:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25, size = 9) +
1557346269607:xlab("Geschlecht") +
1557346269608:ylab("Anteil") +
1557346269610:mytheme
1557346742836:View(dat)
1557346788824:psych::describe(data_wide$age, na.rm = T) # one missing => which(is.na(data_wide$age))
1557346908974:table(data_wide$age_group)
1557346934095:dat <- data_wide %>%
1557346934097:group_by(age_group) %>%
1557346934098:dplyr::summarise(tot = n()) %>%
1557346934099:mutate(pct = tot / sum(tot))
1557346938215:View(dat)
1557346957193:dat <- data_wide %>%
1557346957194:group_by(age_group) %>%
1557346957196:dplyr::summarise(tot = n()) %>%
1557346957198:mutate(pct = tot / sum(tot)*100)
1557347113096:View(dat)
1557347202513:dat <- data_wide %>%
1557347202515:group_by(educ) %>%
1557347202516:dplyr::summarise(tot = n()) %>%
1557347202517:mutate(pct = tot / sum(tot))
1557347207717:View(dat)
1557347226879:# # lade original spss
1557347226880:orig_data <- read.spss("TIDe_Gesamt_20190404_kopie.sav",
1557347226881:to.data.frame = T,
1557347226882:add.undeclared.levels = "append")
1557347236986:View(orig_data)
1557347270216:levels(orig_data$T0_Schulabschluss)
1557347907894:dat <- data_wide %>%
1557347907895:group_by(educ) %>%
1557347907896:dplyr::summarise(tot = n()) %>%
1557347907897:mutate(pct = tot / sum(tot)*100)
1557348546095:# subsample
1557348546097:pat <- c("ld|ho|zw|vh")
1557348546458:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value), ]
1557348567307:table(t$trans)
1557348581322:# schaue die mittelwerte an
1557348581323:aggregate(dat$value ~ dat$variable + dat$trans, FUN = describe)
1557348592040:# schaue die mittelwerte an
1557348592042:aggregate(dat$value ~ dat$variable + dat$trans, FUN = mean)
1557348715908:# schaue die mittelwerte an
1557348715913:aggregate(dat$value ~ dat$variable + dat$trans, function(x) c(mean = mean(x), sd = sd(x)))
1557348750654:# schaue die mittelwerte an
1557348750656:aggregate(value ~ variable + trans, dat, function(x) c(mean = mean(x), sd = sd(x)))
1557349404933:# schaue boxplots an => varianzhomogenität gegeben
1557349404935:ggplot(data_wide, aes( y = T0_phq9, x = data_wide$trans)) +
1557349404937:geom_boxplot() # varianzen fast gleich, verteilung aber nicht (PR rechtsschief)
1557349484434:# schaue boxplots an => varianzhomogenität gegeben
1557349484436:ggplot(data_wide, aes( y = T0_phq9, x = data_wide$trans)) +
1557349484442:geom_boxplot() +
1557349484445:xlab("Überweisungsquelle") +
1557349484447:ylab("Summenscore PHQ9 Zeitpunkt T0") +
1557349484449:mytheme# varianzen fast gleich, verteilung aber nicht (PR rechtsschief)
1557349544087:# schaue boxplots an => varianzhomogenität gegeben
1557349544088:ggplot(data_wide, aes( y = T0_phq9, x = data_wide$trans)) +
1557349544090:geom_boxplot() +
1557349544091:xlab("Überweisungsquelle") +
1557349544092:ylab("Summenscore PHQ-9 Zeitpunkt T0") +
1557349544093:scale_y_continuous(limits = c(0,30))+
1557349544095:mytheme# varianzen fast gleich, verteilung aber nicht (PR rechtsschief)
1557349692046:t.test(data_wide$T0_phq9 ~ data_wide$trans) # n.s.
1557349847025:# h1b:versuche das ganze zu plotten
1557349847026:pat <- ("T0_phq9|T1_phq9")
1557349847321:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1557349850879:# h1b:schaue boxplots an
1557349850880:# hier ein beispiel für die resultate: http://rcompanion.org/handbook/I_06.html
1557349850881:p1 <- ggplot(dat, aes(y = dat$T0_phq9 , x = trans)) +
1557349850883:geom_boxplot() +
1557349850884:scale_y_continuous(limits = c(0,20))# dont look very nice :(
1557349851260:# ggplot(dat, aes(x = dat$T0_phq9 )) + geom_histogram()
1557349851262:p2 <- ggplot(dat, aes(y = dat$T1_phq9 , x = trans)) +
1557349851263:geom_boxplot() +
1557349851264:scale_y_continuous(limits = c(0,20))# looks good
1557349851953:plot_grid(p1, p2, ncol = 2)
1557349859943:# subsample
1557349859944:dat <- data_wide[data_wide$condit == "Intervention" & !is.na(data_wide$T1_phq9),] # nehme nur personen aus der Intervention (telefongespräche)
1557349861872:# h1b:schaue boxplots an
1557349861875:# hier ein beispiel für die resultate: http://rcompanion.org/handbook/I_06.html
1557349861876:p1 <- ggplot(dat, aes(y = dat$T0_phq9 , x = trans)) +
1557349861878:geom_boxplot() +
1557349861880:scale_y_continuous(limits = c(0,20))# dont look very nice :(
1557349862896:# ggplot(dat, aes(x = dat$T0_phq9 )) + geom_histogram()
1557349862897:p2 <- ggplot(dat, aes(y = dat$T1_phq9 , x = trans)) +
1557349862899:geom_boxplot() +
1557349862900:scale_y_continuous(limits = c(0,20))# looks good
1557349864232:plot_grid(p1, p2, ncol = 2)
1557349883809:p1
1557349897717:# h1b:versuche das ganze zu plotten
1557349897719:pat <- ("T0_phq9|T1_phq9")
1557349898085:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1557349899214:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1557349899217:dat2 <- group_by(dat1, Patientencode) %>%
1557349899218:summarise(occur = n()) %>%
1557349899219:filter(occur == 2) %>%
1557349899220:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1557349910234:# h1b:linienplot (mit mittelwerten)
1557349910235:pl <- dat2 %>%
1557349910237:group_by(variable, trans, condit) %>%
1557349910238:summarise(mean_t = mean(value))
1557349910872:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1557349910873:geom_point(size= 2) +
1557349910875:geom_line(size = 1.5) +
1557349910876:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557349910878:ylab("Mittelwerte der Summenscore") +
1557349910879:xlab("Zeitpunk") +
1557349910880:guides(linetype = guide_legend(title = "Überweisungsquelle"), shape = F) +
1557349910882:facet_wrap(~condit) +
1557349910883:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1557349910885:mytheme
1557349972362:# h1b:linienplot (mit mittelwerten)
1557349972363:pl <- dat2 %>%
1557349972364:group_by(variable, trans, condit) %>%
1557349972366:summarise(mean_t = mean(value))
1557349973325:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1557349973326:geom_point(size= 2) +
1557349973327:geom_line(size = 1.5) +
1557349973329:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557349973330:ylab("Mittelwerte der Summenscore") +
1557349973331:xlab("Zeitpunk") +
1557349973332:guides(linetype = guide_legend(title = "Überweisungsquelle"), shape = F) +
1557349973333:facet_wrap(~condit) +
1557349973335:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1557349973337:mytheme
1557350070112:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1557350070113:geom_point(size= 2) +
1557350070114:geom_line(size = 1.5) +
1557350070116:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557350070118:ylab("Mittelwerte der Summenscore") +
1557350070119:xlab("Zeitpunkt") +
1557350070120:guides(linetype = guide_legend(title = "Überweisungsquelle"), shape = F) +
1557350070121:facet_wrap(~condit) +
1557350070122:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1557350070124:mytheme
1557350462889:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1557350462893:geom_point(size= 4) +
1557350462894:geom_line(size = 1.5) +
1557350462895:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557350462896:ylab("Mittelwerte der Summenscore") +
1557350462898:xlab("Zeitpunkt") +
1557350462899:guides(linetype = guide_legend(title = "Überweisungsquelle"), shape = F) +
1557350462900:facet_wrap(~condit) +
1557350462902:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1557350462903:mytheme
1557350656821:# subsample
1557350656823:dat <- data_long[data_long$variable == "T0_gad" & !is.na(data_long$value),] # eine person fehlt
1557350692243:aggregate(value ~ variable + trans, dat, function(x) c(mean = mean(x), sd = sd(x)))
1557350698536:# t-test
1557350698537:t.test(data_wide$T0_gad ~ data_wide$trans)
1557350702176:# fisher test
1557350702180:wilcox.test(data_wide$T0_gad ~ data_wide$trans)
1557350709514:#plotte das ergebnis =>  boxplot
1557350709515:ggplot(dat, aes(x = trans, y = value)) +
1557350709516:geom_boxplot()
1557350759787:#plotte das ergebnis =>  boxplot
1557350759788:ggplot(dat, aes(x = trans, y = value)) +
1557350759789:geom_boxplot() +
1557350759790:xlab("Überweisungsquelle") +
1557350759792:ylab("Summenscore GAD") +
1557350759793:mytheme
1557350784170:#plotte das ergebnis =>  boxplot
1557350784171:ggplot(dat, aes(x = trans, y = value)) +
1557350784173:geom_boxplot() +
1557350784174:xlab("Überweisungsquelle") +
1557350784175:ylab("Summenscore GAD") +
1557350784177:scale_y_continuous(limits = c(0,25)) +
1557350784178:mytheme
1557350985038:# subsample
1557350985039:dat <- data_long[grepl("T0_phq15", data_long$variable) &! is.na(dat$value), ] # zwei fehlende werte
1557351002376:# subsample
1557351002377:dat <- data_long[grepl("T0_phq15", data_long$variable) &! is.na(dat$value), ] # zwei fehlende werte
1557351006289:aggregate(value ~ variable + trans, dat, function(x) c(mean = mean(x), sd = sd(x))) # kaum unterschiede
1557351074071:#plotte ergebnisse
1557351074072:ggplot(dat, aes(x = trans, y = value)) +
1557351074073:geom_boxplot() +
1557351074075:xlab("Überweisungsquelle") +
1557351074076:ylab("Summenscore PHQ-15") +
1557351074077:scale_y_continuous(limits = c(0,25)) +
1557351074078:mytheme
1557399778622:ggplot(data_wide, aes( y = T0_phq9, x = data_wide$trans)) +
1557399778623:geom_boxplot() +
1557399778625:xlab("Überweisungsquelle") +
1557399778626:ylab("Summenscore PHQ-9 Zeitpunkt T0") +
1557399778627:scale_y_continuous(limits = c(0,30))+
1557399778628:mytheme
1557399844469:ggsave("plots/überweisungsquelle_phq_t0_190509.pdf",
1557399844470:width = 10,
1557399844471:height = 10,
1557399844473:device = cairo_pdf)
1557399883053:# h1b:versuche das ganze zu plotten
1557399883054:pat <- ("T0_phq9|T1_phq9")
1557399883233:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1557399883974:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1557399883976:dat2 <- group_by(dat1, Patientencode) %>%
1557399883977:summarise(occur = n()) %>%
1557399883978:filter(occur == 2) %>%
1557399883979:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1557399889254:# another plot
1557399889255:# sample
1557399889257:pl <- dat2 %>%
1557399889258:mutate(xlab = paste(trans, variable, sep = "_"))
1557399890472:ggplot(pl, aes(x = xlab, y = value)) +
1557399890473:stat_summary(fun.y = mean, geom = "point", shape = 15, size = 4) +
1557399890474:stat_summary(fun.data = "mean_cl_boot", geom = "errorbar", size = .7, width = .2) + # lese standardfehler nach => stimmt was nicht
1557399890475:scale_y_continuous(limits = c(0,20)) +
1557399890476:ylab("Mittelwerte und Standardfehler der Summenscores") +
1557399890477:xlab("Überweisungsquellen und Zeitpunkt")
1557399896413:# h1b:linienplot (mit mittelwerten)
1557399896414:pl <- dat2 %>%
1557399896415:group_by(variable, trans, condit) %>%
1557399896416:summarise(mean_t = mean(value))
1557399896813:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1557399896814:geom_point(size= 4) +
1557399896816:geom_line(size = 1.5) +
1557399896817:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557399896818:ylab("Mittelwerte der Summenscore") +
1557399896819:xlab("Zeitpunkt") +
1557399896820:guides(linetype = guide_legend(title = "Überweisungsquelle"), shape = F) +
1557399896822:facet_wrap(~condit) +
1557399896823:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1557399896824:mytheme
1557399931406:ggsave("plots/verlauf_überweisungsquelle_interv_190509.pdf",
1557399931407:width = 12,
1557399931408:height = 10,
1557399931410:device = cairo_pdf)
1557399972440:# subsample
1557399972441:dat <- data_long[data_long$variable == "T0_gad" & !is.na(data_long$value),] # eine person fehlt
1557399975414:#plotte das ergebnis =>  boxplot
1557399975415:ggplot(dat, aes(x = trans, y = value)) +
1557399975417:geom_boxplot() +
1557399975418:xlab("Überweisungsquelle") +
1557399975419:ylab("Summenscore GAD") +
1557399975420:scale_y_continuous(limits = c(0,25)) +
1557399975421:mytheme
1557399989702:ggsave("plots/überweisungsquelle_gad_t0_190509.pdf",
1557399989704:width = 10,
1557399989705:height = 10,
1557399989706:device = cairo_pdf)
1557400002912:# subsample
1557400002913:dat <- data_long[grepl("T0_phq15", data_long$variable) &! is.na(dat$value), ] # zwei fehlende werte
1557400005102:#plotte ergebnisse
1557400005103:ggplot(dat, aes(x = trans, y = value)) +
1557400005105:geom_boxplot() +
1557400005106:xlab("Überweisungsquelle") +
1557400005107:ylab("Summenscore PHQ-15") +
1557400005108:scale_y_continuous(limits = c(0,25)) +
1557400005110:mytheme
1557400014795:# subsample
1557400014797:dat <- data_long[grepl("T0_phq15", data_long$variable) &! is.na(dat$value), ] # zwei fehlende werte
1557400045161:#plotte ergebnisse
1557400045164:ggplot(dat, aes(x = trans, y = value)) +
1557400045165:geom_boxplot() +
1557400045168:xlab("Überweisungsquelle") +
1557400045169:ylab("Summenscore PHQ-15") +
1557400045170:# scale_y_continuous(limits = c(0,25)) +
1557400045171:mytheme
1557400056527:#plotte ergebnisse
1557400056529:ggplot(dat, aes(x = trans, y = value)) +
1557400056530:geom_boxplot() +
1557400056531:xlab("Überweisungsquelle") +
1557400056533:ylab("Summenscore PHQ-15") +
1557400056534:# scale_y_continuous(limits = c(0,25)) +
1557400056535:mytheme
1557400060796:#plotte ergebnisse
1557400060798:ggplot(dat, aes(x = trans, y = value)) +
1557400060799:geom_boxplot() +
1557400060801:xlab("Überweisungsquelle") +
1557400060802:ylab("Summenscore PHQ-15") +
1557400060803:scale_y_continuous(limits = c(0,25)) +
1557400060804:mytheme
1557400071767:ggsave("plots/überweisungsquelle_phq_t0_190509.pdf",
1557400071768:width = 10,
1557400071769:height = 10,
1557400071771:device = cairo_pdf)
1557400084109:ggsave("plots/überweisungsquelle_phq15_t0_190509.pdf",
1557400084110:width = 10,
1557400084111:height = 10,
1557400084113:device = cairo_pdf)
1557400093254:# schaue boxplots an => varianzhomogenität gegeben
1557400093258:ggplot(data_wide, aes( y = T0_phq9, x = data_wide$trans)) +
1557400093259:geom_boxplot() +
1557400093260:xlab("Überweisungsquelle") +
1557400093261:ylab("Summenscore PHQ-9 Zeitpunkt T0") +
1557400093262:scale_y_continuous(limits = c(0,30))+
1557400093264:mytheme# varianzen fast gleich, verteilung aber nicht (PR rechtsschief)
1557400093901:ggsave("plots/überweisungsquelle_phq9_t0_190509.pdf",
1557400093903:width = 10,
1557400093904:height = 10,
1557400093905:device = cairo_pdf)
1557402666599:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value), ]
1557493788235:install.packages("magick")
1557493814102:install.packages("magick", dependencies = T)
1557494259322:library(magick)
1557494301492:library("webp", lib.loc="/home/staff/egel/unix/Library/R/3.4/library")
1557494342156:library(webp)
1557494353507:webp::read_webp("availability-heuristic.webp")
1557494367291:a <- webp::read_webp("availability-heuristic.webp")
1557494375690:print(a)
1557774000130:# load themes,data, packages-----------
1557774000132:source("kira_masterarbeit_edit_190418.R")
1557774084919:source("mytheme.R")
1557774087685:library(cowplot)
1557774088089:library(lme4)
1557774088745:library(multilevel)
1557774357321:View(data_wide)
1557774386639:table(data_wide$trans)
1557774413554:table(data_wide[data_wide$trans == "PR",]$condit)
1557774419811:table(data_wide[data_wide$trans == "SR",]$condit)
1557774579272:View(orig_data)
1557774585827:View(raw_data)
1557775161533:unique(data_wide$age_group)
1557775253607:# load themes,data, packages-----------
1557775253608:source("kira_masterarbeit_edit_190418.R")
1557775285529:# # lade original spss
1557775285530:# orig_data <- read.spss("TIDe_Gesamt_20190404_kopie.sav",
1557775285531:#                        to.data.frame = T,
1557775285532:#                        add.undeclared.levels = "append")
1557775285533:#
1557775285534:# lade daten csv
1557775285535:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1557775285536:delim = ";",
1557775285538:na = c(" ", "-99"),
1557775285539:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1557775285540:drop_na(Patientencode) %>%
1557775285541:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1557775285542:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1557775285543:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1557775285544:'1' = "noch in der Schule",
1557775285545:'2' = "ohne Schulabschluss",
1557775285547:'3' = "Primar/Sekundarschule",
1557775285548:'4' = "Berufsmaturität",
1557775285549:'5' = "Sekundarschule",
1557775285551:'6' = "Fachmatur",
1557775285552:'7' = "Fachchule",
1557775285553:'8' = "Universität",
1557775285554:'9' = "anderes"),
1557775285555:REKRUTIERUNG = recode(.$REKRUTIERUNG, '0' = "PR", '1' = "SR")) %>%
1557775285556:# Psychotherapiemotivation Subskalen:
1557775285558:# Psychischer Leidensdruck (LD), Hoffnung (HO), Symptombezogene Zuwendung (ZW), Verneinung psychischer Hilfsbedürftigkeit (VH)
1557775285559:# Achtung: Hoffnungsitems rekodieren
1557775285560:# Achtung: einige items fptm23, einige fptm, eins fprm_9 -> noch ändern?
1557775285561:# LD <- c("T0_fptm_6, T0_fptm_7, T0_fptm_13, T0_fptm_15")
1557775285562:# HO <- c("T0_fptm23_1, T0_fptm23_4, T0_fprm_9, T0_fptm_14")
1557775285563:# ZW <- c("T0_fptm_5, T0_fptm_8, T0_fptm_11, T0_fptm_12")
1557775285565:# VH <- c("T0_fptm23_2, T0_fptm23_3, T0_fptm_10")
1557775285566:rename(ld1 = T0_fptm_6, ld2 = T0_fptm_7, ld3 = T0_fptm_13, ld4 = T0_fptm_15,
1557775285567:ho1 = T0_fptm23_1, ho2 = T0_fptm23_4, ho3 = T0_fprm_9, ho4 = T0_fptm_14,
1557775285568:zw_1 = T0_fptm_5, zw_2 = T0_fptm_8, zw_3 = T0_fptm_11, zw_4 = T0_fptm_12,
1557775285570:vh1 = T0_fptm23_2, vh2 = T0_fptm23_3, vh3 = T0_fptm_10) %>%
1557775285571:mutate(ho1 = recode(ho1, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1557775285572:ho2 = recode(ho2, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1557775285573:ho3 = recode(ho3, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1557775285574:ho4 = recode(ho4, '1' = "4",'2' = "3", '3' = "2", '4' = "1")) %>%
1557775285575:mutate(ho1 = parse_number(.$ho1),
1557775285576:ho2 = parse_number(.$ho2),
1557775285577:ho3 = parse_number(.$ho3),
1557775285579:ho4 = parse_number(.$ho4))
1557775286577:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960" # bei einer Altersangabe fehlt Monat => nehme Januar
1557775286942:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y") # Ändere Alter in Datum
1557775287328:raw_data$Alter <- 2018- year(raw_data$T0_Geb)
1557775287737:raw_data$Altersgruppen <- cut(raw_data$Alter,
1557775287738:breaks = c(-Inf, 29, 39, 49, 59, Inf), # menuCH Kategorien
1557775287739:labels = c("<29 Jahre", "30 bis 39 Jahre", "40 bis 49 Jahre", "50 bis 59 Jahre", ">60 Jahre"))
1557775288817:raw_data$Altersgruppen <- as.character(raw_data$Altersgruppen) # parse to character (parse_character funktioniet hier nicht => wieso?)
1557775289801:pattern2 <- c("T0_phq9" ,"T1_phq9", "T0_phq15", "T1_phq15", "ld", "ho", "zw_", "vh", "T0_gad", "T1_gad")
1557775291203:# achtung bei rowsums werden 0 erzeugt => ich gehe davon aus, dass diese NA' sein sollten
1557775291204:# überprüfe das mit plausibilitätschecks (...)
1557775291205:empty <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1557775291465:for (nam in pattern2) {
1557775291466:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1557775291467:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1557775291468:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1557775291470:empty[[nam]] <- sub_dat
1557775291471:}
1557775292652:data <- do.call(bind_cols,empty)
1557775293990:# slice raw_data and paste back
1557775293992:data2 <- raw_data[, c(1:23,69:78, 108:109)]
1557775294343:dat <- data[, grep("sum", names(data), value = T)]
1557775294721:raw_data2 <- bind_cols(data2, dat) # cbind
1557775303635:# drop all usless variables and rename
1557775303636:raw_data2 <- raw_data2[-55,] # contains only NA
1557775305057:#achtung ruft einige fehler aus => gründe?
1557775305059:data_wide <- raw_data2 %>%
1557775305060:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1557775305061:T0_Datum, T0_sex, T0_Schulabschluss, Alter, Altersgruppen,
1557775305062:sum, sum1, sum2, sum3, sum4, sum5, sum6, sum7, sum8, sum9) %>%
1557775305063:rename(trans = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss, age = Alter, age_group = Altersgruppen,
1557775305064:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1557775305065:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, ld = sum4, ho = sum5, zw = sum6, vh = sum7, T0_gad = sum8, T1_gad = sum9) # rename for melting data
1557775311796:View(raw_data2)
1557775418018:names(raw_data2)
1557775470126:#achtung ruft einige fehler aus => gründe?
1557775470128:data_wide <- raw_data2 %>%
1557775470129:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1557775470130:T0_Datum, T0_sex, T0_Schulabschluss, Alter, Altersgruppen) #,
1557775479319:data_wide <- raw_data2 %>%
1557775479321:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1557775479322:T0_Datum, T0_sex, T0_Schulabschluss, Alter, Altersgruppen)
1557775488065:#achtung ruft einige fehler aus => gründe?
1557775488067:data_wide <- raw_data2 %>%
1557775488068:select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG)#,
1557775533632:#achtung ruft einige fehler aus => gründe?
1557775533633:data_wide <- raw_data2 %>%
1557775533635:dplyr::select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1557775533637:T0_Datum, T0_sex, T0_Schulabschluss, Alter, Altersgruppen,
1557775533638:sum, sum1, sum2, sum3, sum4, sum5, sum6, sum7, sum8, sum9) %>%
1557775533639:rename(trans = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, educ = T0_Schulabschluss, age = Alter, age_group = Altersgruppen,
1557775533640:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1557775533643:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, ld = sum4, ho = sum5, zw = sum6, vh = sum7, T0_gad = sum8, T1_gad = sum9) # rename for melting data
1557775580015:#achtung ruft einige fehler aus => gründe?
1557775580016:data_wide <- raw_data2 %>%
1557775580017:dplyr::select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1557775580018:T0_Datum, T0_sex, T0_Schulabschluss, Alter, Altersgruppen, T0_erwerbstätig_ALLGEMEIN,
1557775580019:sum, sum1, sum2, sum3, sum4, sum5, sum6, sum7, sum8, sum9) %>%
1557775580020:rename(trans = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, work = T0_erwerbstätig_ALLGEMEIN, educ = T0_Schulabschluss, age = Alter, age_group = Altersgruppen,
1557775580022:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1557775580023:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, ld = sum4, ho = sum5, zw = sum6, vh = sum7, T0_gad = sum8, T1_gad = sum9) # rename for melting data
1557775597439:raw_data2$T0_erwerbstätig_ALLGEMEIN
1557775619220:# load themes,data, packages-----------
1557775619222:source("kira_masterarbeit_edit_190418.R")
1557775646354:# melt into long format => v.a. für statistische analysen wichtig
1557775646355:data_long <- melt(data_wide,  measure.vars = c("T0_phq9","T1_phq9", "T0_phq15", "T1_phq15", "T0_gad", "T1_gad", "ld", "ho", "zw", "vh"))
1557775653247:# load themes,data, packages-----------
1557775653249:source("kira_masterarbeit_edit_190418.R")
1557775655039:source("mytheme.R")
1557775695008:dat <- data_wide %>%
1557775695010:group_by(sex, trans) %>%
1557775695011:dplyr::summarise(tot = n()) %>%
1557775695013:mutate(pct = tot / sum(tot)) %>%
1557775695014:ungroup() %>%
1557775695015:mutate(sex = ifelse(is.na(.$sex), "Unbekannt", sex)) %>%
1557775695016:complete(sex, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1557775700766:ggplot(dat, aes(x = sex, y = tot, fill = trans)) +
1557775700767:geom_bar(stat = "identity", position = position_dodge()) +
1557775700768:mytheme
1557775712191:detach("package:psych", unload=TRUE) # attention psych and ggplot do not well togheter
1557775715514:ggplot(dat, aes(x = sex, y = tot, fill = trans)) +
1557775715515:geom_bar(stat = "identity", position = position_dodge()) +
1557775715518:mytheme
1557775767207:ggplot(dat, aes(x = sex, y = tot, fill = trans)) +
1557775767209:geom_bar(stat = "identity", position = position_dodge()) +
1557775767210:mytheme
1557775777403:fisher.test(data_wide$sex, data_wide$trans) # n.s
1557775782781:# geschlecht und transfer
1557775782782:CrossTable(data_wide$sex, data_wide$trans, fisher = T, chisq = T) # n.s. => seems weird for me => check out graphic
1557775932032:ggplot(dat, aes(x = trans, y = tot, fill = sex)) +
1557775932038:geom_bar(stat = "identity", position = position_dodge()) +
1557775932040:xlab("Überweisungsquelle") +
1557775932042:ylab("Anzahl Personen") +
1557775932044:guides(fill = guide_legend("Geschlecht"))
1557775936238:ggplot(dat, aes(x = trans, y = tot, fill = sex)) +
1557775936241:geom_bar(stat = "identity", position = position_dodge()) +
1557775936244:xlab("Überweisungsquelle") +
1557775936246:ylab("Anzahl Personen") +
1557775936251:guides(fill = guide_legend("Geschlecht")) +
1557775936253:mytheme
1557776102177:scale_fill_manual(values = c("F" = "#8b0000", "M" = "#1c661c", "Unbekannt" = "grey30", labels = c("Frauen", "Männer", "Unbekannt"))
1557776109303:scale_fill_manual(values = c("F" = "#8b0000", "M" = "#1c661c", "Unbekannt" = "grey30", labels = c("Frauen", "Männer", "Unbekannt")) +
1557776121358:ggplot(dat, aes(x = trans, y = tot, fill = sex)) +
1557776121360:geom_bar(stat = "identity", position = position_dodge()) +
1557776121361:xlab("Überweisungsquelle") +
1557776121362:ylab("Anzahl Personen") +
1557776121364:scale_fill_manual(values = c("F" = "#8b0000", "M" = "#1c661c", "Unbekannt" = "grey30"), labels = c("Frauen", "Männer", "Unbekannt")) +
1557776121365:guides(fill = guide_legend("Geschlecht")) +
1557776121366:mytheme
1557776138264:ggplot(dat, aes(x = trans, y = tot, fill = sex)) +
1557776138265:geom_bar(stat = "identity", position = position_dodge()) +
1557776138266:xlab("Überweisungsquelle") +
1557776138268:ylab("Anzahl Personen") +
1557776138269:scale_fill_manual(values = c("F" = "#8b0000", "M" = "#1c661c", "Unbekannt" = "grey80"), labels = c("Frauen", "Männer", "Unbekannt")) +
1557776138271:guides(fill = guide_legend("Geschlecht")) +
1557776138272:mytheme
1557776205688:ggsave("plots/gender_condit_190513.pdf",
1557776205689:height = 12
1557776205690:width = 12,
1557776205691:devive = cairo_pdf)
1557776218590:ggsave("plots/gender_condit_190513.pdf",
1557776218596:height = 12,
1557776218600:width = 12,
1557776218603:devive = cairo_pdf)
1557776285555:detach("package:multilevel", unload=TRUE)
1557776306703:# load themes,data, packages-----------
1557776306711:source("kira_masterarbeit_edit_190418.R")
1557776309256:source("mytheme.R")
1557776311009:detach("package:psych", unload=TRUE) # attention psych and ggplot do not well togheter
1557776312112:library(cowplot)
1557776313219:library(lme4)
1557776334098:dat <- data_wide %>%
1557776334112:# filter(!duplicated(raw_data3$Patientencode)) %>%
1557776334114:dplyr::group_by(trans) %>%
1557776334115:dplyr::summarise(tot = n()) %>%
1557776334117:mutate(pct = tot / sum(tot))
1557776334514:ggplot(dat, aes(x = trans, y = pct)) +
1557776334520:geom_bar(stat = "identity") +
1557776334522:scale_y_continuous(labels = scales::percent) +
1557776334530:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25, size = 9) +
1557776334536:mytheme
1557776345571:dat <- data_wide %>%
1557776345578:group_by(sex, trans) %>%
1557776345579:dplyr::summarise(tot = n()) %>%
1557776345582:mutate(pct = tot / sum(tot)) %>%
1557776345584:ungroup() %>%
1557776345585:mutate(sex = ifelse(is.na(.$sex), "Unbekannt", sex)) %>%
1557776345586:complete(sex, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1557776346892:ggplot(dat, aes(x = trans, y = tot, fill = sex)) +
1557776346902:geom_bar(stat = "identity", position = position_dodge()) +
1557776346922:xlab("Überweisungsquelle") +
1557776346928:ylab("Anzahl Personen") +
1557776346934:scale_fill_manual(values = c("F" = "#8b0000", "M" = "#1c661c", "Unbekannt" = "grey80"), labels = c("Frauen", "Männer", "Unbekannt")) +
1557776346939:guides(fill = guide_legend("Geschlecht")) +
1557776346943:mytheme
1557776349004:ggsave("plots/gender_condit_190513.pdf",
1557776349007:height = 12,
1557776349008:width = 12,
1557776349009:devive = cairo_pdf)
1557776357229:?ggsave
1557776398599:ggsave("plots/gender_condit_190513.pdf",
1557776398601:height = 12,
1557776398606:width = 12,
1557776398614:devive = cairo)
1557776404933:ggsave("plots/gender_condit_190513.pdf",
1557776404936:height = 12,
1557776404937:width = 12,
1557776404939:devive = "pdf")
1557776410544:ggsave("plots/gender_condit_190513.pdf",
1557776410548:height = 12,
1557776410550:width = 12,
1557776410551:devive = pdf)
1557776422130:ggsave("plots/gender_condit_190513.pdf",
1557776422139:height = 12,
1557776422148:width = 12,
1557776422151:devive = png)
1557776436372:ggsave("plots/gender_condit_190513.pdf",
1557776436375:height = 12,
1557776436376:width = 12,
1557776436377:device = cairo_pdf)
1557776467122:dat <- data_wide %>%
1557776467126:group_by(age_group, trans) %>%
1557776467131:dplyr::summarise(tot = n()) %>%
1557776467132:mutate(pct = tot / sum(tot)) %>%
1557776467135:ungroup() %>%
1557776467137:mutate(age_group = ifelse(is.na(.$age_group), "Unbekannt", age_group)) %>%
1557776467138:complete(age_group, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1557776468691:ggplot(dat, aes(x = age_group, y = tot, fill = trans)) +
1557776468697:geom_bar(stat = "identity", position = position_dodge()) +
1557776468706:mytheme
1557776491902:ggplot(dat, aes(x = condit, y = tot, fill = age_group)) +
1557776491904:geom_bar(stat = "identity", position = position_dodge()) +
1557776491905:mytheme
1557776500614:ggplot(dat, aes(x = trans, y = tot, fill = age_group)) +
1557776500619:geom_bar(stat = "identity", position = position_dodge()) +
1557776500627:mytheme
1557776527028:ggplot(dat, aes(x = trans, y = pct, fill = age_group)) +
1557776527030:geom_bar(stat = "identity", position = position_dodge()) +
1557776527031:mytheme
1557776553296:data_wide %>%
1557776553346:group_by(age_group, trans) %>%
1557776553347:dplyr::summarise(tot = n()) %>%
1557776553348:mutate(pct = tot / sum(tot))
1557776615124:dat <- data_wide %>%
1557776615131:group_by(trans, age_group) %>%
1557776615136:dplyr::summarise(tot = n()) %>%
1557776615143:mutate(pct = tot / sum(tot)) %>%
1557776615146:ungroup() %>%
1557776615154:mutate(age_group = ifelse(is.na(.$age_group), "Unbekannt", age_group)) %>%
1557776615157:complete(age_group, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1557776618372:ggplot(dat, aes(x = trans, y = pct, fill = age_group)) +
1557776618373:geom_bar(stat = "identity", position = position_dodge()) +
1557776618374:mytheme
1557776624572:ggplot(dat, aes(x = trans, y = pct, fill = age_group)) +
1557776624581:geom_bar(stat = "identity", position = position_stack()) +
1557776624601:mytheme
1557776682859:ggplot(dat, aes(x = age_group, y = pct, fill = trans)) +
1557776682860:geom_bar(stat = "identity", position = position_stack()) +
1557776682862:mytheme
1557776692941:ggplot(dat, aes(x = age_group, y = pct, fill = trans)) +
1557776692944:geom_bar(stat = "identity", position = position_dodge()) +
1557776692946:mytheme
1557776782069:ggplot(dat, aes(x = sex, y = tot, fill = trans)) +
1557776782084:geom_bar(stat = "identity", position = position_dodge()) +
1557776782086:xlab("Geschlecht") +
1557776782088:ylab("Anzahl Personen") +
1557776782094:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1557776782095:guides(fill = guide_legend("Überweisungsquelle")) +
1557776782100:mytheme
1557776786655:dat <- data_wide %>%
1557776786658:group_by(sex, trans) %>%
1557776786659:dplyr::summarise(tot = n()) %>%
1557776786661:mutate(pct = tot / sum(tot)) %>%
1557776786663:ungroup() %>%
1557776786665:mutate(sex = ifelse(is.na(.$sex), "Unbekannt", sex)) %>%
1557776786666:complete(sex, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1557776787013:ggplot(dat, aes(x = sex, y = tot, fill = trans)) +
1557776787014:geom_bar(stat = "identity", position = position_dodge()) +
1557776787015:xlab("Geschlecht") +
1557776787017:ylab("Anzahl Personen") +
1557776787018:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1557776787019:guides(fill = guide_legend("Überweisungsquelle")) +
1557776787020:mytheme
1557776856824:ggplot(dat, aes(x = sex, y = tot, fill = trans)) +
1557776856828:geom_bar(stat = "identity", position = position_dodge()) +
1557776856833:xlab("Geschlecht") +
1557776856838:ylab("Anzahl Personen") +
1557776856842:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1557776856846:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer"))
1557776869866:ggplot(dat, aes(x = sex, y = tot, fill = trans)) +
1557776869868:geom_bar(stat = "identity", position = position_dodge()) +
1557776869869:xlab("Geschlecht") +
1557776869871:ylab("Anzahl Personen") +
1557776869872:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1557776869873:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1557776869876:guides(fill = guide_legend("Überweisungsquelle")) +
1557776869877:mytheme
1557776871219:ggsave("plots/gender_condit_190513.pdf",
1557776871222:height = 12,
1557776871232:width = 12,
1557776871233:device = cairo_pdf)
1557776878394:dat <- data_wide %>%
1557776878395:group_by(trans, age_group) %>%
1557776878397:dplyr::summarise(tot = n()) %>%
1557776878398:mutate(pct = tot / sum(tot)) %>%
1557776878399:ungroup() %>%
1557776878401:mutate(age_group = ifelse(is.na(.$age_group), "Unbekannt", age_group)) %>%
1557776878402:complete(age_group, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1557776895662:ggplot(dat, aes(x = dat$educ, y = dat$tot, fill = dat$trans)) +
1557776895664:geom_bar(stat = "identity", position = position_dodge()) +
1557776895668:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1557776895669:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1557776895671:guides(fill = guide_legend("Überweisungsquelle")) +
1557776895674:mytheme
1557776911165:dat <- data_wide %>%
1557776911166:group_by(trans, age_group) %>%
1557776911170:dplyr::summarise(tot = n()) %>%
1557776911171:mutate(pct = tot / sum(tot)) %>%
1557776911172:ungroup() %>%
1557776911173:mutate(age_group = ifelse(is.na(.$age_group), "Unbekannt", age_group)) %>%
1557776911174:complete(age_group, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1557776911697:ggplot(dat, aes(x = age_group, y = pct, fill = trans)) +
1557776911699:geom_bar(stat = "identity", position = position_dodge()) +
1557776911700:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1557776911702:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1557776911703:guides(fill = guide_legend("Überweisungsquelle")) +
1557776911704:mytheme
1557776956170:unique(dat$age_group)
1557776996849:ggplot(dat, aes(x = parse_factor(age_group, levels = c("<29 Jahre", "30 bis 39 Jahre", "40 bis 49 Jahre", "50 bis 59 Jahre", ">60 Jahre", "Unbekannt")), y = pct, fill = trans)) +
1557776996850:geom_bar(stat = "identity", position = position_dodge()) +
1557776996851:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1557776996853:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1557776996855:guides(fill = guide_legend("Überweisungsquelle")) +
1557776996856:mytheme
1557777041298:ggplot(dat, aes(x = parse_factor(age_group, levels = c("<29 Jahre", "30 bis 39 Jahre", "40 bis 49 Jahre", "50 bis 59 Jahre", ">60 Jahre", "Unbekannt")), y = pct, fill = trans)) +
1557777041304:geom_bar(stat = "identity", position = position_dodge()) +
1557777041309:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1557777041311:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1557777041315:guides(fill = guide_legend("Überweisungsquelle")) +
1557777041318:xlab("Alter") +
1557777041321:ylab("Anzahl Personen")
1557777095528:ggsave("plots/age_trans_190513.pdf",
1557777095530:height = 12,
1557777095531:width = 17,
1557777095532:device = cairo_pdf)
1557777116849:ggplot(dat, aes(x = parse_factor(age_group, levels = c("<29 Jahre", "30 bis 39 Jahre", "40 bis 49 Jahre", "50 bis 59 Jahre", ">60 Jahre", "Unbekannt")), y = pct, fill = trans)) +
1557777116851:geom_bar(stat = "identity", position = position_dodge()) +
1557777116861:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1557777116879:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1557777116886:guides(fill = guide_legend("Überweisungsquelle")) +
1557777116894:xlab("Alter") +
1557777116900:ylab("Anzahl Personen") +
1557777116905:mytheme
1557777117486:ggsave("plots/age_trans_190513.pdf",
1557777117488:height = 12,
1557777117492:width = 17,
1557777117494:device = cairo_pdf)
1557777131531:ggsave("plots/age_trans_190513.pdf",
1557777131533:height = 12,
1557777131538:width = 18,
1557777131541:device = cairo_pdf)
1557777149026:ggplot(dat, aes(x = parse_factor(age_group, levels = c("<29 Jahre", "30 bis 39 Jahre", "40 bis 49 Jahre", "50 bis 59 Jahre", ">60 Jahre", "Unbekannt")), y = pct, fill = trans)) +
1557777149028:geom_bar(stat = "identity", position = position_dodge(), width = .6) +
1557777149029:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1557777149031:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1557777149032:guides(fill = guide_legend("Überweisungsquelle")) +
1557777149034:xlab("Alter") +
1557777149035:ylab("Anzahl Personen") +
1557777149036:mytheme
1557777149984:ggsave("plots/age_trans_190513.pdf",
1557777149985:height = 12,
1557777149987:width = 18,
1557777149988:device = cairo_pdf)
1557777166720:dat <- data_wide %>%
1557777166728:group_by(sex, trans) %>%
1557777166743:dplyr::summarise(tot = n()) %>%
1557777166745:mutate(pct = tot / sum(tot)) %>%
1557777166749:ungroup() %>%
1557777166753:mutate(sex = ifelse(is.na(.$sex), "Unbekannt", sex)) %>%
1557777166756:complete(sex, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1557777167039:ggplot(dat, aes(x = sex, y = tot, fill = trans)) +
1557777167040:geom_bar(stat = "identity", position = position_dodge(), width = .6) +
1557777167042:xlab("Geschlecht") +
1557777167043:ylab("Anzahl Personen") +
1557777167045:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1557777167046:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1557777167047:guides(fill = guide_legend("Überweisungsquelle")) +
1557777167048:mytheme
1557777167642:ggsave("plots/gender_condit_190513.pdf",
1557777167643:height = 12,
1557777167644:width = 12,
1557777167648:device = cairo_pdf)
1557777175493:dat <- data_wide %>%
1557777175494:group_by(educ, trans) %>%
1557777175499:dplyr::summarise(tot = n()) %>%
1557777175501:mutate(pct = tot / sum(tot)) %>%
1557777175502:ungroup() %>%
1557777175504:mutate(educ = ifelse(is.na(.$educ), "Unbekannt", educ)) %>%
1557777175505:complete(educ, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1557777179026:ggplot(dat, aes(x = dat$educ, y = dat$tot, fill = dat$trans)) +
1557777179028:geom_bar(stat = "identity", position = position_dodge()) +
1557777179029:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1557777179030:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1557777179032:guides(fill = guide_legend("Überweisungsquelle")) +
1557777179033:mytheme
1557777252317:ggplot(dat, aes(x = dat$educ, y = dat$tot, fill = trans)) +
1557777252319:geom_bar(stat = "identity", position = position_dodge()) +
1557777252320:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c")) +
1557777252321:guides(fill = guide_legend("Überweisungsquelle")) +
1557777252323:xlab("Höchster Schulabschluss") +
1557777252324:ylab("Anzahl Personen")
1557777333672:unique(dat$educ)
1557777396759:ggplot(dat, aes(x = parse_factor(educ, levels = c("Primar/Sekundarschule", "Berufsmaturität", "Sekundarschule", "Fachmatur", "Fachchule", "Universität", "anderes", "Unbekannt")), y = tot, fill = trans)) +
1557777396760:geom_bar(stat = "identity", position = position_dodge()) +
1557777396761:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c")) +
1557777396762:guides(fill = guide_legend("Überweisungsquelle")) +
1557777396763:xlab("Höchster Schulabschluss") +
1557777396764:ylab("Anzahl Personen")
1557777512590:ggplot(dat, aes(x = parse_factor(educ, levels = c("Primar/Sekundarschule", "Berufsmaturität", "Sekundarschule", "Fachmatur", "Fachchule", "Universität", "anderes", "Unbekannt")), y = tot, fill = trans)) +
1557777512591:geom_bar(stat = "identity", position = position_dodge()) +
1557777512593:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c")) +
1557777512594:guides(fill = guide_legend("Überweisungsquelle")) +
1557777512595:scale_x_discrete(labels = c("Primar-/Sekundarstufe", "Berufsmaturität", "Sekundarstufe2", "Fachmittelschule/-maturität", "höhere Fachschule", "Universität", "anderer Abschluss", "Unbekannt")) +
1557777512597:xlab("Höchster Schulabschluss") +
1557777512598:ylab("Anzahl Personen")
1557777549992:# is not working => attention detach psych package
1557777549994:ggsave("plots/educ_trans_190513.pdf",
1557777549995:height = 12,
1557777549996:width = 19,
1557777549997:device = cairo_pdf)
1557777576439:ggplot(dat, aes(x = parse_factor(educ, levels = c("Primar/Sekundarschule", "Berufsmaturität", "Sekundarschule", "Fachmatur", "Fachchule", "Universität", "anderes", "Unbekannt")), y = tot, fill = trans)) +
1557777576440:geom_bar(stat = "identity", position = position_dodge()) +
1557777576441:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c")) +
1557777576442:guides(fill = guide_legend("Überweisungsquelle")) +
1557777576444:scale_x_discrete(labels = c("Primar-/Sekundarstufe", "Berufsmaturität", "Sekundarstufe2", "Fachmittelschule/-maturität", "höhere Fachschule", "Universität", "anderer Abschluss", "Unbekannt")) +
1557777576445:xlab("Höchster Schulabschluss") +
1557777576446:ylab("Anzahl Personen") +
1557777576447:mytheme
1557777578089:# is not working => attention detach psych package
1557777578091:ggsave("plots/educ_trans_190513.pdf",
1557777578092:height = 12,
1557777578093:width = 19,
1557777578095:device = cairo_pdf)
1557777592621:ggplot(dat, aes(x = parse_factor(educ, levels = c("Primar/Sekundarschule", "Berufsmaturität", "Sekundarschule", "Fachmatur", "Fachchule", "Universität", "anderes", "Unbekannt")), y = tot, fill = trans)) +
1557777592622:geom_bar(stat = "identity", position = position_dodge(), width = .6) +
1557777592623:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c")) +
1557777592625:guides(fill = guide_legend("Überweisungsquelle")) +
1557777592626:scale_x_discrete(labels = c("Primar-/Sekundarstufe", "Berufsmaturität", "Sekundarstufe2", "Fachmittelschule/-maturität", "höhere Fachschule", "Universität", "anderer Abschluss", "Unbekannt")) +
1557777592627:xlab("Höchster Schulabschluss") +
1557777592628:ylab("Anzahl Personen") +
1557777592629:mytheme
1557777594321:# is not working => attention detach psych package
1557777594322:ggsave("plots/educ_trans_190513.pdf",
1557777594323:height = 12,
1557777594325:width = 19,
1557777594326:device = cairo_pdf)
1557777602109:# is not working => attention detach psych package
1557777602110:ggsave("plots/educ_trans_190513.pdf",
1557777602112:height = 12,
1557777602113:width = 25,
1557777602116:device = cairo_pdf)
1557777613031:# is not working => attention detach psych package
1557777613032:ggsave("plots/educ_trans_190513.pdf",
1557777613034:height = 12,
1557777613035:width = 30,
1557777613036:device = cairo_pdf)
1557777780201:CrossTable(data_wide$sex, data_wide$condit, fisher = T, chisq = T) # one missing, n.s.
1557777875090:table(data_wide$trans)
1557777885659:# schaue boxplots an => varianzhomogenität gegeben
1557777885660:ggplot(data_wide, aes( y = T0_phq9, x = data_wide$trans)) +
1557777885661:geom_boxplot() +
1557777885662:xlab("Überweisungsquelle") +
1557777885663:ylab("Summenscore PHQ-9 Zeitpunkt T0") +
1557777885664:scale_y_continuous(limits = c(0,30))+
1557777885665:mytheme# varianzen fast gleich, verteilung aber nicht (PR rechtsschief)
1557777959653:psych::describe(data_wide$T0_phq9)
1557778215848:t.test(data_wide$T0_phq9 ~ data_wide$trans) # n.s.
1557778329740:shapiro.test(data_wide[data_wi]$T0_phq9)
1557778346051:shapiro.test(data_wide[data_wide$trans == "PR"]$T0_phq9)
1557778352025:shapiro.test(data_wide[data_wide$trans == "PR", ]$T0_phq9)
1557778371516:shapiro.test(data_wide[data_wide$trans == "SR", ]$T0_phq9)
1557779014061:psych::describe(data_wide[data_wide$trans == "PR", ]$T0_phq9)
1557779044707:psych::describe(data_wide[data_wide$trans == "SR", ]$T0_phq9)
1557779589041:wilcox.test(data_wide$T0_phq9 ~ data_wide$trans)
1557779676522:# subsample
1557779676523:pat <- c("ld|ho|zw|vh")
1557779677489:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value), ]
1557779681116:table(t$trans)
1557779685280:# überprüfe ob auch alle datenpunkte drin sind
1557779685281:t <- dat %>%
1557779685282:group_by(Patientencode, trans) %>%
1557779685283:summarise(occur = n()) %>%
1557779685284:mutate(occur = ifelse(occur == 5, T, F))
1557779687188:sum(t$occur) # 53 personen
1557779690492:table(t$trans)
1557779700478:sum(t$occur) # 53 personen
1557779705349:# überprüfe ob auch alle datenpunkte drin sind
1557779705351:t <- dat %>%
1557779705352:group_by(Patientencode, trans) %>%
1557779705354:summarise(occur = n()) %>%
1557779705355:mutate(occur = ifelse(occur == 5, T, F))
1557779706099:sum(t$occur) # 53 personen
1557779852810:aggregate(value ~ variable + trans, dat, function(x) c(mean = mean(x), sd = sd(x)))
1557779925838:# schaue die mittelwerte an
1557779925839:a <- aggregate(value ~ variable + trans, dat, function(x) c(mean = mean(x), sd = sd(x)))
1557779932407:str(a)
1557779944661:View(a)
1557780012927:# schaue die mittelwerte an
1557780012931:aggregate(value ~ variable, dat, function(x) c(mean = mean(x), sd = sd(x)))
1557780698349:aggregate(value ~ variable + trans, dat, function(x) c(mean = mean(x), sd = sd(x), min = min(x), max = max(x)))
1557780889556:# ld: n.s.
1557780889557:summary.lm(aov(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans))
1557780916617:# ld: n.s.
1557780916618:av1 <- summary.lm(aov(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans))
1557780920226:ggfortify::autoplot(av1)
1557780931314:autoplot(av1)
1557780943835:# ld: n.s.
1557780943836:av1 <- aov(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans)
1557780944795:autoplot(av1)
1557780974383:boxplot(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans))
1557780980299:boxplot(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans)
1557780986247:boxplot(dat[dat$variable == "ld",]$value, dat[dat$variable == "ld",]$trans)
1557780988568:boxplot(dat[dat$variable == "ld",]$value, dat[dat$variable == "ld",]$trans)
1557781000996:dat[dat$variable == "ld",]$value
1557781005672:dat[dat$variable == "ld",]$trans
1557781016441:?boxplot
1557781031101:boxplot(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans)
1557781041707:boxplot(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans)
1557781094570:boxplot(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",]$trans)
1557781121040:wilcox.test(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",]$trans)
1557781169171:boxplot(dat[dat$variable == "zw",]$value ~ dat[dat$variable == "zw",]$trans)
1557781177946:wilcox.test(dat[dat$variable == "zw",]$value ~ dat[dat$variable == "zw",]$trans)
1557781213815:boxplot(dat[dat$variable == "vh",]$value ~ dat[dat$variable == "vh",]$trans)
1557781216735:wilcox.test(dat[dat$variable == "vh",]$value ~ dat[dat$variable == "vh",]$trans)
1557781358563:boxplot(dat[dat$variable == "zw",]$value ~ dat[dat$variable == "zw",]$trans)
1557781416882:# subsample
1557781416884:dat <- data_long[data_long$variable == "T0_gad" & !is.na(data_long$value),] # eine person fehlt
1557781418361:# paar weitere parameter
1557781418362:table(dat$trans)
1557781511175:dat <- data_long[data_long$variable == "T0_gad" & !is.na(data_long$value),]
1557781518800:#plotte das ergebnis =>  boxplot
1557781518802:ggplot(dat, aes(x = trans, y = value)) +
1557781518804:geom_boxplot() +
1557781518805:xlab("Überweisungsquelle") +
1557781518807:ylab("Summenscore GAD") +
1557781518809:scale_y_continuous(limits = c(0,25)) +
1557781518812:mytheme
1557781611828:# fisher test
1557781611829:wilcox.test(data_wide$T0_gad ~ data_wide$trans)
1557781661716:# subsample
1557781661718:dat <- data_long[grepl("T0_phq15", data_long$variable) &! is.na(dat$value), ] # zwei fehlende werte
1557781699750:# subsample
1557781699752:dat <- data_long[grepl("T0_phq15", data_long$variable) &! is.na(data_long$value), ] # zwei fehlende werte
1557781702538:# schaue daten an
1557781702540:table(dat$trans) # nur erste drei linien vom obigen code
1557781800535:# man u test
1557781800536:wilcox.test(data_wide$T0_phq15 ~ data_wide$trans)
1557781907390:#plotte ergebnisse
1557781907392:ggplot(dat, aes(x = trans, y = value)) +
1557781907393:geom_boxplot() +
1557781907395:xlab("Überweisungsquelle") +
1557781907396:ylab("Summenscore PHQ-15") +
1557781907397:scale_y_continuous(limits = c(0,25)) +
1557781907398:mytheme
1557782126703:# t-test
1557782126706:t.test(data_wide$T0_phq15 ~ data_wide$trans)
1557782179837:# t-test
1557782179840:t.test(data_wide$T0_gad ~ data_wide$trans)
1557782195849:#plotte das ergebnis =>  boxplot
1557782195853:ggplot(dat, aes(x = trans, y = value)) +
1557782195854:geom_boxplot() +
1557782195855:xlab("Überweisungsquelle") +
1557782195857:ylab("Summenscore GAD") +
1557782195858:scale_y_continuous(limits = c(0,25)) +
1557782195861:mytheme
1557782212758:# subsample
1557782212760:dat <- data_long[data_long$variable == "T0_gad" & !is.na(data_long$value),] # eine person fehlt
1557782216665:#plotte das ergebnis =>  boxplot
1557782216667:ggplot(dat, aes(x = trans, y = value)) +
1557782216668:geom_boxplot() +
1557782216669:xlab("Überweisungsquelle") +
1557782216670:ylab("Summenscore GAD") +
1557782216671:scale_y_continuous(limits = c(0,25)) +
1557782216672:mytheme
1557782253002:# t-test
1557782253003:t.test(data_wide$T0_gad ~ data_wide$trans)
1557782395204:# subsample
1557782395205:dat <- data_wide[data_wide$condit == "Intervention" & !is.na(data_wide$T1_phq9),] # nehme nur personen aus der Intervention (telefongespräche)
1557782400173:# h1b:schaue boxplots an
1557782400176:# hier ein beispiel für die resultate: http://rcompanion.org/handbook/I_06.html
1557782400179:p1 <- ggplot(dat, aes(y = dat$T0_phq9 , x = trans)) +
1557782400181:geom_boxplot() +
1557782400183:scale_y_continuous(limits = c(0,20))# dont look very nice :(
1557782401874:# ggplot(dat, aes(x = dat$T0_phq9 )) + geom_histogram()
1557782401876:p2 <- ggplot(dat, aes(y = dat$T1_phq9 , x = trans)) +
1557782401878:geom_boxplot() +
1557782401879:scale_y_continuous(limits = c(0,20))# looks good
1557782403153:plot_grid(p1, p2, ncol = 2)
1557782552832:# h1b:linienplot (mit mittelwerten)
1557782552835:pl <- dat2 %>%
1557782552836:group_by(variable, trans, condit) %>%
1557782552837:summarise(mean_t = mean(value))
1557782553147:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1557782553148:geom_point(size= 4) +
1557782553150:geom_line(size = 1.5) +
1557782553151:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557782553153:ylab("Mittelwerte der Summenscore") +
1557782553169:xlab("Zeitpunkt") +
1557782553170:guides(linetype = guide_legend(title = "Überweisungsquelle"), shape = F) +
1557782553171:facet_wrap(~condit) +
1557782553173:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1557782553175:mytheme
1557782558874:# h1b:linienplot (mit mittelwerten)
1557782558876:pl <- dat2 %>%
1557782558877:group_by(variable, trans, condit) %>%
1557782558878:summarise(mean_t = mean(value))
1557782580863:# h1b:versuche das ganze zu plotten
1557782580864:pat <- ("T0_phq9|T1_phq9")
1557782584571:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1557782587328:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1557782587329:dat2 <- group_by(dat1, Patientencode) %>%
1557782587331:summarise(occur = n()) %>%
1557782587333:filter(occur == 2) %>%
1557782587334:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1557782617831:View(dat2)
1557782632684:92/2
1557782654096:# h1b:linienplot (mit mittelwerten)
1557782654098:pl <- dat2 %>%
1557782654099:group_by(variable, trans, condit) %>%
1557782654100:summarise(mean_t = mean(value))
1557782654939:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1557782654940:geom_point(size= 4) +
1557782654942:geom_line(size = 1.5) +
1557782654943:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1557782654944:ylab("Mittelwerte der Summenscore") +
1557782654945:xlab("Zeitpunkt") +
1557782654946:guides(linetype = guide_legend(title = "Überweisungsquelle"), shape = F) +
1557782654947:facet_wrap(~condit) +
1557782654948:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1557782654949:mytheme
1557782734486:lm1 <- glmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (1|dat2$Patientencode))
1557782753644:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (1|dat2$Patientencode))
1557782755286:summary(lm1)
1557782829851:# teste selbe mit anova: andere p-werte
1557782829852:av1 <- aov(value ~ variable * trans * condit, data = dat2)
1557782832802:autoplot(av1) # nicht möglich mit Error block resp. av2
1557782988284:# teste selbe mit anova: andere p-werte
1557782988286:av1 <- aov(log10(value) ~ variable * trans * condit, data = dat2)
1557782990572:autoplot(av1) # nicht möglich mit Error block resp. av2
1557783393753:# überprüfe nochmals die modell-güte
1557783393754:#1. Zufällige Abweichungen sind normalverteilt mit EW 0 und Varianz
1557783393755:pl <- lme4::ranef(lm1)$`dat2$Patientencode`
1557783395343:boxplot(pl[[1]] ~ rownames(pl), xlab = "Patient", ylab = "Zufällige Abweichungen") # nicht sehr normalverteilt
1557783397861:abline(h = c(-2,2), col = "red")
1557783400450:abline(h = 0, col = "black")
1557783639071:av1 <- aov(value ~ variable * trans * condit, data = dat2)
1557783645753:summary(av1)
1557783652422:autoplot(av1) # nicht möglich mit Error block resp. av2
1557783967429:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (1|dat2$Patientencode))
1557783969817:summary(lm1)
1557784615841:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$condit + (1|dat2$Patientencode))
1557784618436:summary(lm1)
1557785478108:lm <- lm(data_wide$T1_phq9 ~ data_wide$T0_phq9 * data_wide$trans * data_wide$ld)
1557785490339:summary.lm(lm)
1557817768892:library(multilevel)
1557817769338:ICC1(av) # 10% ja gibt gruppenvariablität/subjektvariablität
1557817812253:#daten aufbereiten
1557817812254:dat <- melt(data_wide, measure.vars = c("T0_phq9", "T1_phq9")) %>%
1557817812255:select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1557817812256:drop_na(value)
1557817820729:dat <- melt(data_wide, measure.vars = c("T0_phq9", "T1_phq9"))
1557817824636:View(dat)
1557817836232:#daten aufbereiten
1557817836234:dat <- melt(data_wide, measure.vars = c("T0_phq9", "T1_phq9")) %>%
1557817836235:select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1557817836236:drop_na(value)
1557817853874:#daten aufbereiten
1557817853875:dat <- data_wide %>%
1557817853876:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1557817853877:select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1557817853878:drop_na(value)
1557817860540:dat <- data_wide %>%
1557817860543:melt(measure.vars = c("T0_phq9", "T1_phq9"))
1557817868262:dat <- data_wide %>%
1557817868264:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1557817868266:select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad)
1557817885700:#daten aufbereiten
1557817885702:dat <- data_wide %>%
1557817885703:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1557817885704:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1557817885706:drop_na(value)
1557817902786:lm <- lm(data_wide$T1_phq9 ~ data_wide$T0_phq9 * data_wide$trans * data_wide$ld)
1557817904587:summary.lm(lm)
1557817933069:# model
1557817933071:av3 <- aov(value ~ variable * trans * ld + Error(Patientencode), data = dat2)
1557817935607:# model
1557817935608:av3 <- aov(value ~ variable * trans * ld + Error(Patientencode), data = dat)
1557817950485:lm <- lm(data_wide$T1_phq9 ~ data_wide$T0_phq9 * data_wide$trans * data_wide$ld + (1|Patientencode))
1557817956748:View(dat)
1557817976800:lm <- lm(T1_phq9 ~ T0_phq9 * trans * ld + (1|Patientencode), data = dat)
1557818033512:lm <- lm(data_wide$T1_phq9 ~ data_wide$T0_phq9 * data_wide$trans * data_wide$ld + (1|data_wide$Patientencode))
1557818042335:lm <- lmer(data_wide$T1_phq9 ~ data_wide$T0_phq9 * data_wide$trans * data_wide$ld + (1|data_wide$Patientencode))
1557818085588:lm2 <- lmer(values ~ variable * ld + (1|Patientencode), data = dat)
1557818091925:names(dat)
1557818100741:lm2 <- lmer(value ~ variable * ld + (1|Patientencode), data = dat)
1557818106940:summary(lm)
1557818121612:summary(lm2)
1557818325837:# modell => ist das korrekt
1557818325839:lm2 <- lmer(value ~ variable * ld + (1|variable + Patientencode), data = dat)
1557818334029:# modell => ist das korrekt
1557818334050:lm2 <- lmer(value ~ variable * ld + (1|variable * Patientencode), data = dat)
1557818347612:# modell => ist das korrekt
1557818347613:lm2 <- lmer(value ~ variable * ld + (variable| Patientencode), data = dat)
1557818551524:dat2 <- group_by(dat, Patientencode) %>%
1557818551526:summarise(occur = n()) %>%
1557818551527:filter(occur == 2)
1557818559180:# check again
1557818559182:dat2 <- group_by(dat, Patientencode) %>%
1557818559183:summarise(occur = n()) %>%
1557818559184:filter(occur == 2) %>%
1557818559185:left_join(., dat1, by = "Patientencode")
1557818573843:# modell => ist das korrekt
1557818573844:lm2 <- lmer(value ~ variable * ld + (1|Patientencode), data = dat)
1557818574455:summary(lm) # interaktionseffekte (haupt und interaktionseffekte für ld)
1557818577764:# modell => ist das korrekt
1557818577765:lm2 <- lmer(value ~ variable * ld + (1|Patientencode), data = dat)
1557818577994:summary(lm) # interaktionseffekte (haupt und interaktionseffekte für ld)
1557818587381:# macht dieses modell sinn
1557818587383:lm <- lmer(data_wide$T1_phq9 ~ data_wide$T0_phq9 * data_wide$trans * data_wide$ld + (1|data_wide$Patientencode)) # 46 personen
1557818613519:# macht dieses modell sinn
1557818613520:lm <- aov(data_wide$T1_phq9 ~ data_wide$T0_phq9 * data_wide$trans * data_wide$ld + Error(variable/data_wide$Patientencode))# funktioniert nicht
1557818622108:# macht dieses modell sinn
1557818622109:lm <- aov(data_wide$T1_phq9 ~ data_wide$T0_phq9 * data_wide$trans * data_wide$ld + Error(trans/data_wide$Patientencode))# funktioniert nicht
1557818629508:# macht dieses modell sinn
1557818629510:lm <- aov(data_wide$T1_phq9 ~ data_wide$T0_phq9 * data_wide$trans * data_wide$ld + Error(data_wide$trans/data_wide$Patientencode))# funktioniert nicht
1557818636718:# macht dieses modell sinn
1557818636719:lm <- aov(data_wide$T1_phq9 ~ data_wide$T0_phq9 * data_wide$trans * data_wide$ld + Error(1/data_wide$Patientencode))# funktioniert nicht
1557818640394:summary.lm(lm)
1557818644738:summary(lm)
1557818697046:# modell => ist das korrekt
1557818697047:lm2 <- lmer(value ~ variable * ld + (1|Patientencode), data = dat)
1557818697419:summary(lm) # interaktionseffekte (haupt und interaktionseffekte für ld)
1557818702186:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1557826713117:library(brms)
1557826742636:pat <- ("T0_phq9|T1_phq9")
1557826742637:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1557826742642:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1557826742644:dat2 <- group_by(dat1, Patientencode) %>%
1557826742645:summarise(occur = n()) %>%
1557826742646:filter(occur == 2) %>%
1557826742648:left_join(., dat1, by = "Patientencode")
1557826745780:get_prior(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (1|dat2$Patientencode))
1557826771581:get_prior(value ~ variable * trans * condit + (1|Patientencode), data = dat2)
1557828281454:?brmsformula
1557833258996:lm2 <- lmer(T1_phq9 ~ T0_phq9 * trans * ld + (1|Patientencode), data = data_wide)
1557833273405:lm2 <- lmer(T1_phq9 ~ T0_phq9 * ld + (trans|Patientencode), data = data_wide)
1557833277923:lm2 <- lmer(T1_phq9 ~ T0_phq9 * ld + (1|Patientencode), data = data_wide)
1557833294948:lm2 <- lmer(T1_phq9 ~ T0_phq9 * ld + (1|trans/Patientencode), data = data_wide)
1557833300901:lm2 <- lmer(T1_phq9 ~ T0_phq9 * ld + (1|trans|Patientencode), data = data_wide)
1557833305911:lm2 <- lmer(T1_phq9 ~ T0_phq9 * ld + (1|trans + Patientencode), data = data_wide)
1557833312475:lm2 <- lmer(T1_phq9 ~ T0_phq9 * ld + (1|1 + Patientencode), data = data_wide)
1557833317315:lm2 <- lmer(T1_phq9 ~ T0_phq9 * ld + (1|Patientencode), data = data_wide)
1557833365388:View(data_long)
1557833444830:dat <- data_long %>%
1557833444831:filter(str_extract(variable, "T0_phq9|T1_phq9|ld"))
1557833466967:dat <- data_long %>%
1557833466969:filter(grepl("T0_phq9|T1_phq9|ld", data_long$variable))
1557833509523:dat <- data_long %>%
1557833509524:filter(grepl("T0_phq9|T1_phq9|ld", data_long$variable)) %>%
1557833509525:group_by(Patientencode) %>%
1557833509527:summarise(occur = n()) %>%
1557833509528:filter(occur == 2) %>%
1557833509529:left_join(., data_long, by = "Patientencode")
1557833516108:dat <- data_long %>%
1557833516109:filter(grepl("T0_phq9|T1_phq9|ld", data_long$variable)) %>%
1557833516110:group_by(Patientencode) %>%
1557833516112:summarise(occur = n()) %>%
1557833516113:filter(occur == 2)
1557833525148:dat <- data_long %>%
1557833525149:filter(grepl("T0_phq9|T1_phq9|ld", data_long$variable)) %>%
1557833525151:group_by(Patientencode)
1557833532546:dat <- data_long %>%
1557833532547:filter(grepl("T0_phq9|T1_phq9|ld", data_long$variable)) %>%
1557833532548:group_by(Patientencode) %>%
1557833532549:summarise(occur = n())
1557833535209:View(dat)
1557833556300:dat <- data_long %>%
1557833556301:filter(grepl("T0_phq9|T1_phq9|ld", data_long$variable)) %>%
1557833556302:group_by(Patientencode) %>%
1557833556303:summarise(occur = n()) %>%
1557833556304:filter(occur == 3) %>%
1557833556305:left_join(., data_long, by = "Patientencode")
1557833564810:dat <- data_long %>%
1557833564812:filter(grepl("T0_phq9|T1_phq9|ld", data_long$variable)) %>%
1557833564813:group_by(Patientencode) %>%
1557833564815:summarise(occur = n()) %>%
1557833564816:filter(occur == 3) %>%
1557833564817:inner_join(., data_long, by = "Patientencode")
1557833578361:dat <- data_long %>%
1557833578362:filter(grepl("T0_phq9|T1_phq9|ld", data_long$variable))
1557833580150:View(dat)
1557833611810:dat <- data_long %>%
1557833611811:filter(grepl("T0_phq9|T1_phq9|ld", data_long$variable)) %>%
1557833611813:drop_na(value) %>%
1557833611814:group_by(Patientencode) %>%
1557833611815:summarise(occur = n()) %>%
1557833611816:filter(occur == 3) %>%
1557833611818:inner_join(., data_long, by = "Patientencode")
1557833618744:dat <- data_long %>%
1557833618745:filter(grepl("T0_phq9|T1_phq9|ld", data_long$variable)) %>%
1557833618746:drop_na(value) %>%
1557833618747:group_by(Patientencode) %>%
1557833618748:summarise(occur = n())
1557833620175:View(dat)
1557833632594:dat <- data_long %>%
1557833632595:filter(grepl("T0_phq9|T1_phq9|ld", data_long$variable)) %>%
1557833632596:drop_na(value) %>%
1557833632598:group_by(Patientencode) %>%
1557833632599:summarise(occur = n()) %>%
1557833632600:filter(occur == 3)
1557833652585:dat <- data_long %>%
1557833652586:filter(grepl("T0_phq9|T1_phq9|ld", data_long$variable)) %>%
1557833652587:drop_na(value) %>%
1557833652589:group_by(Patientencode) %>%
1557833652590:summarise(occur = n()) %>%
1557833652591:filter(occur == 3)
1557833654552:View(dat)
1557833698356:dat2 <- dat %>%
1557833698357:drop_na(value) %>%
1557833698358:group_by(Patientencode) %>%
1557833698359:summarise(occur = n()) %>%
1557833698361:filter(occur == 3) %>%
1557833698362:inner_join(., dat, by = "Patientencode")
1557833704418:dat <- data_long %>%
1557833704420:filter(grepl("T0_phq9|T1_phq9|ld", data_long$variable))
1557833704810:dat2 <- dat %>%
1557833704811:drop_na(value) %>%
1557833704813:group_by(Patientencode) %>%
1557833704814:summarise(occur = n()) %>%
1557833704815:filter(occur == 3) %>%
1557833704816:inner_join(., dat, by = "Patientencode")
1557833725015:lm2 <- lmer(value ~ variable * ld + (1|Patientencode), data = data_wide)
1557833731014:lm2 <- lmer(value ~ variable * ld + (1|Patientencode), data = dat2)
1557833734983:lm2 <- lmer(value ~ variable + (1|Patientencode), data = dat2)
1557833736566:summary(lm2)
1557833805355:# modell => ist das korrekt??
1557833805357:# evtl auch latent growth modell (aber schwierig zu implementieren)
1557833805358:lm2 <- lmer(value ~ variable * ld + (1|Patientencode), data = dat)
1557833805623:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1557833837646:# modell => ist das korrekt??
1557833837647:# evtl auch latent growth modell (aber schwierig zu implementieren)
1557833837648:lm2 <- lmer(value ~ variable * ld + (1|Patientencode), data = dat)
1557833837984:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1557833843259:dat <- data_wide %>%
1557833843260:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1557833843261:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1557833843262:drop_na(value)
1557833843270:# check again
1557833843271:dat2 <- group_by(dat, Patientencode) %>%
1557833843272:summarise(occur = n()) %>%
1557833843273:filter(occur == 2) %>%
1557833843274:left_join(., dat1, by
1557833848412:# check again
1557833848414:dat2 <- group_by(dat, Patientencode) %>%
1557833848415:summarise(occur = n()) %>%
1557833848416:filter(occur == 2) %>%
1557833848417:left_join(., dat1, by = "Patientencode") # 46 personen
1557833850907:# modell => ist das korrekt??
1557833850908:# evtl auch latent growth modell (aber schwierig zu implementieren)
1557833850909:lm2 <- lmer(value ~ variable * ld + (1|Patientencode), data = dat)
1557833851481:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1557834938133:# modell => ist das korrekt??
1557834938135:# evtl auch latent growth modell (aber schwierig zu implementieren)
1557834938136:dat$variable <- parse_factor(dat$variable, levels = c("T1_pqh9", "T0_phq9"))
1557834945523:# modell => ist das korrekt??
1557834945524:# evtl auch latent growth modell (aber schwierig zu implementieren)
1557834945525:variable <- parse_factor(dat$variable, levels = c("T1_pqh9", "T0_phq9"))
1557834950068:# modell => ist das korrekt??
1557834950069:# evtl auch latent growth modell (aber schwierig zu implementieren)
1557834950070:parse_factor(dat$variable, levels = c("T1_pqh9", "T0_phq9"))
1557834970361:at$variable
1557834975184:dat$variable
1557834997038:# modell => ist das korrekt??
1557834997039:# evtl auch latent growth modell (aber schwierig zu implementieren)
1557834997040:relevel(dat$variable, levels = c("T1_pqh9", "T0_phq9"))
1557835009925:# modell => ist das korrekt??
1557835009926:# evtl auch latent growth modell (aber schwierig zu implementieren)
1557835009927:relevel(dat$variable, ref = "T1_pqh9")
1557835017332:# modell => ist das korrekt??
1557835017334:# evtl auch latent growth modell (aber schwierig zu implementieren)
1557835017335:relevel(dat$variable, ref = "T1_phq9")
1557835027597:# modell => ist das korrekt??
1557835027598:# evtl auch latent growth modell (aber schwierig zu implementieren)
1557835027599:dat$variable <- relevel(dat$variable, ref = "T1_phq9")
1557835028032:lm2 <- lmer(value ~ variable * ld + (1|Patientencode), data = dat)
1557835028585:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1557835062176:Viwe(dat)
1557835066327:View(dat)
1557842265458:# subsample
1557842265460:dat <- data_wide[data_wide$condit == "Intervention" & !is.na(data_wide$T1_phq9),] # nehme nur personen aus der Intervention (telefongespräche)
1557842270504:pat <- ("T0_phq9|T1_phq9")
1557842270506:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1557842270509:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1557842270511:dat2 <- group_by(dat1, Patientencode) %>%
1557842270512:summarise(occur = n()) %>%
1557842270513:filter(occur == 2) %>%
1557842270516:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1557842286390:lm1 <- glmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (1|dat2$Patientencode), family = "gaussian")
1557842294712:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (1|dat2$Patientencode), family = "gaussian")
1557842309976:?lmer
1557842338616:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (1|dat2$Patientencode), family = gaussian)
1557842342521:lm1 <- glmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (1|dat2$Patientencode), family = gaussian)
1557842354450:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (1|dat2$Patientencode), family = gaussian)
1557842466599:isSingular(lm1) # False = gut
1557842468735:summary(lm1)
1557842487118:library(multilevel)
1557842489574:# teste ob daten gruppiert
1557842489575:# literatur dazu: LeBreton and Senter (2008) have suggested that an ICC(1)=.05 represents a small to medium effect (p. 838)
1557842489576:av <- aov(value ~ Patientencode, dat2)
1557842490519:ICC1(av) # 10% ja gibt gruppenvariablität/subjektvariablität
1557842950629:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (variable|dat2$Patientencode)) # it is already glmm
1557842957580:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (dat2$variable|dat2$Patientencode)) # it is already glmm
1557843051833:install.packages("haven")
1557843059041:install.packages("haven")
1557843096029:library(haven)
1557843112919:orig_data <- read_sav("TIDe_Gesamt_20190404_kopie.sav",
1557843112921:#                        to.data.frame = T,
1557843112922:#                        add.undeclared.levels = "append")
1557843130026:orig_data <- read_sav("TIDe_Gesamt_20190404_kopie.sav")
1557843135175:View(orig_data)
1557843159220:?read_sav
1557843296272:ggplot(data=data_long, aes(x=values, y=variable, group=as.factor(Patientencode)))+
1557843296273:geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
1557843296275:geom_smooth(method=lm,se=FALSE, col="black", size=.5, alpha=.8)
1557843304370:library(tidyverse)
1557843319973:library(ggplot2)
1557843325049:ggplot(data=data_long, aes(x=values, y=variable, group=as.factor(Patientencode)))+
1557843325051:geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
1557843325052:geom_smooth(method=lm,se=FALSE, col="black", size=.5, alpha=.8)
1557843331928:ggplot(data=data_long, aes(x=value, y=variable, group=as.factor(Patientencode)))+
1557843331929:geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
1557843331930:geom_smooth(method=lm,se=FALSE, col="black", size=.5, alpha=.8)
1557843372405:ggplot(data=dat2, aes(x=value, y=variable, group=as.factor(Patientencode)))+
1557843372406:geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
1557843372408:geom_smooth(method=lm,se=FALSE, col="black", size=.5, alpha=.8)
1557843384970:ggplot(data=dat2, aes(x=variable, y=value, group=as.factor(Patientencode)))+
1557843384972:geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
1557843384973:geom_smooth(method=lm,se=FALSE, col="black", size=.5, alpha=.8)
1557843409867:ggplot(data=dat2, aes(x=variable, y=value, group=as.factor(Patientencode)))+
1557843409868:geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
1557843409870:geom_smooth(method=lm)
1557843478853:?stat_smooth
1557843502827:ggplot(data=dat2, aes(x=variable, y=value, group=as.factor(Patientencode)))+
1557843502829:geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
1557843502830:geom_smooth()
1557843514565:warnings()
1557843533619:ggplot(data=dat2, aes(x=variable, y=value, group=as.factor(Patientencode)))+
1557843533623:geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
1557843533624:geom_line()
1557843560747:ggplot(data=dat2, aes(x=variable, y=value, group=as.factor(Patientencode)))+
1557843560749:geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
1557843560750:geom_line() +
1557843560751:mytheme
1557843577106:ggplot(data=dat2, aes(x=variable, y=value, group=as.factor(Patientencode)))+
1557843577108:geom_point(size=.7, col="grey", alpha=.8)+
1557843577109:geom_line() +
1557843577110:mytheme
1557843593491:ggplot(data=dat2, aes(x=variable, y=value, group=as.factor(Patientencode)))+
1557843593492:geom_point(size=2, col="grey", alpha=.8)+
1557843593494:geom_line() +
1557843593495:mytheme
1557843690233:# vierte möglichkeit mit brms
1557843690234:brm(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (1|dat2$Patientencode))
1557843693320:# vierte möglichkeit mit brms
1557843693322:brms(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (1|dat2$Patientencode))
1557843699837:# vierte möglichkeit mit brms
1557843699838:brms::brm(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (1|dat2$Patientencode))
1557843721660:# vierte möglichkeit mit brms
1557843721661:brms::brm(value ~ variable * trans * condit + (1|Patientencode), data = dat2)
1557843824326:# plot
1557843824327:ggplot(data=dat2, aes(x=ld, y=values, col=as.factor(trans)))+
1557843824328:geom_point(size=1, alpha=.7, position = "jitter")+
1557843824329:geom_smooth(method=lm,se=T, size=1.5, linetype=1, alpha=.7)+
1557843824330:theme_minimal() +
1557843824332:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1557843844325:dat <- data_wide %>%
1557843844326:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1557843844327:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1557843844328:drop_na(value)
1557843844333:# check again
1557843844334:dat2 <- group_by(dat, Patientencode) %>%
1557843844335:summarise(occur = n()) %>%
1557843844336:filter(occur == 2) %>%
1557843844337:left_join(., dat1, by = "Patientencode") # 46 p
1557843846467:# plot
1557843846469:ggplot(data=dat2, aes(x=ld, y=values, col=as.factor(trans)))+
1557843846470:geom_point(size=1, alpha=.7, position = "jitter")+
1557843846471:geom_smooth(method=lm,se=T, size=1.5, linetype=1, alpha=.7)+
1557843846472:theme_minimal() +
1557843846473:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1557843851187:#daten aufbereiten
1557843851188:dat <- data_wide %>%
1557843851189:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1557843851190:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1557843851191:drop_na(value)
1557843859335:library(reshape2)
1557843861421:#daten aufbereiten
1557843861427:dat <- data_wide %>%
1557843861431:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1557843861432:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1557843861433:drop_na(value)
1557843862638:# check again
1557843862639:dat2 <- group_by(dat, Patientencode) %>%
1557843862641:summarise(occur = n()) %>%
1557843862642:filter(occur == 2) %>%
1557843862644:left_join(., dat1, by = "Patientencode") # 46 personen
1557843863287:# plot
1557843863288:ggplot(data=dat2, aes(x=ld, y=values, col=as.factor(trans)))+
1557843863289:geom_point(size=1, alpha=.7, position = "jitter")+
1557843863290:geom_smooth(method=lm,se=T, size=1.5, linetype=1, alpha=.7)+
1557843863291:theme_minimal() +
1557843863293:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1557843873129:# check again
1557843873131:dat2 <- group_by(dat, Patientencode) %>%
1557843873132:summarise(occur = n()) %>%
1557843873133:filter(occur == 2) %>%
1557843873134:left_join(., dat, by = "Patientencode") # 46 personen
1557843874431:# plot
1557843874432:ggplot(data=dat2, aes(x=ld, y=values, col=as.factor(trans)))+
1557843874433:geom_point(size=1, alpha=.7, position = "jitter")+
1557843874434:geom_smooth(method=lm,se=T, size=1.5, linetype=1, alpha=.7)+
1557843874435:theme_minimal() +
1557843874436:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1557843877838:# plot
1557843877840:ggplot(data=dat2, aes(x=ld, y=value, col=as.factor(trans)))+
1557843877841:geom_point(size=1, alpha=.7, position = "jitter")+
1557843877842:geom_smooth(method=lm,se=T, size=1.5, linetype=1, alpha=.7)+
1557843877843:theme_minimal() +
1557843877844:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1557843946223:# plot
1557843946224:ggplot(data=dat2, aes(x=ld, y=value, col=as.factor(trans)))+
1557843946225:geom_point(size=1, alpha=.7, position = "jitter")+
1557843946227:geom_smooth(size=1.5, linetype=1, alpha=.7)+
1557843946228:theme_minimal() +
1557843946229:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1557843965946:# plot
1557843965947:ggplot(data=dat2, aes(x=ld, y=value, col=as.factor(trans)))+
1557843965948:geom_point(size=1, alpha=.7, position = "jitter")+
1557843965949:geom_smooth(method=lm,se=F, size=1.5, linetype=1, alpha=.7)+
1557843965950:theme_minimal() +
1557843965952:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1557843992616:# plot
1557843992618:ggplot(data=dat2, aes(x=ld, y=value, col=as.factor(trans)))+
1557843992619:geom_point(size=1, alpha=.7, position = "jitter")+
1557843992620:geom_smooth(formula = y ~ x,se=F, size=1.5, linetype=1, alpha=.7)+
1557843992621:theme_minimal() +
1557843992622:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1557844013362:# plot
1557844013363:ggplot(data=dat2, aes(x=ld, y=value, col=as.factor(trans)))+
1557844013365:geom_point(size=1, alpha=.7, position = "jitter")+
1557844013367:geom_smooth(formula = y ~ 1 + x, se=F, size=1.5, linetype=1, alpha=.7)+
1557844013368:theme_minimal() +
1557844013369:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1557844020235:# plot
1557844020236:ggplot(data=dat2, aes(x=ld, y=value, col=as.factor(trans)))+
1557844020237:geom_point(size=1, alpha=.7, position = "jitter")+
1557844020238:geom_smooth(formula = y ~ 0 + x, se=F, size=1.5, linetype=1, alpha=.7)+
1557844020240:theme_minimal() +
1557844020242:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1557844140533:View(dat2)
1557844160219:lm2 <- lmer(value ~ variable * ld + (1|Patientencode), data = dat2)
1557844168682:library(lme4)
1557844171650:lm2 <- lmer(value ~ variable * ld + (1|Patientencode), data = dat2)
1557844173082:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1557844194143:# modell => ist das korrekt??
1557844194145:# evtl auch latent growth modell (aber schwierig zu implementieren)
1557844194147:dat$variable <- relevel(dat$variable, ref = "T1_phq9")
1557844194546:lm2 <- lmer(value ~ variable * ld + (1|Patientencode), data = dat2)
1557844195563:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1557844203870:# modell => ist das korrekt??
1557844203871:# evtl auch latent growth modell (aber schwierig zu implementieren)
1557844203873:dat2$variable <- relevel(dat2$variable, ref = "T1_phq9")
1557844204299:lm2 <- lmer(value ~ variable * ld + (1|Patientencode), data = dat2)
1557844205132:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1557844218960:# check again
1557844218962:dat2 <- group_by(dat, Patientencode) %>%
1557844218963:summarise(occur = n()) %>%
1557844218964:filter(occur == 2) %>%
1557844218965:left_join(., dat, by = "Patientencode") # 46 personen
1557844221355:lm2 <- lmer(value ~ variable * ld + (1|Patientencode), data = dat2)
1557844221886:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1557844237517:lm2 <- lmer(value ~ variable  + (1|Patientencode), data = dat2)
1557844237882:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1557844245691:lm2 <- lmer(value ~ variable * ld + (1|Patientencode), data = dat2)
1557844247139:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1557844268908:lm2 <- lmer(value ~ ld + (1|Patientencode), data = dat2)
1557844270026:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1557845828246:# vierte möglichkeit mit brms
1557845828247:brms::brm(value ~ variable * trans * condit + (1|Patientencode), data = dat2,
1557845828249:warmup = 1000, iter = 2000, chains = 3, inits= "random", cores=2)
1557845845042:library(brms)
1557845885275:# vierte möglichkeit mit brms
1557845885277:t <- brms::brm(value ~ variable * trans * condit + (1|Patientencode), data = dat2,
1557845885278:warmup = 1000, iter = 2000, chains = 3, inits= "random", cores=2)
1557845901126:summary(t)
1557845947987:# vierte möglichkeit mit brms
1557845947988:t <- brms::brm(value ~ 1 + variable * trans * condit + (1|Patientencode), data = dat2,
1557845947989:warmup = 1000, iter = 2000, chains = 3, inits= "random", cores=2)
1557845961241:summary(t)
1557846105507:# vierte möglichkeit mit brms
1557846105508:t <- brms::brm(T1_phq9 ~ 1 + T0_phq9 * trans * condit + (1|Patientencode), data = data_wide,
1557846105509:warmup = 1000, iter = 2000, chains = 3, inits= "random", cores=2)
1557846243818:(2.8)^2/(2.8^2 + 3.26^2)
1557846450610:modeltrans <- gss(t)
1557846509481:modeltrans <- brms::gss(t)
1557846566020:modeltrans <- brms::ggs(t)
1557846598099:install.packages("ggmcmc")
1557846633348:library(ggmcmc)
1558033240223:# # lade original spss
1558033240224:# orig_data <- read_sav("TIDe_Gesamt_20190404_kopie.sav",
1558033240226:#                        to.data.frame = T,
1558033240227:#                        add.undeclared.levels = "append")
1558033240229:#
1558033240230:# lade daten csv
1558033240231:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1558033240233:delim = ";",
1558033240234:na = c(" ", "-99"),
1558033240236:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1558033240237:drop_na(Patientencode) %>%
1558033240239:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1558033240240:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1558033240241:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1558033240243:'1' = "noch in der Schule",
1558033240244:'2' = "ohne Schulabschluss",
1558033240246:'3' = "Primar/Sekundarschule",
1558033240247:'4' = "Berufsmaturität",
1558033240248:'5' = "Sekundarschule",
1558033240249:'6' = "Fachmatur",
1558033240251:'7' = "Fachchule",
1558033240252:'8' = "Universität",
1558033240253:'9' = "anderes"),
1558033240255:REKRUTIERUNG = recode(.$REKRUTIERUNG, '0' = "PR", '1' = "SR")) %>%
1558033240256:# Psychotherapiemotivation Subskalen:
1558033240258:# Psychischer Leidensdruck (LD), Hoffnung (HO), Symptombezogene Zuwendung (ZW), Verneinung psychischer Hilfsbedürftigkeit (VH)
1558033240259:# Achtung: Hoffnungsitems rekodieren
1558033240261:# Achtung: einige items fptm23, einige fptm, eins fprm_9 -> noch ändern?
1558033240262:# LD <- c("T0_fptm_6, T0_fptm_7, T0_fptm_13, T0_fptm_15")
1558033240263:# HO <- c("T0_fptm23_1, T0_fptm23_4, T0_fprm_9, T0_fptm_14")
1558033240264:# ZW <- c("T0_fptm_5, T0_fptm_8, T0_fptm_11, T0_fptm_12")
1558033240266:# VH <- c("T0_fptm23_2, T0_fptm23_3, T0_fptm_10")
1558033240267:rename(ld1 = T0_fptm_6, ld2 = T0_fptm_7, ld3 = T0_fptm_13, ld4 = T0_fptm_15,
1558033240269:ho1 = T0_fptm23_1, ho2 = T0_fptm23_4, ho3 = T0_fprm_9, ho4 = T0_fptm_14,
1558033240270:zw_1 = T0_fptm_5, zw_2 = T0_fptm_8, zw_3 = T0_fptm_11, zw_4 = T0_fptm_12,
1558033240272:vh1 = T0_fptm23_2, vh2 = T0_fptm23_3, vh3 = T0_fptm_10) %>%
1558033240273:mutate(ho1 = recode(ho1, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1558033240274:ho2 = recode(ho2, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1558033240276:ho3 = recode(ho3, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1558033240277:ho4 = recode(ho4, '1' = "4",'2' = "3", '3' = "2", '4' = "1")) %>%
1558033240279:mutate(ho1 = parse_number(.$ho1),
1558033240280:ho2 = parse_number(.$ho2),
1558033240281:ho3 = parse_number(.$ho3),
1558033240283:ho4 = parse_number(.$ho4))
1558033246805:library(tidyverse)
1558033247506:library(Amelia)
1558033247529:library(reshape2)
1558033247541:library(gmodels)
1558033247572:library(lubridate)
1558033247581:library(psych)
1558033247607:library(Hmisc)
1558033248606:library(psych)
1558033253955:# # lade original spss
1558033253957:# orig_data <- read_sav("TIDe_Gesamt_20190404_kopie.sav",
1558033253958:#                        to.data.frame = T,
1558033253959:#                        add.undeclared.levels = "append")
1558033253961:#
1558033253962:# lade daten csv
1558033253964:raw_data = read_delim("TIDe_Gesamt_20190404_kopie.csv",
1558033253965:delim = ";",
1558033253967:na = c(" ", "-99"),
1558033253968:col_types = cols(T0_Datum = col_date(format = "%m/%d/%Y"))) %>%
1558033253970:drop_na(Patientencode) %>%
1558033253971:mutate(T0_sex = recode(.$T0_sex, '2' = "F", '1' = "M"),
1558033253972:GRUPPENZUTEILUNG = recode(.$GRUPPENZUTEILUNG, '0' = "Kontrolle", '1' = "Intervention"),
1558033253974:T0_Schulabschluss = recode(.$T0_Schulabschluss,
1558033253975:'1' = "noch in der Schule",
1558033253977:'2' = "ohne Schulabschluss",
1558033253978:'3' = "Primar/Sekundarschule",
1558033253979:'4' = "Berufsmaturität",
1558033253981:'5' = "Sekundarschule",
1558033253982:'6' = "Fachmatur",
1558033253984:'7' = "Fachchule",
1558033253985:'8' = "Universität",
1558033253987:'9' = "anderes"),
1558033253988:REKRUTIERUNG = recode(.$REKRUTIERUNG, '0' = "PR", '1' = "SR")) %>%
1558033253989:# Psychotherapiemotivation Subskalen:
1558033253991:# Psychischer Leidensdruck (LD), Hoffnung (HO), Symptombezogene Zuwendung (ZW), Verneinung psychischer Hilfsbedürftigkeit (VH)
1558033253992:# Achtung: Hoffnungsitems rekodieren
1558033253994:# Achtung: einige items fptm23, einige fptm, eins fprm_9 -> noch ändern?
1558033253995:# LD <- c("T0_fptm_6, T0_fptm_7, T0_fptm_13, T0_fptm_15")
1558033253997:# HO <- c("T0_fptm23_1, T0_fptm23_4, T0_fprm_9, T0_fptm_14")
1558033253998:# ZW <- c("T0_fptm_5, T0_fptm_8, T0_fptm_11, T0_fptm_12")
1558033254000:# VH <- c("T0_fptm23_2, T0_fptm23_3, T0_fptm_10")
1558033254001:rename(ld1 = T0_fptm_6, ld2 = T0_fptm_7, ld3 = T0_fptm_13, ld4 = T0_fptm_15,
1558033254002:ho1 = T0_fptm23_1, ho2 = T0_fptm23_4, ho3 = T0_fprm_9, ho4 = T0_fptm_14,
1558033254004:zw_1 = T0_fptm_5, zw_2 = T0_fptm_8, zw_3 = T0_fptm_11, zw_4 = T0_fptm_12,
1558033254005:vh1 = T0_fptm23_2, vh2 = T0_fptm23_3, vh3 = T0_fptm_10) %>%
1558033254007:mutate(ho1 = recode(ho1, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1558033254008:ho2 = recode(ho2, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1558033254010:ho3 = recode(ho3, '1' = "4",'2' = "3", '3' = "2", '4' = "1"),
1558033254011:ho4 = recode(ho4, '1' = "4",'2' = "3", '3' = "2", '4' = "1")) %>%
1558033254012:mutate(ho1 = parse_number(.$ho1),
1558033254014:ho2 = parse_number(.$ho2),
1558033254015:ho3 = parse_number(.$ho3),
1558033254017:ho4 = parse_number(.$ho4))
1558033260414:raw_data[raw_data$Patientencode == "MARE60",]$T0_Geb <- "01.1960" # bei einer Altersangabe fehlt Monat => nehme Januar
1558033260732:raw_data$T0_Geb <- parse_date(raw_data$T0_Geb, format = "%m.%Y") # Ändere Alter in Datum
1558033261002:raw_data$Alter <- 2018- year(raw_data$T0_Geb)
1558033261667:raw_data$Altersgruppen <- cut(raw_data$Alter,
1558033261669:breaks = c(-Inf, 29, 39, 49, 59, Inf), # menuCH Kategorien
1558033261671:labels = c("<29 Jahre", "30 bis 39 Jahre", "40 bis 49 Jahre", "50 bis 59 Jahre", ">60 Jahre"))
1558033262345:raw_data$Altersgruppen <- as.character(raw_data$Altersgruppen) # parse to character (parse_character funktioniet hier nicht => wieso?)
1558033263203:pattern2 <- c("T0_phq9" ,"T1_phq9", "T0_phq15", "T1_phq15", "T0_gad", "T1_gad")
1558033268808:# achtung bei rowsums werden 0 erzeugt => ich gehe davon aus, dass diese NA' sein sollten
1558033268810:# überprüfe das mit plausibilitätschecks (...)
1558033268812:empty <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1558033269176:for (nam in pattern2) {
1558033269178:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1558033269179:sub_dat$sum <- rowSums(sub_dat, na.rm = T)
1558033269181:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1558033269182:empty[[nam]] <- sub_dat
1558033269184:}
1558033272085:data <- do.call(bind_cols,empty)
1558033290910:pattern2 <- c("ld", "ho", "zw_", "vh")
1558033298166:empty2 <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1558033302869:for (nam in pattern2) {
1558033302870:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1558033302871:sub_dat$sum <- rowSums(sub_dat, na.rm = T)/nrow(sub_dat)
1558033302873:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1558033302874:empty[[nam]] <- sub_dat
1558033302876:}
1558033305805:View(sub_dat)
1558033373156:View(data)
1558033564075:View(raw_data)
1558033817837:View(data)
1558033847373:sub_dat$sum <- rowSums(sub_dat, na.rm = T)/ncol(sub_dat)
1558033859274:empty2 <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1558033859642:for (nam in pattern2) {
1558033859643:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1558033859644:sub_dat$sum <- rowSums(sub_dat, na.rm = T)/ncol(sub_dat)
1558033859646:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1558033859647:empty[[nam]] <- sub_dat
1558033859648:}
1558033871950:5/3
1558033904839:empty2 <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1558033905192:for (nam in pattern2) {
1558033905193:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1558033905195:sub_dat$sum <- rowSums(sub_dat, na.rm = T)/ncol(sub_dat)
1558033905196:sum_dat$mean <- mean(sub_dat, na.rm = T)
1558033905197:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1558033905199:empty[[nam]] <- sub_dat
1558033905200:}
1558033931199:empty2 <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1558033932174:for (nam in pattern2) {
1558033932176:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1558033932177:sub_dat$sum <- rowSums(sub_dat, na.rm = T)/ncol(sub_dat)
1558033932178:sum_dat$mean <- rowMeans(sub_dat, na.rm = T)
1558033932180:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1558033932181:empty[[nam]] <- sub_dat
1558033932182:}
1558033952613:for (nam in pattern2) {
1558033952614:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1558033952616:sub_dat$sum <- rowSums(sub_dat, na.rm = T)/ncol(sub_dat)
1558033952617:sum_dat$mean <- rowMeans(sub_dat, na.rm = T)
1558033952619:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1558033952620:empty[[nam]] <- sub_dat
1558033952621:}
1558033956779:empty2 <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1558033957155:for (nam in pattern2) {
1558033957156:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1558033957158:sub_dat$sum <- rowSums(sub_dat, na.rm = T)/ncol(sub_dat)
1558033957159:sum_dat$mean <- rowMeans(sub_dat, na.rm = T)
1558033957161:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1558033957162:empty[[nam]] <- sub_dat
1558033957163:}
1558033963924:View(sub_dat)
1558033985347:2+3+2+3
1558033989555:10/4
1558033999338:sum_dat$men <- rowMeans(sub_dat, na.rm = T)
1558034002771:empty2 <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1558034003069:for (nam in pattern2) {
1558034003071:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1558034003072:sub_dat$sum <- rowSums(sub_dat, na.rm = T)/ncol(sub_dat)
1558034003074:sum_dat$men <- rowMeans(sub_dat, na.rm = T)
1558034003076:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1558034003077:empty[[nam]] <- sub_dat
1558034003078:}
1558034006666:pattern2 <- c("ld", "ho", "zw_", "vh")
1558034006968:empty2 <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1558034007259:for (nam in pattern2) {
1558034007261:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1558034007262:sub_dat$sum <- rowSums(sub_dat, na.rm = T)/ncol(sub_dat)
1558034007264:sum_dat$men <- rowMeans(sub_dat, na.rm = T)
1558034007265:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1558034007267:empty[[nam]] <- sub_dat
1558034007268:}
1558034014029:empty2 <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1558034014299:for (nam in pattern2) {
1558034014300:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1558034014302:# sub_dat$sum <- rowSums(sub_dat, na.rm = T)/ncol(sub_dat)
1558034014303:sum_dat$men <- rowMeans(sub_dat, na.rm = T)
1558034014305:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1558034014306:empty[[nam]] <- sub_dat
1558034014308:}
1558034022186:empty2 <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1558034022490:for (nam in pattern2) {
1558034022491:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1558034022492:sub_dat$sum <- rowSums(sub_dat, na.rm = T)/ncol(sub_dat)
1558034022494:# sum_dat$men <- rowMeans(sub_dat, na.rm = T)
1558034022495:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1558034022496:empty[[nam]] <- sub_dat
1558034022497:}
1558034062256:data2 <- do.call(bind_cols, empty2)
1558034095305:pattern2 <- c("ld", "ho", "zw_", "vh")
1558034095726:empty2 <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1558034096098:for (nam in pattern2) {
1558034096100:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1558034096102:sub_dat$sum <- rowSums(sub_dat, na.rm = T)/ncol(sub_dat)
1558034096103:# sum_dat$men <- rowMeans(sub_dat, na.rm = T)
1558034096104:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1558034096105:empty2[[nam]] <- sub_dat
1558034096107:}
1558034099188:data2 <- do.call(bind_cols, empty2)
1558034101203:View(data2)
1558034117046:pattern2 <- c("ld", "ho", "zw_", "vh")
1558034117378:empty2 <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1558034117669:for (nam in pattern2) {
1558034117670:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1558034117672:sub_dat$rowmean <- rowSums(sub_dat, na.rm = T)/ncol(sub_dat)
1558034117673:# sum_dat$men <- rowMeans(sub_dat, na.rm = T)
1558034117675:sub_dat$sum_row <- paste("sum_", nam, sep = "")
1558034117676:empty2[[nam]] <- sub_dat
1558034117678:}
1558034118364:data2 <- do.call(bind_cols, empty2)
1558034120503:View(data2)
1558034132537:empty2 <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1558034132759:for (nam in pattern2) {
1558034132760:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1558034132762:sub_dat$rowmean <- rowSums(sub_dat, na.rm = T)/ncol(sub_dat)
1558034132764:# sum_dat$men <- rowMeans(sub_dat, na.rm = T)
1558034132765:sub_dat$sum_row <- paste("rowmean_", nam, sep = "")
1558034132766:empty2[[nam]] <- sub_dat
1558034132768:}
1558034134816:data2 <- do.call(bind_cols, empty2)
1558034197347:dat2 <- data2[, grep("rowmean", names(data2), value = T)]
1558034203916:View(dat2)
1558034261412:pattern2 <- c("ld", "ho", "zw_", "vh")
1558034261685:empty2 <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1558034262467:for (nam in pattern2) {
1558034262470:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1558034262471:sub_dat$rowmean <- rowSums(sub_dat, na.rm = T)/ncol(sub_dat)
1558034262473:# sum_dat$men <- rowMeans(sub_dat, na.rm = T)
1558034262474:sub_dat$sum_row <- paste("rowmean_", nam, sep = "")
1558034262475:empty2[[nam]] <- sub_dat
1558034262477:}
1558034263110:data2 <- do.call(bind_cols, empty2)
1558034264574:# slice raw_data and paste back
1558034264576:data2 <- raw_data[, c(1:23,69:78, 108:109)]
1558034265124:dat <- data[, grep("sum", names(data), value = T)]
1558034265565:dat2 <- data2[, grep("rowmean", names(data2), value = T)]
1558034265891:raw_data_ <- bind_cols(data2, dat) # cbind
1558034266211:raw_data2 <- bind_cols(raw_data_, dat2)
1558034282515:dat2 <- data2[, grep("rowmean", names(data2), value = T)]
1558034285716:View(dat2)
1558034318985:# slice raw_data and paste back
1558034318986:data_ <- raw_data[, c(1:23,69:78, 108:109)]
1558034319322:dat <- data[, grep("sum", names(data), value = T)]
1558034319673:dat2 <- data2[, grep("rowmean", names(data2), value = T)]
1558034320021:raw_data_ <- bind_cols(data_, dat) # cbind
1558034320361:raw_data2 <- bind_cols(raw_data_, dat2)
1558034346090:data2 <- do.call(bind_cols, empty2)
1558034347996:# slice raw_data and paste back
1558034347998:data_ <- raw_data[, c(1:23,69:78, 108:109)]
1558034348289:dat <- data[, grep("sum", names(data), value = T)]
1558034348653:dat2 <- data2[, grep("rowmean", names(data2), value = T)]
1558034350521:raw_data_ <- bind_cols(data_, dat) # cbind
1558034350931:raw_data2 <- bind_cols(raw_data_, dat2)
1558034354648:View(raw_data2)
1558034388104:# slice raw_data and paste back
1558034388105:data_ <- raw_data[, c(1:23,69:78, 108:109)]
1558034388460:dat <- data[, grep("sum", names(data), value = T)]
1558034388793:dat2 <- data2[, grep("rowmean_", names(data2), value = T)]
1558034389079:raw_data_ <- bind_cols(data_, dat) # cbind
1558034389390:raw_data2 <- bind_cols(raw_data_, dat2)
1558034393589:View(raw_data2)
1558034402280:data2 <- do.call(bind_cols, empty2)
1558034404252:# slice raw_data and paste back
1558034404254:data_ <- raw_data[, c(1:23,69:78, 108:109)]
1558034404529:dat <- data[, grep("sum", names(data), value = T)]
1558034404843:dat2 <- data2[, grep("rowmean_", names(data2), value = T)]
1558034405210:raw_data_ <- bind_cols(data_, dat) # cbind
1558034405589:raw_data2 <- bind_cols(raw_data_, dat2)
1558034415650:View(data2)
1558034486298:data2[, grep("rowmean_", names(data2), value = T)]
1558034492512:View(data2)
1558034523227:pattern2 <- c("ld", "ho", "zw_", "vh")
1558034523791:empty2 <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1558034524171:for (nam in pattern2) {
1558034524210:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1558034524212:sub_dat$rowmean <- rowSums(sub_dat, na.rm = T)/ncol(sub_dat)
1558034524213:# sum_dat$men <- rowMeans(sub_dat, na.rm = T)
1558034524215:sub_dat$rowmean <- paste("rowmean_", nam, sep = "")
1558034524216:empty2[[nam]] <- sub_dat
1558034524218:}
1558034525097:data2 <- do.call(bind_cols, empty2)
1558034526600:# slice raw_data and paste back
1558034526602:data_ <- raw_data[, c(1:23,69:78, 108:109)]
1558034526888:dat <- data[, grep("sum", names(data), value = T)]
1558034527320:dat2 <- data2[, grep("rowmean_", names(data2), value = T)]
1558034528278:raw_data_ <- bind_cols(data_, dat)
1558034528688:raw_data2 <- bind_cols(raw_data_, dat2)
1558034537835:dat2 <- data2[, grep("rowmean", names(data2), value = T)]
1558034539007:raw_data_ <- bind_cols(data_, dat)
1558034539277:raw_data2 <- bind_cols(raw_data_, dat2)
1558034542314:View(raw_data2)
1558034565920:empty2 <- list() # funktioniert hier nur mit liste, eigentlich auch mit data.frame möglich sein
1558034566221:for (nam in pattern2) {
1558034566223:sub_dat <- raw_data[,grep(nam, names(raw_data), value = T)]
1558034566224:sub_dat$rowmean <- rowSums(sub_dat, na.rm = T)/ncol(sub_dat)
1558034566226:# sum_dat$men <- rowMeans(sub_dat, na.rm = T)
1558034566227:sub_dat$rowmean_sum <- paste("rowmean_", nam, sep = "")
1558034566229:empty2[[nam]] <- sub_dat
1558034566230:}
1558034567109:data2 <- do.call(bind_cols, empty2)
1558034568918:# slice raw_data and paste back
1558034568920:data_ <- raw_data[, c(1:23,69:78, 108:109)]
1558034569226:dat <- data[, grep("sum", names(data), value = T)]
1558034569519:dat2 <- data2[, grep("rowmean", names(data2), value = T)]
1558034569877:raw_data_ <- bind_cols(data_, dat)
1558034570227:raw_data2 <- bind_cols(raw_data_, dat2)
1558034573802:View(raw_data2)
1558034597100:# drop all usless variables and rename
1558034597102:raw_data2 <- raw_data2[-55,] # contains only NA
1558034790930:#suche alle variablen
1558034790932:data_wide <- raw_data2 %>%
1558034790933:dplyr::select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1558034790935:T0_Datum, T0_sex, T0_Schulabschluss, Alter, Altersgruppen, T0_erwerbstätig_ALLGEMEIN,
1558034790936:sum, sum1, sum2, sum3, sum4, sum5, sum6, sum7, sum8, sum9) %>%
1558034790937:rename(trans = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, work = T0_erwerbstätig_ALLGEMEIN, educ = T0_Schulabschluss, age = Alter, age_group = Altersgruppen,
1558034790939:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1558034790940:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, ld = rowmean, ho = rowmean1, zw = rowmean2, vh = rowmean3, T0_gad = sum8, T1_gad = sum9) # rename for melting data
1558034871432:#suche alle variablen
1558034871434:data_wide <- raw_data2 %>%
1558034871435:dplyr::select(Patientencode, GRUPPENZUTEILUNG, REKRUTIERUNG,
1558034871437:T0_Datum, T0_sex, T0_Schulabschluss, Alter, Altersgruppen, T0_erwerbstätig_ALLGEMEIN,
1558034871438:sum, sum1, sum2, sum3, sum4, sum5, rowmean, rowmean1, rowmean2, rowmean3) %>%
1558034871440:rename(trans = REKRUTIERUNG, condit = GRUPPENZUTEILUNG, date = T0_Datum, sex = T0_sex, work = T0_erwerbstätig_ALLGEMEIN, educ = T0_Schulabschluss, age = Alter, age_group = Altersgruppen,
1558034871441:# test = sum_row, test = sum_row1, test = sum_row2, test = sum_row3, test = sum_row4)
1558034871442:T0_phq9 = sum, T1_phq9 = sum1, T0_phq15 = sum2, T1_phq15 = sum3, ld = rowmean, ho = rowmean1, zw = rowmean2, vh = rowmean3, T0_gad = sum4, T1_gad = sum5) # rename for melting data
1558034902799:# rowsums mit 0 sind NA's
1558034902800:data_wide[data_wide == 0] <- NA
1558034911305:data_wide[data_wide == 0]
1558034919307:View(data_wide)
1558035004759:# subsample
1558035004760:pat <- c("ld|ho|zw|vh")
1558035005230:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value), ]
1558035017801:# melt into long format => v.a. für statistische analysen wichtig
1558035017803:data_long <- melt(data_wide,  measure.vars = c("T0_phq9","T1_phq9", "T0_phq15", "T1_phq15", "T0_gad", "T1_gad", "ld", "ho", "zw", "vh"))
1558035020430:# achtung variable sind factoren => parse to characters
1558035020432:data_long$variable <- as.character(data_long$variable)
1558035025839:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value), ]
1558035030522:# überprüfe ob auch alle datenpunkte drin sind
1558035030523:t <- dat %>%
1558035030525:group_by(Patientencode, trans) %>%
1558035030526:summarise(occur = n()) %>%
1558035030528:mutate(occur = ifelse(occur == 5, T, F))
1558035033304:View(t)
1558035046268:t <- dat %>%
1558035046270:group_by(Patientencode, trans) %>%
1558035046271:summarise(occur = n())
1558035048586:View(t)
1558035060608:# überprüfe ob auch alle datenpunkte drin sind
1558035060609:t <- dat %>%
1558035060611:group_by(Patientencode, trans) %>%
1558035060612:summarise(occur = n()) %>%
1558035060614:mutate(occur = ifelse(occur == 4, T, F))
1558035060963:sum(t$occur) # 53 personen
1558035064712:table(t$trans)
1558035077153:aggregate(value ~ variable + trans, dat, function(x) c(mean = mean(x), median = median(x), sd = sd(x), min = min(x), max = max(x)))
1558035485017:aggregate(value ~ variable + trans, dat, function(x) c(mean = mean(x), median = median(x), sd = sd(x), min = min(x), max = max(x)), t_test = t.test(x))
1558035520782:aggregate(value ~ variable + trans, dat, function(x) c(mean = mean(x), median = median(x), sd = sd(x), min = min(x), max = max(x), t_test = t.test(x))
1558035530034:aggregate(value ~ variable + trans, dat, function(x) c(mean = mean(x), median = median(x), sd = sd(x), min = min(x), max = max(x), t_test = t.test(x)))
1558035543716:aggregate(value ~ variable + trans, dat, function(x) c(mean = mean(x), median = median(x), sd = sd(x), min = min(x), max = max(x), t_test = t.test(x)))
1558035596292:aggregate(value ~ variable + trans, dat, function(x) c(t_test = t.test(x)))
1558035616052:aggregate(value ~ variable + trans, dat, function(x) c(mean = mean(x), median = median(x), sd = sd(x), min = min(x), max = max(x), t_test = t.test(x)))
1558035622424:aggregate(value ~ variable + trans, dat, function(x) c(mean = mean(x), median = median(x), sd = sd(x), min = min(x), max = max(x)))
1558035638971:aggregate(value ~ variable, dat, function(x) c(t_test = t.test(x)))
1558035692880:boxplot(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans)
1558035708961:t.test(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans)
1558035715570:wilcox.test(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans)
1558035723079:t.test(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",]$trans)
1558035726889:boxplot(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",]$trans)
1558035734323:wilcox.test(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",]$trans)
1558035757051:t.test(dat[dat$variable == "zw",]$value ~ dat[dat$variable == "zw",]$trans)
1558035763158:boxplot(dat[dat$variable == "zw",]$value ~ dat[dat$variable == "zw",]$trans)
1558035773310:wilcox.test(dat[dat$variable == "zw",]$value ~ dat[dat$variable == "zw",]$trans)
1558035776452:# vh: n.s.
1558035776453:summary.lm(aov(dat[dat$variable == "vh",]$value ~ dat[dat$variable == "vh",]$trans))
1558035777267:t.test(dat[dat$variable == "vh",]$value ~ dat[dat$variable == "vh",]$trans)
1558035781148:wilcox.test(dat[dat$variable == "vh",]$value ~ dat[dat$variable == "vh",]$trans)
1558036211982:#daten aufbereiten
1558036211983:dat <- data_wide
1558036257256:dat$moderat <- dat$T0_phq9*dat$ld
1558036457397:lm1 <- lmer(T1_phq9 ~  T0_phq9 + ld *moderat + (1|Patientencode), data = dat)
1558036469749:library(lme4)
1558036482917:lm1 <- lmer(T1_phq9 ~  T0_phq9 + ld *moderat + (1|Patientencode), data = dat)
1558036491983:lm1 <- lmer(T1_phq9 ~  T0_phq9 *moderat + (1|Patientencode), data = dat)
1558036499901:dat$moderat
1558036570047:#daten aufbereiten
1558036570049:dat <- data_wide %>%
1558036570051:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1558036570055:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1558036570057:drop_na(value)
1558036577034:# check again
1558036577037:dat2 <- group_by(dat, Patientencode) %>%
1558036577038:summarise(occur = n()) %>%
1558036577039:filter(occur == 2) %>%
1558036577041:left_join(., dat, by = "Patientencode") # 46 personen
1558036580197:View(dat2)
1558036892560:View(dat)
1558037046622:#daten aufbereiten
1558037046628:dat <- data_wide %>%
1558037046630:mutate(moder_ld = T0_phq9 * ld,
1558037046635:moder_ho = T0_phq9 * ho,
1558037046638:moder_zw = T0_phq9 * zw,
1558037046643:moder_vh = T0_phq9 * vh) %>%
1558037046646:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1558037046651:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1558037046657:drop_na(value)
1558037051483:View(dat)
1558037114594:# check again
1558037114596:dat2 <- group_by(dat, Patientencode) %>%
1558037114598:summarise(occur = n()) %>%
1558037114599:filter(occur == 2) %>%
1558037114600:left_join(., dat, by = "Patientencode") # 46 personen
1558037125086:# modell => ist das korrekt??
1558037125097:# evtl auch latent growth modell (aber schwierig zu implementieren)
1558037125102:dat2$variable <- relevel(dat2$variable, ref = "T1_phq9")
1558037125451:lm2 <- lmer(value ~ variable * ld + (1|Patientencode), data = dat2)
1558037127021:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1558037139874:lm2 <- lmer(value ~ variable + ld  * moder_ld + (1|Patientencode), data = dat2)
1558037149013:lm2 <- lmer(value ~ variable * moder_ld + (1|Patientencode), data = dat2)
1558037151410:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1558037189091:lm2 <- lmer(value ~ variable * ld + (1|Patientencode), data = dat2)
1558037189569:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1558037213080:lm2 <- lmer(value ~ variable * moder_ld + (1|Patientencode), data = dat2)
1558037215399:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1558037291364:# check again
1558037291366:dat2 <- group_by(dat, Patientencode) %>%
1558037291367:summarise(occur = n()) %>%
1558037291368:filter(occur == 2) %>%
1558037291370:left_join(., dat, by = "Patientencode") # 46 personen
1558037295027:lm2 <- lmer(value ~ variable * moder_ld + (1|Patientencode), data = dat2)
1558037295517:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1558037403519:lm2 <- lmer(value ~ variable * moder_ld * trans + (1|Patientencode), data = dat2)
1558037405109:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1558037570569:#daten aufbereiten
1558037570573:dat <- data_wide %>%
1558037570575:mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1558037570580:moder_ho = (T0_phq9 - T1_phq9) * ho,
1558037570583:moder_zw = (T0_phq9 - T1_phq9) * zw,
1558037570585:moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1558037570587:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1558037570589:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1558037570590:drop_na(value)
1558037574049:# check again
1558037574051:dat2 <- group_by(dat, Patientencode) %>%
1558037574052:summarise(occur = n()) %>%
1558037574053:filter(occur == 2) %>%
1558037574055:left_join(., dat, by = "Patientencode") # 46 personen
1558037584357:lm2 <- lmer(value ~ variable * moder_ld * trans + (1|Patientencode), data = dat2)
1558037586622:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1558037609340:lm2 <- lmer(value ~ variable + moder_ld * trans + (1|Patientencode), data = dat2)
1558037610913:summary(lm2) # interaktionseffekte (haupt und interaktionseffekte für ld)
1558037667823:# ld
1558037667827:lm <- lmer(value ~ variable + moder_ld * trans + (variable|Patientencode), data = dat2)
1558037739203:# ho
1558037739205:lm1 <- lmer(value ~ variable + moder_ho * trans + (1|Patientencode), data = dat2)
1558037739877:summary(lm1)
1558037773143:View(dat2)
1558037837793:#vh
1558037837794:lm3 <- lmer(value ~ variable + moder_vh * trans + (1|Patientencode), data = dat2)
1558037838606:summary(lm3)
1558037846700:#zw
1558037846702:lm2 <- lmer(value ~ variable + moder_zw* trans + (1|Patientencode), data = dat2)
1558037847155:summary(lm2)
1558037978752:dat <- data_wide
1558037979193:dat$moder_ld <-  (T0_phq9 - T1_phq9)* ld
1558037990365:dat$moder_ld <-  (dat$T0_phq9 - dat$T1_phq9)* dat$ld
1558038013644:View(dat)
1558038058095:lm0 <- lmer(T1_phq9 ~ T0_phq9 + moder_ld * trans + (1|Patientencode), data = dat)
1558038064872:lm0 <- lmer(T1_phq9 ~ T0_phq9 + moder_ld * trans, data = dat)
1558038068703:lm0 <- lm(T1_phq9 ~ T0_phq9 + moder_ld * trans, data = dat)
1558038069590:summary(lm1)
1558038089313:lm0 <- lm(T1_phq9 ~ T0_phq9 + moder_ld + ld * trans, data = dat)
1558038092185:summary(lm1)
1558038103430:summary(lm0)
1558038120441:summary.lm(lm0)
1558038124241:lm0 <- lm(T1_phq9 ~ T0_phq9 + moder_ld + ld * trans, data = dat)
1558038124889:summary.lm(lm0)
1558038133660:summary.lm(lm0)
1558038188024:lm0 <- lm(T1_phq9 ~ T0_phq9 + ld * trans, data = dat)
1558038188744:summary.lm(lm0)
1558038637967:lm0.3 <- lm(T1_phq9 ~ T0_phq9 + vh * trans, data = dat)
1558038644604:summary.lm(lm0.3)
1558038659668:lm0.1 <- lm(T1_phq9 ~ T0_phq9 + ho * trans, data = dat)
1558038660903:summary.lm(lm0.1)
1558038665226:lm0.2 <- lm(T1_phq9 ~ T0_phq9 + zw * trans, data = dat)
1558038666609:summary.lm(lm0.2)
1558038668506:lm0.3 <- lm(T1_phq9 ~ T0_phq9 + vh * trans, data = dat)
1558038668843:summary.lm(lm0.3)
1558038695720:# ho: n.s.
1558038695722:boxplot(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",]$trans)
1558038701398:# subsample
1558038701399:pat <- c("ld|ho|zw|vh")
1558038701755:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value), ]
1558038708788:# ho: n.s.
1558038708790:boxplot(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",]$trans)
1558038929243:boxplot(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",])
1558038945653:boxplot(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",]$variable)
1558038957381:boxplot(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",]$trans)
1558038974187:dat[dat$variable == "ho",]$variable
1558038986112:# subsample
1558038986114:pat <- c("ld|ho|zw|vh")
1558038986470:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value), ]
1558038989248:View(dat)
1558039056370:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + gender + edu + (1|dat2$Patientencode)) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür
1558039067790:# h1b:versuche das ganze zu plotten
1558039067792:pat <- ("T0_phq9|T1_phq9")
1558039068290:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1558039069348:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1558039069350:dat2 <- group_by(dat1, Patientencode) %>%
1558039069351:summarise(occur = n()) %>%
1558039069352:filter(occur == 2) %>%
1558039069354:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1558039076651:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + sex + edu + (1|dat2$Patientencode)) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür
1558039090709:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + dat2$sex + dat2$edu + (1|dat2$Patientencode)) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür
1558039095185:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + dat2$sex + dat2$educ + (1|dat2$Patientencode)) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür
1558039096376:summary(lm1)
1558039164628:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit+ (1|dat2$Patientencode)) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür
1558039166205:summary(lm1)
1558093836019:# h1b:versuche das ganze zu plotten
1558093836021:pat <- ("T0_phq9|T1_phq9")
1558093836848:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1558093837853:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1558093837855:dat2 <- group_by(dat1, Patientencode) %>%
1558093837856:summarise(occur = n()) %>%
1558093837857:filter(occur == 2) %>%
1558093837859:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1558093850428:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit+ (1+variable|dat2$Patientencode)) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür
1558093858051:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit+ (1+dat2$variable|dat2$Patientencode)) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür
1558093885355:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit+ (1+dat2$variable|dat2$Patientencode, control = lmerControl(check.nobs.vs.nRE="ignore"))) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür
1558093916381:library(lmer4)
1558093919809:library(lme4)
1558093999466:lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit+ (1+dat2$variable|dat2$Patientencode, control = lmerControl(check.nobs.vs.nRE="ignore")))
1558094021637:lm1 <- lmer(dat2$value ~ dat2$variable * dat2$trans * dat2$condit + (1+dat2$variable|dat2$Patientencode control = lmerControl(check.nobs.vs.nRE="ignore"))) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür
1558094066259:lm1 <- lmer(value ~ variable * trans * condit + (1+variable|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore"))) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür
1558094072619:lm1 <- lmer(value ~ variable * trans * condit + (1+variable|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore")) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür
1558094677707:#
1558094677709:lm1 <- lmer(value ~ variable * trans * condit + (variable|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore")) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür
1558094680108:summary(lm1)
1558094702912:#
1558094702915:lm1 <- lmer(value ~ variable * trans + (variable|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore")) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür
1558094705578:#
1558094705580:lm1 <- lmer(value ~ variable * trans + (variable|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore")) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür
1558094716208:#
1558094716210:lm1 <- lmer(value ~ variable * trans + (1|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore")) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür
1558094734890:#
1558094734892:lm1 <- lmer(value ~ variable * trans + (1|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore")) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür
1558094735662:summary(lm1)
1558094765465:#
1558094765466:lm1 <- lmer(value ~ variable * trans * condit + (variable|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore")) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür
1558094923794:#
1558094923795:lm1 <- lmer(value ~ variable * trans * condit + (variable|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore"),REML = TRUE) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür
1558094937961:lm1 <- lmer(value ~ variable * trans  + (variable|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore"),REML = TRUE)
1558094949512:lm1 <- lmer(value ~ variable * trans  + (variable|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore"),REML = F)
1558094978298:lm1 <- lmer(value ~ variable * trans  + (variable|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore", optimizer = "Nelder_Mead"))
1558095055160:lm1 <- lmer(value ~ variable * trans  + (variable|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore", optimizer = "Nelder_Mead"), optCtrl = list(maxfun = 100000))
1558095063935:lm1 <- lmer(value ~ variable * trans  + (variable|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore", optimizer = "Nelder_Mead"), optCtrl = list(maxfun = 1000000))
1558095151346:lm1 <- lmer(value ~ variable * trans  + (variable|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore", optimizer = "Nelder_Mead", optCtrl = list(maxfun = 1000000)))
1558095152970:lm1 <- lmer(value ~ variable * trans  + (variable|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore", optimizer = "Nelder_Mead", optCtrl = list(maxfun = 1000000))
1558095154191:)
1558095167657:lm1 <- lmer(value ~ variable * trans  + (variable|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore", optimizer = "Nelder_Mead", optCtrl = list(maxfun = 100000000)))
1558095179946:lm1 <- lmer(value ~ variable * trans  + (variable|Patientencode), data = dat2, control = glmerControl(check.nobs.vs.nRE="ignore", optimizer = "Nelder_Mead", optCtrl = list(maxfun = 100000000)))
1558095199346:lm1 <- lmer(value ~ variable * trans  + (variable|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore", optimizer = "Nelder_Mead", optCtrl = list(maxfun = 100000000)))
1558095321355:tt <- getME(lm1,"theta")
1558095321358:ll <- getME(lm1,"lower")
1558095321360:min(tt[ll==0])
1558095588381:isSingular(lm1) # False = gut
1558095825221:ranef(lm1)
1558095858996:plot(ranef(lm1))
1558095876181:plot(ranef(lm1)) + abline(0)
1558095879942:plot(ranef(lm1)) + abline(h = 0)
1558095892936:plot(ranef(lm1))abline(h = 0)
1558095913462:plot(ranef(lm1))
1558095914316:abline( h = 0)
1558095919781:plot(ranef(lm1))
1558095920197:abline( h = 0)
1558095939278:abline( v = 0)
1558095943905:plot(ranef(lm1)) +
1558095943906:abline( v = 0)
1558095946157:plot(ranef(lm1)) +abline( v = 0)
1558095980295:plot(ranef(lm1)) +abline(v = 0.0)
1558095994294:dev.off)
1558095996381:dev.off())
1558095998581:dev.off()
1558096000389:dev.off()
1558096004597:plot(ranef(lm1)) +abline(v = 0.0)
1558096016657:plot(ranef(lm1)) +abline(v = 0)
1558096117312:library(nlme)
1558096141768:lme(value ~ variable * trans, random = ~ variable | Patientencode, data=dat2)
1558096150440:lm1 <- lme(value ~ variable * trans, random = ~ variable | Patientencode, data=dat2)
1558096155918:summary(lm1)
1558096177599:lm1 <- lme(value ~ variable * trans * condit, random = ~ variable | Patientencode, data=dat2)
1558096183199:summary(lm1)
1558096289336:#
1558096289340:lm1 <- lmer(value ~ variable * trans * condit + (variable|Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore"),REML = TRUE) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558096291395:summary(lm1)
1558096339266:isSingular(lm1) # False = gut
1558096341650:plot(ranef(lm1)) +abline(v = 0)
1558096345290:plot(ranef(lm1))
1558096464765:lm1 <- lme(value ~ variable * trans * condit, random = ~ variable | condit/Patientencode, data=dat2) # das scheint zu funktionieren => gründe, aber seh ähnliche werte zu oben!!
1558096466942:summary(lm1)
1558096590358:lm1 <- lme(value ~ variable * trans * condit, random = ~ variable | condit:Patientencode, data=dat2) # das scheint zu funktionieren => gründe, aber seh ähnliche werte zu oben!!
1558096614824:#
1558096614830:lm1 <- lmer(value ~ variable * trans * condit + (variable|condit/Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore"),REML = TRUE) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558096663343:lm1 <- lme(value ~ variable * trans * condit, random = list( condit  = ~ variable,
1558096663346:Patientencode = ~ variable), data=dat2) # das scheint zu funktionieren => gründe, aber seh ähnliche werte zu oben!!
1558096665099:summary(lm1)
1558096741544:#
1558096741550:lm1 <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore"),REML = TRUE) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558096746511:summary(lm1)
1558096824205:plot(ranef(lm1))
1558096830366:isSingular(lm1) # False = gut
1558096848456:pl <- lme4::ranef(lm1)$`dat2$Patientencode`
1558096848461:boxplot(pl[[1]] ~ rownames(pl), xlab = "Patient", ylab = "Zufällige Abweichungen") # nicht sehr normalverteilt
1558096848464:abline(h = c(-2,2), col = "red")
1558096848466:abline(h = 0, col = "black")
1558096865927:# überprüfe nochmals die modellgüte
1558096865935:#1. Zufällige Abweichungen sind normalverteilt mit EW 0 und Varianz
1558096865941:pl <- lme4::ranef(lm1)$`dat2$Patientencode`
1558096866502:boxplot(pl[[1]] ~ rownames(pl), xlab = "Patient", ylab = "Zufällige Abweichungen") # nicht sehr normalverteilt
1558096881911:pl[[1]]
1558096888196:ranef(lm1)
1558096923203:# überprüfe nochmals die modellgüte
1558096923207:#1. Zufällige Abweichungen sind normalverteilt mit EW 0 und Varianz
1558096923211:pl <- lme4::ranef(lm1)$`condit:Patientencode`
1558096925438:boxplot(pl[[1]] ~ rownames(pl), xlab = "Patient", ylab = "Zufällige Abweichungen") # nicht sehr normalverteilt
1558096929004:abline(h = c(-2,2), col = "red")
1558096930181:abline(h = 0, col = "black")
1558096959829:fm <- lm(value ~ Patientencode, dat2)
1558096959833:boxplot(residuals(fm) ~ dat2$Patientencode, xlab = "Patient", ylab = "Residuen") # boxplots sind nicht
1558096963149:abline(h = c(-2,2), col = "red")
1558096963492:abline(h = 0, col = "black")
1558096993216:boxplot(residuals(lm1) ~ dat2$Patientencode, xlab = "Patient", ylab = "Residuen") # boxplots sind nicht um 0 verzeilt => wieso?? mit fm ja
1558097614755:dat <- data_wide %>%
1558097614756:# filter(!duplicated(raw_data3$Patientencode)) %>%
1558097614758:dplyr::group_by(sex) %>%
1558097614759:dplyr::summarise(tot = n()) %>%
1558097614761:mutate(pct = tot / sum(tot))
1558097614790:ggplot(dat, aes(x = sex, y = pct)) +
1558097614792:geom_bar(stat = "identity") +
1558097614793:scale_y_continuous(labels = scales::percent) +
1558097614794:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25, size = 9) +
1558097614796:xlab("Geschlecht") +
1558097614797:ylab("Anteil") +
1558097614799:mytheme
1558097619499:source("mytheme.R")
1558097622948:dat <- data_wide %>%
1558097622950:# filter(!duplicated(raw_data3$Patientencode)) %>%
1558097622951:dplyr::group_by(sex) %>%
1558097622952:dplyr::summarise(tot = n()) %>%
1558097622954:mutate(pct = tot / sum(tot))
1558097622960:ggplot(dat, aes(x = sex, y = pct)) +
1558097622962:geom_bar(stat = "identity") +
1558097622963:scale_y_continuous(labels = scales::percent) +
1558097622964:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25, size = 9) +
1558097622966:xlab("Geschlecht") +
1558097622967:ylab("Anteil") +
1558097622969:mytheme
1558097627551:dat <- data_wide %>%
1558097627553:# filter(!duplicated(raw_data3$Patientencode)) %>%
1558097627554:dplyr::group_by(trans) %>%
1558097627556:dplyr::summarise(tot = n()) %>%
1558097627557:mutate(pct = tot / sum(tot))
1558097627563:ggplot(dat, aes(x = trans, y = pct)) +
1558097627564:geom_bar(stat = "identity") +
1558097627565:scale_y_continuous(labels = scales::percent) +
1558097627567:geom_text(aes(label = tot), position = position_dodge(width = 1),vjust = -.25, size = 9) +
1558097627568:mytheme
1558097669793:table(data_wide$sex)
1558097669795:psych::describe(data_wide$age, na.rm = T) # one missing => which(is.na(data_wide$age))
1558097669806:Hmisc::describe(data_wide$educ)
1558097694909:Hmisc::describe(data_wide$sex)
1558097727581:Hmisc::describe(data_wide$age_group)
1558097740492:Hmisc::describe(data_wide$educ)
1558097799921:# Fisher tests
1558097799922:fisher.test(data_wide$sex, data_wide$trans, fisher = T) # n.s. => seems weird for me => check out
1558097805423:# Fisher tests
1558097805425:fisher.test(data_wide$sex, data_wide$trans) # n.s. => seems weird for me => check out
1558097827535:fisher.test(data_wide$trans, data_wide$age_group)
1558097848004:fisher.test(data_wide$trans, data_wide$educ)
1558097882488:# Fisher tests
1558097882495:fisher.test(data_wide$trans, data_wide$sex) # n.s.
1558097887036:fisher.test(data_wide$trans, data_wide$age_group) # n.s
1558097887611:fisher.test(data_wide$trans, data_wide$educ) # signifikante unterschiede
1558098170722:names(data_wide)
1558098228398:# überprüfe einzelunterschiede
1558098228400:xtabs(~ trans + educ, data = data_wide)
1558098242046:fisher.test(dat)
1558098247605:dat
1558098252921:# überprüfe einzelunterschiede
1558098252922:dat <- xtabs(~ trans + educ, data = data_wide)
1558098253222:fisher.test(dat)
1558098272584:fisher.test(dat[ , c[1,2]])
1558098280889:fisher.test(dat[ , c(1,2)])
1558098312440:fisher.test(dat[ , c(1)])
1558098317738:# überprüfe einzelunterschiede
1558098317740:dat <- xtabs(~ trans + educ, data = data_wide)
1558098317958:fisher.test(dat[ , c(1)])
1558098332855:dat[ , c(1,2)]
1558098368142:dat <- data_wide %>%
1558098368144:group_by(trans, age_group) %>%
1558098368146:dplyr::summarise(tot = n()) %>%
1558098368147:mutate(pct = tot / sum(tot)) %>%
1558098368148:ungroup() %>%
1558098368150:mutate(age_group = ifelse(is.na(.$age_group), "Unbekannt", age_group)) %>%
1558098368151:complete(age_group, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1558098368242:ggplot(dat, aes(x = parse_factor(age_group, levels = c("<29 Jahre", "30 bis 39 Jahre", "40 bis 49 Jahre", "50 bis 59 Jahre", ">60 Jahre", "Unbekannt")), y = pct, fill = trans)) +
1558098368244:geom_bar(stat = "identity", position = position_dodge(), width = .6) +
1558098368245:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1558098368247:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1558098368248:guides(fill = guide_legend("Überweisungsquelle")) +
1558098368249:xlab("Alter") +
1558098368251:ylab("Anzahl Personen") +
1558098368252:mytheme
1558098371940:dat <- data_wide %>%
1558098371941:group_by(trans, age_group) %>%
1558098371943:dplyr::summarise(tot = n()) %>%
1558098371944:mutate(pct = tot / sum(tot)) %>%
1558098371946:ungroup() %>%
1558098371947:mutate(age_group = ifelse(is.na(.$age_group), "Unbekannt", age_group)) %>%
1558098371949:complete(age_group, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1558098373582:ggplot(dat, aes(x = parse_factor(age_group, levels = c("<29 Jahre", "30 bis 39 Jahre", "40 bis 49 Jahre", "50 bis 59 Jahre", ">60 Jahre", "Unbekannt")), y = pct, fill = trans)) +
1558098373583:geom_bar(stat = "identity", position = position_dodge(), width = .6) +
1558098373585:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1558098373587:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1558098373588:guides(fill = guide_legend("Überweisungsquelle")) +
1558098373590:xlab("Alter") +
1558098373591:ylab("Anzahl Personen") +
1558098373593:mytheme
1558098394985:detach("package::psych", unload = T)
1558098401753:detach("package:psych", unload = T)
1558098404203:ggplot(dat, aes(x = parse_factor(age_group, levels = c("<29 Jahre", "30 bis 39 Jahre", "40 bis 49 Jahre", "50 bis 59 Jahre", ">60 Jahre", "Unbekannt")), y = pct, fill = trans)) +
1558098404204:geom_bar(stat = "identity", position = position_dodge(), width = .6) +
1558098404212:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1558098404216:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1558098404217:guides(fill = guide_legend("Überweisungsquelle")) +
1558098404218:xlab("Alter") +
1558098404220:ylab("Anzahl Personen") +
1558098404222:mytheme
1558098473109:dat <- data_wide %>%
1558098473111:group_by(educ, trans) %>%
1558098473112:dplyr::summarise(tot = n()) %>%
1558098473114:mutate(pct = tot / sum(tot)) %>%
1558098473115:ungroup() %>%
1558098473117:mutate(educ = ifelse(is.na(.$educ), "Unbekannt", educ)) %>%
1558098473119:complete(educ, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1558098473133:ggplot(dat, aes(x = parse_factor(educ, levels = c("Primar/Sekundarschule", "Berufsmaturität", "Sekundarschule", "Fachmatur", "Fachchule", "Universität", "anderes", "Unbekannt")), y = tot, fill = trans)) +
1558098473134:geom_bar(stat = "identity", position = position_dodge(), width = .6) +
1558098473135:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c")) +
1558098473137:guides(fill = guide_legend("Überweisungsquelle")) +
1558098473139:scale_x_discrete(labels = c("Primar-/Sekundarstufe", "Berufsmaturität", "Sekundarstufe2", "Fachmittelschule/-maturität", "höhere Fachschule", "Universität", "anderer Abschluss", "Unbekannt")) +
1558098473140:xlab("Höchster Schulabschluss") +
1558098473142:ylab("Anzahl Personen") +
1558098473143:mytheme
1558098540986:dat <- data_wide %>%
1558098540989:group_by(sex, trans) %>%
1558098540991:dplyr::summarise(tot = n()) %>%
1558098540992:mutate(pct = tot / sum(tot)) %>%
1558098540993:ungroup() %>%
1558098540995:mutate(sex = ifelse(is.na(.$sex), "Unbekannt", sex)) %>%
1558098540996:complete(sex, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1558098541006:ggplot(dat, aes(x = sex, y = tot, fill = trans)) +
1558098541011:geom_bar(stat = "identity", position = position_dodge(), width = .6) +
1558098541013:xlab("Geschlecht") +
1558098541015:ylab("Anzahl Personen") +
1558098541018:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1558098541020:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1558098541021:guides(fill = guide_legend("Überweisungsquelle")) +
1558098541023:mytheme
1558098677019:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1558098677020:dat2 <- group_by(dat1, Patientencode) %>%
1558098677022:summarise(occur = n()) %>%
1558098677023:filter(occur == 2) %>%
1558098677025:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1558098678024:ggplot(data=dat2, aes(x=variable, y=value, group=as.factor(Patientencode)))+
1558098678025:geom_point(size=2, col="grey", alpha=.8)+
1558098678027:geom_line() +
1558098678030:mytheme
1558099643050:brms::brm(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2)
1558102341391:#daten aufbereiten
1558102341392:dat <- data_wide %>%
1558102341394:# mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1558102341395:#        moder_ho = (T0_phq9 - T1_phq9) * ho,
1558102341397:#        moder_zw = (T0_phq9 - T1_phq9) * zw,
1558102341398:#        moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1558102341400:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1558102341401:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1558102341402:drop_na(value)
1558102344338:View(dat)
1558102370010:# check again
1558102370012:dat2 <- group_by(dat, Patientencode) %>%
1558102370013:summarise(occur = n()) %>%
1558102370014:filter(occur == 2) %>%
1558102370016:left_join(., dat, by = "Patientencode") # 46 personen
1558102371724:# plot
1558102371725:ggplot(data=dat2, aes(x=ld, y=value, col=as.factor(trans)))+
1558102371727:geom_point(size=1, alpha=.7, position = "jitter")+
1558102371728:geom_smooth(formula = y ~ 0 + x, se=F, size=1.5, linetype=1, alpha=.7)+
1558102371730:theme_minimal() +
1558102371731:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1558102434273:dat2 <- dat %>%
1558102434274:drop_na(value) %>%
1558102434276:group_by(Patientencode) %>%
1558102434279:summarise(occur = n()) %>%
1558102434281:filter(occur == 3) %>%
1558102434282:inner_join(., dat, by = "Patientencode")
1558102434711:lm2 <- lmer(value ~ variable + (1|Patientencode), data = dat2)
1558102437278:summary(lm2)
1558102443027:dat2 <- dat %>%
1558102443029:drop_na(value) %>%
1558102443030:group_by(Patientencode) %>%
1558102443032:summarise(occur = n()) %>%
1558102443034:filter(occur == 3) %>%
1558102443035:inner_join(., dat, by = "Patientencode")
1558102454151:#daten aufbereiten
1558102454153:dat <- data_wide %>%
1558102454157:# mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1558102454160:#        moder_ho = (T0_phq9 - T1_phq9) * ho,
1558102454161:#        moder_zw = (T0_phq9 - T1_phq9) * zw,
1558102454163:#        moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1558102454166:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1558102454168:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1558102454169:drop_na(value)
1558102459426:# another try
1558102459427:dat <- data_long %>%
1558102459429:filter(grepl("T0_phq9|T1_phq9|ld", data_long$variable))
1558102460591:dat2 <- dat %>%
1558102460593:drop_na(value) %>%
1558102460595:group_by(Patientencode) %>%
1558102460596:summarise(occur = n()) %>%
1558102460597:filter(occur == 3) %>%
1558102460599:inner_join(., dat, by = "Patientencode")
1558102462010:lm2 <- lmer(value ~ variable + (1|Patientencode), data = dat2)
1558102462997:summary(lm2)
1558102533498:# ld
1558102533500:lm1 <- lme(value ~ variable * trans  + ld + variable * ld, random = list( condit  = ~ variable,
1558102533502:Patientencode = ~ variable), data=dat2)
1558102539718:#daten aufbereiten
1558102539719:dat <- data_wide %>%
1558102539720:# mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1558102539722:#        moder_ho = (T0_phq9 - T1_phq9) * ho,
1558102539723:#        moder_zw = (T0_phq9 - T1_phq9) * zw,
1558102539724:#        moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1558102539726:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1558102539727:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1558102539728:drop_na(value)
1558102540484:# check again
1558102540486:dat2 <- group_by(dat, Patientencode) %>%
1558102540487:summarise(occur = n()) %>%
1558102540489:filter(occur == 2) %>%
1558102540490:left_join(., dat, by = "Patientencode") # 46 personen
1558102543772:# ld
1558102543774:lm1 <- lme(value ~ variable * trans  + ld + variable * ld, random = list( condit  = ~ variable,
1558102543776:Patientencode = ~ variable), data=dat2)
1558102707797:# ld
1558102707799:lm1 <- lme(value ~ variable * trans  + ld + variable * ld, random = ~ variable | Patientencode, data=dat2)
1558102714512:sumamry(lm1)
1558102719534:summary(lm1)
1558102782532:# ld
1558102782534:lm1 <- lme(value ~ variable * trans  + variable * ld, random = ~ variable | Patientencode, data=dat2)
1558102782904:summary(lm1)
1558102933197:# ld
1558102933200:lm1 <- lme(value ~ variable + trans * ld, random = ~ variable | Patientencode, data=dat2)
1558102933706:summary(lm1)
1558103087821:# ld
1558103087822:lm1 <- lme(value ~ variable * trans * ld, random = ~ variable | Patientencode, data=dat2)
1558103089170:summary(lm1)
1558103254632:# ld
1558103254639:lm1 <- lme(value ~ variable * trans * ld, random = list(trans  = ~ variable,
1558103254640:Patientencode = ~ variable), data=dat2)
1558103256012:summary(lm1)
1558103319425:# ho
1558103319428:lm1 <- lme(value ~ variable * trans * ho, random = list(trans  = ~ variable,
1558103319429:Patientencode = ~ variable), data=dat2)
1558103319860:summary(lm1)
1558103353672:# zw
1558103353674:lm1 <- lme(value ~ variable * trans * zw, random = list(trans  = ~ variable,
1558103353675:Patientencode = ~ variable), data=dat2)
1558103360225:# zw
1558103360226:lm3 <- lme(value ~ variable * trans * zw, random = list(trans  = ~ variable,
1558103360228:Patientencode = ~ variable), data=dat2)
1558103360524:summary(lm3)
1558103386143:# zv
1558103386145:lm4 <- lme(value ~ variable * trans * zv, random = list(trans  = ~ variable,
1558103386146:Patientencode = ~ variable), data=dat2)
1558103499211:# zh
1558103499213:lm4 <- lme(value ~ variable * trans * zh, random = list(trans  = ~ variable,
1558103499215:Patientencode = ~ variable), data=dat2)
1558103499421:summary(lm4)
1558103502144:# zh
1558103502145:lm4 <- lme(value ~ variable * trans * zh, random = list(trans  = ~ variable,
1558103502147:Patientencode = ~ variable), data=dat2)
1558103511780:View(dat2)
1558103540115:# vh
1558103540116:lm4 <- lme(value ~ variable * trans * vh, random = list(trans  = ~ variable,
1558103540118:Patientencode = ~ variable), data=dat2)
1558103540540:summary(lm4)
1558103667381:# third try, nach code von kollegin von kira
1558103667382:dat$moderat <- dat$T0_phq9*dat$ld # macht aus meiner sicht wenig sinn
1558103673723:#daten aufbereiten
1558103673725:dat <- data_wide %>%
1558103673726:# mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1558103673728:#        moder_ho = (T0_phq9 - T1_phq9) * ho,
1558103673729:#        moder_zw = (T0_phq9 - T1_phq9) * zw,
1558103673731:#        moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1558103673732:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1558103673734:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1558103673735:drop_na(value)
1558103676888:# third try, nach code von kollegin von kira
1558103676890:dat$moderat <- dat$T0_phq9*dat$ld # macht aus meiner sicht wenig sinn
1558103731331:# plotte ergbenis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558103731332:# plot
1558103731334:ggplot(data=dat2, aes(x=ho, y=value, col=as.factor(trans)))+
1558103731335:geom_point(size=1, alpha=.7, position = "jitter")+
1558103731337:geom_smooth(formula = y ~ 0 + x, se=F, size=1.5, linetype=1, alpha=.7)+
1558103731338:theme_minimal() +
1558103731339:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1558103817119:# plotte ergbenis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558103817121:# plot
1558103817122:ggplot(data=dat2, aes(y=ho, x=value, col=as.factor(trans)))+
1558103817124:geom_point(size=1, alpha=.7, position = "jitter")+
1558103817125:geom_smooth(formula = y ~ 0 + x, se=F, size=1.5, linetype=1, alpha=.7)+
1558103817127:theme_minimal() +
1558103817129:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1558103873224:# plotte ergbenis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558103873232:# plot
1558103873236:ggplot(data=dat2, aes(y=ho, x=value, col=as.factor(trans)))+
1558103873245:geom_boxplot()
1558103914695:# plotte ergbenis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558103914696:# plot
1558103914698:ggplot(data=dat2, aes(y=ho, x=interaction(value, variable), col=as.factor(trans)))+
1558103914699:geom_boxplot()
1558103947918:interaction(value, variable)
1558103959657:interaction(dat2$value, dat2$variable)
1558104000559:# plotte ergbenis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558104000561:# plot
1558104000563:ggplot(data=dat, aes(y=ho, x= variable, col=as.factor(trans)))+
1558104000564:geom_boxplot()
1558104039549:# subsample
1558104039550:pat <- c("ld|ho|zw|vh")
1558104040147:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value), ]
1558104046492:# ho: n.s.
1558104046494:boxplot(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",]$trans)
1558104052906:wilcox.test(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",]$trans)
1558104067500:t.test(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",]$trans)
1558104106155:lm1 <- lme(value ~ variable * trans * condit + sex + educ + age, random = list( condit  = ~ variable,
1558104106157:Patientencode = ~ variable), data=dat2) # das scheint zu funktionieren => gründe, aber seh ähnliche werte zu oben!!
1558104107897:summary(lm1)
1558104229412:# plot2
1558104229413:# sample
1558104229415:pl <- dat2 %>%
1558104229416:mutate(xlab = paste(trans, variable, sep = "_"))
1558104232595:View(pl)
1558104251285:pat <- ("T0_phq9|T1_phq9")
1558104251287:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1558104251291:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1558104251292:dat2 <- group_by(dat1, Patientencode) %>%
1558104251294:summarise(occur = n()) %>%
1558104251295:filter(occur == 2) %>%
1558104251296:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1558104256010:# plot2
1558104256012:# sample
1558104256013:pl <- dat2 %>%
1558104256014:mutate(xlab = paste(trans, variable, sep = "_"))
1558104294713:ggplot(pl, aes(x = xlab, y = value)) +
1558104294714:stat_summary(fun.y = mean, geom = "point", shape = 15, size = 4) +
1558104294716:stat_summary(fun.data = "mean_cl_boot", geom = "errorbar", size = .7, width = .2) + # lese standardfehler nach => stimmt was nicht
1558104294717:scale_y_continuous(limits = c(0,20)) +
1558104294719:ylab("Mittelwerte und Standardfehler der Summenscores") +
1558104294720:xlab("Überweisungsquellen und Zeitpunkt")
1558104323822:ggplot(pl, aes(y = age, x = value)) +
1558104323823:geom_point()
1558104337198:ggplot(pl, aes(y = age, x = value, fill = variable)) +
1558104337200:geom_point()
1558104344294:ggplot(pl, aes(y = age, x = value, color = variable)) +
1558104344295:geom_point()
1558104359167:ggplot(pl, aes(y = age, x = value, color = variable)) +
1558104359168:geom_point() +
1558104359170:geom_smooth()
1558104383199:ggplot(pl, aes(x = age, y = value, color = variable)) +
1558104383201:geom_point() +
1558104383202:geom_smooth()
1558104411376:ggplot(pl, aes(x = age, y = value, color = variable)) +
1558104411377:geom_point() +
1558104411379:geom_smooth(method = 'lm')
1558104426681:ggplot(pl, aes(x = age, y = value, color = variable)) +
1558104426682:geom_point() +
1558104426684:geom_smooth(method = 'lm', sd = F)
1558104436033:ggplot(pl, aes(x = age, y = value, color = variable)) +
1558104436035:geom_point() +
1558104436036:geom_smooth(method = 'lm', se = F)
1558104518418:ggplot(pl, aes(x = age, y = value, color = condit)) +
1558104518420:geom_point() +
1558104518422:geom_smooth(method = 'lm', se = F)
1558104534802:ggplot(pl, aes(x = age, y = value, color = trans)) +
1558104534803:geom_point() +
1558104534805:geom_smooth(method = 'lm', se = F)
1558104573970:ggplot(pl, aes(x = age, y = value, color = variable)) +
1558104573971:geom_point() +
1558104573973:geom_smooth(method = 'lm', se = F)
1558104606530:ggplot(pl, aes(x = age, y = value, color = variable)) +
1558104606534:geom_point() +
1558104606536:geom_line()+
1558104606537:geom_smooth(method = 'lm', se = F)
1558104619297:ggplot(pl, aes(x = age, y = value, color = variable, group = variable)) +
1558104619299:geom_point() +
1558104619300:geom_line()+
1558104619302:geom_smooth(method = 'lm', se = F)
1558104628066:ggplot(pl, aes(x = age, y = value, color = variable, group = variable)) +
1558104628068:geom_point() +
1558104628070:geom_line(group = variable)+
1558104628071:geom_smooth(method = 'lm', se = F)
1558104636512:ggplot(pl, aes(x = age, y = value, color = variable, group = variable)) +
1558104636514:geom_point() +
1558104636515:geom_line(aes(group = variable))+
1558104636517:geom_smooth(method = 'lm', se = F)
1558104657298:ggplot(pl, aes(x = age, y = value, color = variable, group = variable)) +
1558104657299:geom_point() +
1558104657300:#geom_line(aes(group = variable))+
1558104657302:geom_smooth(method = 'lm', se = F)
1558105178805:# ho: scheint einen einfluss zu haben => probiere es zu visualisieren
1558105178807:lm2 <- lme(value ~ variable * trans * ho, random = list(trans  = ~ variable,
1558105178808:Patientencode = ~ variable), data=dat2)
1558105179633:summary(lm2)
1558105185156:#daten aufbereiten
1558105185157:dat <- data_wide %>%
1558105185159:# mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1558105185160:#        moder_ho = (T0_phq9 - T1_phq9) * ho,
1558105185162:#        moder_zw = (T0_phq9 - T1_phq9) * zw,
1558105185163:#        moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1558105185165:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1558105185166:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1558105185167:drop_na(value)
1558105186205:# check again
1558105186207:dat2 <- group_by(dat, Patientencode) %>%
1558105186208:summarise(occur = n()) %>%
1558105186209:filter(occur == 2) %>%
1558105186211:left_join(., dat, by = "Patientencode") # 46 personen
1558105189454:# ho: scheint einen einfluss zu haben => probiere es zu visualisieren
1558105189458:lm2 <- lme(value ~ variable * trans * ho, random = list(trans  = ~ variable,
1558105189460:Patientencode = ~ variable), data=dat2)
1558105190345:summary(lm2)
1558365741700:# load themes,data, packages-----------
1558365741701:source("kira_masterarbeit_edit_190418.R")
1558365744026:source("mytheme.R")
1558365744085:detach("package:psych", unload=TRUE) # attention psych and ggplot do not well togheter
1558365744088:library(cowplot)
1558365744111:library(lme4)
1558365744426:library(multilevel)
1558365744460:detach("package:multilevel", unload=TRUE)
1558365744464:# library(multcomp) # funktioniert nicht => wieso?
1558365744467:# setze chunk optionen
1558365744469:knitr::opts_chunk$set(fig.align = "center", fig.height = 12, fig.width = 14)
1558365764421:# h1b:versuche das ganze zu plotten
1558365764422:pat <- ("T0_phq9|T1_phq9")
1558365765626:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1558365769842:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1558365769843:dat2 <- group_by(dat1, Patientencode) %>%
1558365769845:summarise(occur = n()) %>%
1558365769846:filter(occur == 2) %>%
1558365769847:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1558365793338:# drei ebenen modell => macht sinn das ganze so zu testen => ähnliche werte zum lme4 package, aber das obige modell konvergiert nicht => gründe?
1558365793340:library(nlme)
1558365795318:lm1 <- lme(value ~ variable * trans * condit + sex + educ + age, random = list( condit  = ~ variable,
1558365795319:Patientencode = ~ variable), data=dat2) # das scheint zu funktionieren => gründe, aber seh ähnliche werte zu oben!!
1558365802680:summary(lm1) # erzeugt NANs => gründe?
1558365830981:summary(lm1) # erzeugt NANs => gründe?
1558366181234:# Verteilung
1558366181235:table(data_wide$sex)
1558366182983:Hmisc::describe(data_wide$sex)
1558366194009:Hmisc::describe(data_wide$age_group)
1558366195271:psych::describe(data_wide$age, na.rm = T) # one missing => which(is.na(data_wide$age))
1558463955607:# subsample
1558463955612:pat <- c("ld|ho|zw|vh")
1558463955619:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value), ]
1558463955623:# überprüfe ob auch alle datenpunkte drin sind
1558463955624:t <- dat %>%
1558463955626:group_by(Patientencode, trans) %>%
1558463955627:summarise(occur = n()) %>%
1558463955628:mutate(occur = ifelse(occur == 4, T, F))
1558463955642:sum(t$occur) # 53 personen
1558463955646:table(t$trans)
1558463955651:# schaue die mittelwerte an
1558463955654:aggregate(value ~ variable + trans, dat, function(x) c(mean = mean(x), median = median(x), sd = sd(x), min = min(x), max = max(x))) # wieso keine t-tests möglich?
1558463955677:# ld: n.s.
1558463955679:boxplot(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans)
1558463955716:wilcox.test(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans)
1558463955724:# ho: n.s.
1558463955726:boxplot(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",]$trans)
1558463955921:wilcox.test(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",]$trans)
1558463955927:# zw: n.s.
1558463955929:boxplot(dat[dat$variable == "zw",]$value ~ dat[dat$variable == "zw",]$trans)
1558463955934:wilcox.test(dat[dat$variable == "zw",]$value ~ dat[dat$variable == "zw",]$trans)
1558463955941:# vh: n.s.
1558463955942:boxplot(dat[dat$variable == "vh",]$value ~ dat[dat$variable == "vh",]$trans)
1558463955949:wilcox.test(dat[dat$variable == "vh",]$value ~ dat[dat$variable == "vh",]$trans)
1558468239952:dat <- data_wide %>%
1558468239953:group_by(trans, age_group) %>%
1558468239954:dplyr::summarise(tot = n()) %>%
1558468239956:mutate(pct = tot / sum(tot)) %>%
1558468239957:ungroup() %>%
1558468239959:mutate(age_group = ifelse(is.na(.$age_group), "Unbekannt", age_group)) %>%
1558468239961:complete(age_group, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1558468240047:ggplot(dat, aes(x = parse_factor(age_group, levels = c("<29 Jahre", "30 bis 39 Jahre", "40 bis 49 Jahre", "50 bis 59 Jahre", ">60 Jahre", "Unbekannt")), y = pct, fill = trans)) +
1558468240057:geom_bar(stat = "identity", position = position_dodge(), width = .6) +
1558468240059:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1558468240064:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1558468240066:guides(fill = guide_legend("Überweisungsquelle")) +
1558468240071:xlab("Alter") +
1558468240077:ylab("Anzahl Personen") +
1558468240085:mytheme
1558468241073:ggsave("plots/age_trans_190513.pdf",
1558468241074:height = 12,
1558468241076:width = 18,
1558468241078:device = cairo_pdf)
1558468288257:dat <- data_wide %>%
1558468288262:group_by(sex, trans) %>%
1558468288264:dplyr::summarise(tot = n()) %>%
1558468288269:mutate(pct = tot / sum(tot)) %>%
1558468288271:ungroup() %>%
1558468288275:mutate(sex = ifelse(is.na(.$sex), "Unbekannt", sex)) %>%
1558468288278:complete(sex, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1558468288351:ggplot(dat, aes(x = sex, y = tot, fill = trans)) +
1558468288352:geom_bar(stat = "identity", position = position_dodge(), width = .6) +
1558468288356:xlab("Geschlecht") +
1558468288363:ylab("Anzahl Personen") +
1558468288368:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1558468288370:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1558468288371:guides(fill = guide_legend("Überweisungsquelle")) +
1558468288372:mytheme
1558468288632:ggsave("plots/gender_condit_190513.pdf",
1558468288645:height = 12,
1558468288654:width = 12,
1558468288659:device = cairo_pdf)
1558468349501:dat <- data_wide %>%
1558468349503:group_by(trans, age_group) %>%
1558468349510:dplyr::summarise(tot = n()) %>%
1558468349513:mutate(pct = tot / sum(tot)) %>%
1558468349517:ungroup() %>%
1558468349525:mutate(age_group = ifelse(is.na(.$age_group), "Unbekannt", age_group)) %>%
1558468349528:complete(age_group, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1558468349538:ggplot(dat, aes(x = parse_factor(age_group, levels = c("<29 Jahre", "30 bis 39 Jahre", "40 bis 49 Jahre", "50 bis 59 Jahre", ">60 Jahre", "Unbekannt")), y = pct, fill = trans)) +
1558468349539:geom_bar(stat = "identity", position = position_dodge(), width = .6) +
1558468349541:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1558468349542:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1558468349544:guides(fill = guide_legend("Überweisungsquelle")) +
1558468349545:xlab("Alter") +
1558468349547:ylab("Anzahl Personen") +
1558468349551:mytheme
1558468349804:ggsave("plots/age_trans_190513.pdf",
1558468349806:height = 12,
1558468349808:width = 18,
1558468349810:device = cairo_pdf)
1558468559695:dat <- data_wide %>%
1558468559697:group_by(trans, age_group) %>%
1558468559699:dplyr::summarise(tot = n()) %>%
1558468559700:mutate(pct = tot / sum(tot)) %>%
1558468559702:ungroup() %>%
1558468559703:mutate(age_group = ifelse(is.na(.$age_group), "Unbekannt", age_group)) %>%
1558468559705:complete(age_group, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1558468559716:ggplot(dat, aes(x = parse_factor(age_group, levels = c("<29 Jahre", "30 bis 39 Jahre", "40 bis 49 Jahre", "50 bis 59 Jahre", ">60 Jahre", "Unbekannt")), y = pct, fill = trans)) +
1558468559717:geom_bar(stat = "identity", position = position_dodge(), width = .6) +
1558468559719:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1558468559721:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1558468559722:guides(fill = guide_legend("Überweisungsquelle")) +
1558468559725:xlab("Alter") +
1558468559726:ylab("Anzahl Personen") +
1558468559728:mytheme
1558468559963:ggsave("plots/age_trans_190513.pdf",
1558468559974:height = 12,
1558468559979:width = 18,
1558468559988:device = cairo_pdf)
1558468939966:dat <- data_wide %>%
1558468939967:group_by(trans, age_group) %>%
1558468939969:dplyr::summarise(tot = n()) %>%
1558468939971:mutate(pct = tot / sum(tot)) %>%
1558468939973:ungroup() %>%
1558468939974:mutate(age_group = ifelse(is.na(.$age_group), "Unbekannt", age_group)) %>%
1558468939975:complete(age_group, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1558468939988:ggplot(dat, aes(x = parse_factor(age_group, levels = c("<29 Jahre", "30 bis 39 Jahre", "40 bis 49 Jahre", "50 bis 59 Jahre", ">60 Jahre", "Unbekannt")), y = pct, fill = trans)) +
1558468939990:geom_bar(stat = "identity", position = position_dodge(), width = .6) +
1558468939991:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1558468939993:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1558468939995:guides(fill = guide_legend("Überweisungsquelle")) +
1558468939997:xlab("Alter") +
1558468939998:ylab("Anzahl Personen") +
1558468940001:mytheme
1558468940246:ggsave("plots/age_trans_190513.pdf",
1558468940247:height = 12,
1558468940249:width = 18,
1558468940250:device = cairo_pdf)
1558468958888:dat <- data_wide %>%
1558468958890:group_by(trans, age_group) %>%
1558468958892:dplyr::summarise(tot = n()) %>%
1558468958893:mutate(pct = tot / sum(tot)) %>%
1558468958894:ungroup() %>%
1558468958896:mutate(age_group = ifelse(is.na(.$age_group), "Unbekannt", age_group)) %>%
1558468958898:complete(age_group, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1558468958910:ggplot(dat, aes(x = parse_factor(age_group, levels = c("<29 Jahre", "30 bis 39 Jahre", "40 bis 49 Jahre", "50 bis 59 Jahre", ">60 Jahre", "Unbekannt")), y = pct, fill = trans)) +
1558468958911:geom_bar(stat = "identity", position = position_dodge(), width = .6) +
1558468958913:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1558468958915:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1558468958917:guides(fill = guide_legend("Überweisungsquelle")) +
1558468958920:xlab("Alter") +
1558468958921:ylab("Anzahl Personen") +
1558468958924:mytheme
1558468959188:ggsave("plots/age_trans_190513.pdf",
1558468959193:height = 12,
1558468959199:width = 18,
1558468959203:device = cairo_pdf)
1558469165734:table(dat$trans) # sehr ungleiche gruppengrössen
1558469165743:# h1b:schaue boxplots an
1558469165745:# hier ein beispiel für die resultate: http://rcompanion.org/handbook/I_06.html
1558469165747:p1 <- ggplot(dat, aes(y = dat$T0_phq9 , x = trans)) +
1558469165749:geom_boxplot() +
1558469165751:scale_y_continuous(limits = c(0,20))# dont look very nice :(
1558469165769:# ggplot(dat, aes(x = dat$T0_phq9 )) + geom_histogram()
1558469165771:p2 <- ggplot(dat, aes(y = dat$T1_phq9 , x = trans)) +
1558469165773:geom_boxplot() +
1558469165775:scale_y_continuous(limits = c(0,20))# looks good
1558469165782:plot_grid(p1, p2, ncol = 2)
1558469165877:# h1b:versuche das ganze zu plotten
1558469165884:pat <- ("T0_phq9|T1_phq9")
1558469165892:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1558469165899:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1558469165901:dat2 <- group_by(dat1, Patientencode) %>%
1558469165903:summarise(occur = n()) %>%
1558469165905:filter(occur == 2) %>%
1558469165907:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1558469165916:# siehe diese seite: https://rpsychologist.com/r-guide-longitudinal-lme-lmer
1558469165920:lm1 <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore"),REML = TRUE) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558469166077:# drei ebenen modell => macht sinn das ganze so zu testen => ähnliche werte zum lme4 package, aber das obige modell konvergiert nicht => gründe?
1558469166079:library(nlme)
1558469166084:lm1 <- lme(value ~ variable * trans * condit + sex + educ + age, random = list( condit  = ~ variable,
1558469166094:Patientencode = ~ variable), data=dat2) # das scheint zu funktionieren => gründe, aber seh ähnliche werte zu oben!!
1558469166217:summary(lm1) # erzeugt NANs => gründe?
1558469166254:isSingular(lm1) # False = gut
1558469166289:###############
1558469166291:# test with glm: weiterführende analysen und infos
1558469166292:################
1558469166301:# schaue nochmals nach wie man den random effect interpretiert!!
1558469166307:#https://bbolker.github.io/mixedmodels-misc/glmmFAQ.html#count-data
1558469166309:#https://bbolker.github.io/mixedmodels-misc/ecostats_chap.html
1558469166313:# teste ob daten gruppiert
1558469166315:# literatur dazu: LeBreton and Senter (2008) have suggested that an ICC(1)=.05 represents a small to medium effect (p. 838)
1558469166317:av <- aov(value ~ Patientencode, dat2)
1558469166322:library(multilevel)
1558469166342:ICC1(av) # 12% ja gibt gruppenvariablität/subjektvariablität
1558469166349:#verständnis interpretation:
1558469166350:# random effects intercept: heisst zwischen-Gruppen/subjects Varianz (hier 7.995)
1558469166354:# random effects residual: heisst inner-Gruppen/subjects Varianz (hier 9.858)
1558469166355:#inhaltliche interpretation:
1558469166356:# fixed effects intercept: mittlere phc_9 summenscore beträgt 11.42 (beta0)
1558469166358:# Der phq verkleinert sich bei t1 im Mittel um -5 Summenpunkte (beta1)
1558469166360:# Die Varianz der mittleren Abweichung einer Person von dem mittleren phq aller Personen beträgt 7.995 Summenpunkte
1558469166361:# Die Varianz der Residuen beträgt 9.858 Summenpunkte
1558469166367:####################################
1558469166368:# überprüfe nochmals die modellgüte
1558469166370:##################################
1558469166375:#1. Zufällige Abweichungen sind normalverteilt mit EW 0 und Varianz
1558469166381:pl <- lme4::ranef(lm1)$`condit:Patientencode`
1558469166383:boxplot(pl[[1]] ~ rownames(pl), xlab = "Patient", ylab = "Zufällige Abweichungen") # nicht sehr normalverteilt
1558469166387:abline(h = c(-2,2), col = "red")
1558469166389:abline(h = 0, col = "black")
1558469166393:#2. Fehler sind i.i.d. normalverteilt mit EW 0 und Varianz (residuen)
1558469166394:fm <- lm(value ~ Patientencode, dat2)
1558469166397:boxplot(residuals(lm1) ~ dat2$Patientencode, xlab = "Patient", ylab = "Residuen") # boxplots sind nicht um 0 verzeilt => wieso?? mit fm ja
1558469166412:abline(h = c(-2,2), col = "red")
1558469166414:abline(h = 0, col = "black")
1558469166420:###################
1558469166421:# beste alternativ byesian statistics
1558469166423:###################
1558469166426:# hier literatur dazu http://sumsar.net/blog/2014/01/bayesian-first-aid/
1558469166427:# https://vuorre.netlify.com/post/2017/03/21/bayes-factors-with-brms/
1558469166429:# https://sahirbhatnagar.com/bayesian-stan
1558469166430:# am besten buch: Doing Bayesian Data Analysis
1558469166438:brms::brm(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2)
1558469249814:########
1558469249818:# ergebnisse visualisieren
1558469249822:########
1558469249832:# plot1
1558469249834:pl <- dat2 %>%
1558469249837:group_by(variable, trans, condit) %>%
1558469249839:summarise(mean_t = mean(value))
1558469249853:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1558469249857:geom_point(size= 4) +
1558469249862:geom_line(size = 1.5) +
1558469249867:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1558469249876:ylab("Mittelwerte der Summenscore") +
1558469249882:xlab("Zeitpunkt") +
1558469249885:guides(linetype = guide_legend(title = "Überweisungsquelle"), shape = F) +
1558469249891:facet_wrap(~condit) +
1558469249894:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1558469249897:mytheme
1558469250347:# plot2
1558469250348:# sample
1558469250350:pl <- dat2 %>%
1558469250351:mutate(xlab = paste(trans, variable, sep = "_"))
1558469250354:# marginal <- lsmeans::lsmeans(av2, ~ variable) # check that out again
1558469250358:ggplot(pl, aes(x = xlab, y = value)) +
1558469250360:stat_summary(fun.y = mean, geom = "point", shape = 15, size = 4) +
1558469250361:stat_summary(fun.data = "mean_cl_boot", geom = "errorbar", size = .7, width = .2) + # lese standardfehler nach => stimmt was nicht
1558469250362:scale_y_continuous(limits = c(0,20)) +
1558469250364:ylab("Mittelwerte und Standardfehler der Summenscores") +
1558469250365:xlab("Überweisungsquellen und Zeitpunkt")
1558469250576:#plo3 age: sieht aus als ob junge personen mehr von dem treatment profitiert haben als andere
1558469250586:ggplot(pl, aes(x = age, y = value, color = variable, group = variable)) +
1558469250590:geom_point() +
1558469250593:#geom_line(aes(group = variable))+ # somehow not working
1558469250595:geom_smooth(method = 'lm', se = F)
1558469250830:stat_summary(fun.y = mean, geom = "point", shape = 15, size = 4)
1558469386759:# achtung unterschiedliche gruppengrösse => welch-test (default bei t-test!)
1558469386762:# daselbe für ein subsample resp. diejenigen personen ausschliessen die bei t1 weggefallen sind
1558469386765:table(data_wide$trans)
1558469386768:psych::describe(data_wide$T0_phq9)
1558469386788:# schaue boxplots an => varianzhomogenität gegeben
1558469386790:ggplot(data_wide, aes( y = T0_phq9, x = data_wide$trans)) +
1558469386793:geom_boxplot() +
1558469386795:xlab("Überweisungsquelle") +
1558469386797:ylab("Summenscore PHQ-9 Zeitpunkt T0") +
1558469386798:scale_y_continuous(limits = c(0,30))+
1558469386800:mytheme# varianzen fast gleich, verteilung aber nicht (PR rechtsschief)
1558469387065:t.test(data_wide$T0_phq9 ~ data_wide$trans) # n.s.
1558469387071:# summary(aov(data_wide$T0_phq9 ~ data_wide$trans))¨
1558469387076:wilcox.test(data_wide$T0_phq9 ~ data_wide$trans)
1558469838792:table(dat$trans) # sehr ungleiche gruppengrössen
1558469838797:# h1b:schaue boxplots an
1558469838798:# hier ein beispiel für die resultate: http://rcompanion.org/handbook/I_06.html
1558469838799:p1 <- ggplot(dat, aes(y = dat$T0_phq9 , x = trans)) +
1558469838801:geom_boxplot() +
1558469838803:scale_y_continuous(limits = c(0,20))# dont look very nice :(
1558469838810:# ggplot(dat, aes(x = dat$T0_phq9 )) + geom_histogram()
1558469838812:p2 <- ggplot(dat, aes(y = dat$T1_phq9 , x = trans)) +
1558469838813:geom_boxplot() +
1558469838815:scale_y_continuous(limits = c(0,20))# looks good
1558469838821:plot_grid(p1, p2, ncol = 2)
1558469838910:# h1b:versuche das ganze zu plotten
1558469838911:pat <- ("T0_phq9|T1_phq9")
1558469838913:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1558469838916:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1558469838918:dat2 <- group_by(dat1, Patientencode) %>%
1558469838919:summarise(occur = n()) %>%
1558469838921:filter(occur == 2) %>%
1558469838922:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1558469838932:# siehe diese seite: https://rpsychologist.com/r-guide-longitudinal-lme-lmer
1558469838935:lm1 <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore"),REML = TRUE) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558469839756:# drei ebenen modell => macht sinn das ganze so zu testen => ähnliche werte zum lme4 package, aber das obige modell konvergiert nicht => gründe?
1558469839757:library(nlme)
1558469839759:lm1 <- lme(value ~ variable * trans * condit + sex + educ + age, random = list( condit  = ~ variable,
1558469839761:Patientencode = ~ variable), data=dat2) # das scheint zu funktionieren => gründe, aber seh ähnliche werte zu oben!!
1558469839857:summary(lm1) # erzeugt NANs => gründe?
1558469839878:isSingular(lm1) # False = gut
1558469839882:###############
1558469839884:# test with glm: weiterführende analysen und infos
1558469839885:################
1558469839888:# schaue nochmals nach wie man den random effect interpretiert!!
1558469839890:#https://bbolker.github.io/mixedmodels-misc/glmmFAQ.html#count-data
1558469839893:#https://bbolker.github.io/mixedmodels-misc/ecostats_chap.html
1558469839896:# teste ob daten gruppiert
1558469839897:# literatur dazu: LeBreton and Senter (2008) have suggested that an ICC(1)=.05 represents a small to medium effect (p. 838)
1558469839899:av <- aov(value ~ Patientencode, dat2)
1558469839903:library(multilevel)
1558469839904:ICC1(av) # 12% ja gibt gruppenvariablität/subjektvariablität
1558469839919:#verständnis interpretation:
1558469839920:# random effects intercept: heisst zwischen-Gruppen/subjects Varianz (hier 7.995)
1558469839922:# random effects residual: heisst inner-Gruppen/subjects Varianz (hier 9.858)
1558469839923:#inhaltliche interpretation:
1558469839925:# fixed effects intercept: mittlere phc_9 summenscore beträgt 11.42 (beta0)
1558469839926:# Der phq verkleinert sich bei t1 im Mittel um -5 Summenpunkte (beta1)
1558469839928:# Die Varianz der mittleren Abweichung einer Person von dem mittleren phq aller Personen beträgt 7.995 Summenpunkte
1558469839929:# Die Varianz der Residuen beträgt 9.858 Summenpunkte
1558469839934:####################################
1558469839936:# überprüfe nochmals die modellgüte
1558469839937:##################################
1558469839940:#1. Zufällige Abweichungen sind normalverteilt mit EW 0 und Varianz
1558469839942:pl <- lme4::ranef(lm1)$`condit:Patientencode`
1558469839944:boxplot(pl[[1]] ~ rownames(pl), xlab = "Patient", ylab = "Zufällige Abweichungen") # nicht sehr normalverteilt
1558469839949:abline(h = c(-2,2), col = "red")
1558469839951:abline(h = 0, col = "black")
1558469839955:#2. Fehler sind i.i.d. normalverteilt mit EW 0 und Varianz (residuen)
1558469839956:fm <- lm(value ~ Patientencode, dat2)
1558469839961:boxplot(residuals(lm1) ~ dat2$Patientencode, xlab = "Patient", ylab = "Residuen") # boxplots sind nicht um 0 verzeilt => wieso?? mit fm ja
1558469839978:abline(h = c(-2,2), col = "red")
1558469839979:abline(h = 0, col = "black")
1558469839984:###################
1558469839986:# beste alternativ byesian statistics
1558469839987:###################
1558469839990:# hier literatur dazu http://sumsar.net/blog/2014/01/bayesian-first-aid/
1558469839992:# https://vuorre.netlify.com/post/2017/03/21/bayes-factors-with-brms/
1558469839993:# https://sahirbhatnagar.com/bayesian-stan
1558469839994:# am besten buch: Doing Bayesian Data Analysis
1558469839997:brms::brm(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2)
1558469923681:########
1558469923686:# ergebnisse visualisieren
1558469923689:########
1558469923701:# plot1
1558469923706:pl <- dat2 %>%
1558469923710:group_by(variable, trans, condit) %>%
1558469923713:summarise(mean_t = mean(value))
1558469923726:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1558469923728:geom_point(size= 4) +
1558469923732:geom_line(size = 1.5) +
1558469923735:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1558469923741:ylab("Mittelwerte der Summenscore") +
1558469923745:xlab("Zeitpunkt") +
1558469923746:guides(linetype = guide_legend(title = "Überweisungsquelle"), shape = F) +
1558469923748:facet_wrap(~condit) +
1558469923751:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1558469923754:mytheme
1558469924252:# plot2
1558469924254:# sample
1558469924255:pl <- dat2 %>%
1558469924257:mutate(xlab = paste(trans, variable, sep = "_"))
1558469924260:# marginal <- lsmeans::lsmeans(av2, ~ variable) # check that out again
1558469924262:ggplot(pl, aes(x = xlab, y = value)) +
1558469924264:stat_summary(fun.y = mean, geom = "point", shape = 15, size = 4) +
1558469924265:stat_summary(fun.data = "mean_cl_boot", geom = "errorbar", size = .7, width = .2) + # lese standardfehler nach => stimmt was nicht
1558469924267:scale_y_continuous(limits = c(0,20)) +
1558469924268:ylab("Mittelwerte und Standardfehler der Summenscores") +
1558469924270:xlab("Überweisungsquellen und Zeitpunkt")
1558469924460:#plo3 age: sieht aus als ob junge personen mehr von dem treatment profitiert haben als andere
1558469924463:ggplot(pl, aes(x = age, y = value, color = variable, group = variable)) +
1558469924464:geom_point() +
1558469924465:#geom_line(aes(group = variable))+ # somehow not working
1558469924467:geom_smooth(method = 'lm', se = F)
1558469924690:stat_summary(fun.y = mean, geom = "point", shape = 15, size = 4)
1558470613079:# subsample
1558470613081:pat <- c("ld|ho|zw|vh")
1558470613084:dat <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value), ]
1558470613088:# überprüfe ob auch alle datenpunkte drin sind
1558470613089:t <- dat %>%
1558470613092:group_by(Patientencode, trans) %>%
1558470613093:summarise(occur = n()) %>%
1558470613095:mutate(occur = ifelse(occur == 4, T, F))
1558470613101:sum(t$occur) # 53 personen
1558470613104:table(t$trans)
1558470613107:# schaue die mittelwerte an
1558470613109:aggregate(value ~ variable + trans, dat, function(x) c(mean = mean(x), median = median(x), sd = sd(x), min = min(x), max = max(x))) # wieso keine t-tests möglich?
1558470613123:# ld: n.s.
1558470613125:boxplot(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans)
1558470613131:wilcox.test(dat[dat$variable == "ld",]$value ~ dat[dat$variable == "ld",]$trans)
1558470613137:# ho: n.s.
1558470613139:boxplot(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",]$trans)
1558470613144:wilcox.test(dat[dat$variable == "ho",]$value ~ dat[dat$variable == "ho",]$trans)
1558470613150:# zw: n.s.
1558470613152:boxplot(dat[dat$variable == "zw",]$value ~ dat[dat$variable == "zw",]$trans)
1558470613157:wilcox.test(dat[dat$variable == "zw",]$value ~ dat[dat$variable == "zw",]$trans)
1558470613163:# vh: n.s.
1558470613165:boxplot(dat[dat$variable == "vh",]$value ~ dat[dat$variable == "vh",]$trans)
1558470613170:wilcox.test(dat[dat$variable == "vh",]$value ~ dat[dat$variable == "vh",]$trans)
1558471078188:aggregate(value ~ variable, dat, function(x) c(mean = mean(x), median = median(x), sd = sd(x), min = min(x), max = max(x)))
1558471312821:dat <- data_wide %>%
1558471312823:group_by(trans, age_group) %>%
1558471312824:dplyr::summarise(tot = n()) %>%
1558471312826:mutate(pct = tot / sum(tot)) %>%
1558471312827:ungroup() %>%
1558471312829:mutate(age_group = ifelse(is.na(.$age_group), "Unbekannt", age_group)) %>%
1558471312830:complete(age_group, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1558471334722:ggplot(dat, aes(x = parse_factor(age_group, levels = c("<29 Jahre", "30 bis 39 Jahre", "40 bis 49 Jahre", "50 bis 59 Jahre", ">60 Jahre", "Unbekannt")), y = pct, fill = trans)) +
1558471334724:geom_bar(stat = "identity", position = position_dodge(), width = .6) +
1558471334725:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1558471334726:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1558471334728:guides(fill = guide_legend("Überweisungsquelle")) +
1558471334729:xlab("Alter") +
1558471334730:ylab("Anzahl Personen") +
1558471334732:mytheme
1558471340440:View(dat)
1558471367088:Hmisc::describe(data_wide$age_group)
1558472135949:#daten aufbereiten
1558472135950:dat <- data_wide %>%
1558472135952:# mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1558472135953:#        moder_ho = (T0_phq9 - T1_phq9) * ho,
1558472135955:#        moder_zw = (T0_phq9 - T1_phq9) * zw,
1558472135956:#        moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1558472135958:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1558472135959:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1558472135961:drop_na(value)
1558472138979:# check again
1558472138981:dat2 <- group_by(dat, Patientencode) %>%
1558472138982:summarise(occur = n()) %>%
1558472138984:filter(occur == 2) %>%
1558472138985:left_join(., dat, by = "Patientencode") # 46 personen
1558472172451:# ld
1558472172453:lm1 <- lme(value ~ variable * trans * ld, random = list(trans  = ~ variable,
1558472172454:Patientencode = ~ variable), data=dat2)
1558472176584:summary(lm1)
1558472187805:summary(lm1)
1558472348658:# ld
1558472348659:av <- aov(value ~ Patientencode * trans * ld, dat2)
1558472353205:ICC1(av)
1558472379583:summary(av)
1558472398610:summary.lm(av)
1558472753625:lm1 <- lme(value ~ variable * trans * ld * condit, random = list(trans  = ~ variable,
1558472753626:Patientencode = ~ variable), data=dat2)
1558472755209:summary(lm1)
1558473061765:# ho: scheint einen einfluss zu haben => probiere es zu visualisieren
1558473061767:lm2 <- lme(value ~ variable * trans * condit * ho, random = list(trans  = ~ variable,
1558473061769:Patientencode = ~ variable), data=dat2)
1558473064339:summary(lm2)
1558473116929:# plotte ergbenis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558473116930:# plot
1558473116932:ggplot(data=dat, aes(y=ho, x= variable, col=as.factor(trans)))+
1558473116935:geom_boxplot()
1558475419318:fisher.test(data_wide$trans, data_wide$age_group) # n.s
1558475445659:dat <- data_wide %>%
1558475445661:group_by(trans, age_group) %>%
1558475445662:dplyr::summarise(tot = n()) %>%
1558475445663:mutate(pct = tot / sum(tot)) %>%
1558475445665:ungroup() %>%
1558475445666:mutate(age_group = ifelse(is.na(.$age_group), "Unbekannt", age_group)) %>%
1558475445668:complete(age_group, trans, fill = list(tot = 0, pct = 0)) # complete cases with value 0
1558475445751:ggplot(dat, aes(x = parse_factor(age_group, levels = c("<29 Jahre", "30 bis 39 Jahre", "40 bis 49 Jahre", "50 bis 59 Jahre", ">60 Jahre", "Unbekannt")), y = pct, fill = trans)) +
1558475445752:geom_bar(stat = "identity", position = position_dodge(), width = .6) +
1558475445754:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1558475445755:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1558475445757:guides(fill = guide_legend("Überweisungsquelle")) +
1558475445759:xlab("Alter") +
1558475445760:ylab("Anzahl Personen") +
1558475445762:mytheme
1558475446594:ggsave("plots/age_trans_190513.pdf",
1558475446596:height = 12,
1558475446597:width = 18,
1558475446599:device = cairo_pdf)
1558475631034:ggplot(dat, aes(x = parse_factor(age_group, levels = c("<29 Jahre", "30 bis 39 Jahre", "40 bis 49 Jahre", "50 bis 59 Jahre", ">60 Jahre", "Unbekannt")), y = pct, fill = trans)) +
1558475631036:geom_bar(stat = "identity", position = position_dodge(), width = .6) +
1558475631037:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1558475631039:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1558475631040:scale_y_continuous(labels = scales::percent()) +
1558475631042:guides(fill = guide_legend("Überweisungsquelle")) +
1558475631043:xlab("Alter") +
1558475631045:ylab("Anteil Personen") +
1558475631047:mytheme
1558475741872:ggplot(dat, aes(x = parse_factor(age_group, levels = c("<29 Jahre", "30 bis 39 Jahre", "40 bis 49 Jahre", "50 bis 59 Jahre", ">60 Jahre", "Unbekannt")), y = pct, fill = trans)) +
1558475741875:geom_bar(stat = "identity", position = position_dodge(), width = .6) +
1558475741876:scale_fill_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1558475741878:scale_x_discrete(labels = c("F" = "Frauen", "M" = "Männer")) +
1558475741879:scale_y_continuous(labels = scales::percent) +
1558475741880:guides(fill = guide_legend("Überweisungsquelle")) +
1558475741882:xlab("Alter") +
1558475741883:ylab("Anteil Personen") +
1558475741885:mytheme
1558509202433:pat <- ("T0_phq9|T1_phq9")
1558509202437:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1558509202445:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1558509202449:dat2 <- group_by(dat1, Patientencode) %>%
1558509202452:summarise(occur = n()) %>%
1558509202453:filter(occur == 2) %>%
1558509202455:left_join(., dat1, by = "Patientencode")
1558509212068:lm1 <- lme(value ~ variable * trans * condit + sex + educ + age, random = list( condit  = ~ variable,
1558509212070:Patientencode = ~ variable), data=dat2)
1558509216009:isSingular(lm1) # False = gut
1558509227071:isSingular(lm1) # False = gut
1558509228788:summary(lm1) # erzeugt NANs => gründe?
1558509613813:lm1 <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore"),REML = TRUE) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558512800426:install.packages("sjstats")
1558512808557:install.packages("sjstats")
1558512815631:install.packages("sjstats")
1558512836857:install.packages("sjstats")
1558512875985:install.packages("sjstats")
1558513144364:library(sjstats)
1558513216718:deff(n = 24, icc = 0.2)
1558513222454:deff(n = 17, icc = 0.2)
1558513227415:deff(n = 17, icc = 0.12)
1558513249933:# n = grupen von cluster, icc annahme mind .05
1558513249935:deff(n = 36, icc = 0.12)
1558513308530:#berechnung der sample size
1558513308532:smpsize_lmm(eff.size = .3, k = 36)
1558513317496:install.packages("pwr")
1558513325119:library(pwr)
1558513327715:#berechnung der sample size
1558513327724:smpsize_lmm(eff.size = .3, k = 36)
1558513406236:#berechnung der sample size: nahe zu unmöglich diese sample size zu generieren
1558513406243:smpsize_lmm(eff.size = .2, df.n = 17, k = 20, power = .9)
1558513443069:#berechnung der sample size: nahe zu unmöglich diese sample size zu generieren
1558513443071:smpsize_lmm(eff.size = .2, df.n = 17, k = 2, power = .9)
1558513451948:#berechnung der sample size: nahe zu unmöglich diese sample size zu generieren
1558513451951:smpsize_lmm(eff.size = .2, df.n = 17, k = 20, power = .9)
1558513488347:# load themes,data, packages-----------
1558513488349:source("kira_masterarbeit_edit_190418.R")
1558513489145:source("mytheme.R")
1558513496969:pat <- ("T0_phq9|T1_phq9")
1558513496972:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1558513496976:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1558513496979:dat2 <- group_by(dat1, Patientencode) %>%
1558513496982:summarise(occur = n()) %>%
1558513496984:filter(occur == 2) %>%
1558513496986:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1558513516960:lm1 <- lme(value ~ variable * trans * condit + sex + educ + age, random = list( condit  = ~ variable,
1558513516969:Patientencode = ~ variable), data=dat2) # das scheint zu funktionieren => gründe, aber seh ähnliche werte zu oben!!
1558513518955:library(nlme)
1558513519151:lm1 <- lme(value ~ variable * trans * condit + sex + educ + age, random = list( condit  = ~ variable,
1558513519157:Patientencode = ~ variable), data=dat2) # das scheint zu funktionieren => gründe, aber seh ähnliche werte zu oben!!
1558513523934:# ist das model konvergiert?
1558513523936:converge_ok(lm1)
1558513540065:is_singular(lm1)
1558513563126:lm1 <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore"), REML = TRUE) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558513568513:library(lme4)
1558513570830:lm1 <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore"), REML = TRUE) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558513574108:# ist das model konvergiert?
1558513574110:converge_ok(lm1) # funktioniert nicht mit lme package nur mit lme4
1558513576331:is_singular(lm1)
1558513662510:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore"), REML = TRUE) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558513668734:# ist das model konvergiert?
1558513668736:converge_ok(lm) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558513672563:is_singular(lm) #auch hier False
1558513731252:# gebe p-werte aus
1558513731254:p_value(lm, p.kr = TRUE)
1558513745110:# gebe p-werte aus
1558513745112:p_value(lm1, p.kr = TRUE)
1558513753933:lm1 <- lme(value ~ variable * trans * condit + sex + educ + age, random = list( condit  = ~ variable,
1558513753935:Patientencode = ~ variable), data=dat2) # das scheint zu funktionieren => gründe, aber seh ähnliche werte zu oben!!
1558513756548:# gebe p-werte aus
1558513756551:p_value(lm1, p.kr = TRUE)
1558513812032:# gebe p-werte aus
1558513812034:pv <- p_value(lm, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558513812339:summary(pv)
1558513829539:# gebe p-werte aus
1558513829543:pv <- p_value(lm, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558513831828:summary(pv)
1558513843896:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore"), REML = TRUE) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558513845317:# ist das model konvergiert?
1558513845318:converge_ok(lm) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558513846938:# gebe p-werte aus
1558513846973:pv <- p_value(lm, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558513848735:is_singular(lm) #auch hier False
1558513850516:summary(pv)
1558513886639:# nehme residual varianz
1558513886647:get_re_var(lm, "sigma_2")
1558513900142:# alle random effekte
1558513900147:re_var(lm)
1558514496627:re_var(m, adjusted = TRUE) #
1558514500801:re_var(lm, adjusted = TRUE) #
1558514702883:summary(lm)
1558514735528:# alle random effekte
1558514735531:re_var(lm)
1558514836614:# r-quadrat
1558514836619:r2(lm)
1558515124298:# berechne icc, von einem bestehenden modell => ist anders als ICC1!!
1558515124300:icc(lm)
1558515196610:# berechne icc, von einem bestehenden modell => ist anders als ICC1!!
1558515196612:icc(lm, adjusted = T)
1558515371824:ICC1(lm) # 12% ja gibt gruppenvariablität/subjektvariablität
1558515373857:library(multilevel)
1558515374174:ICC1(lm) # 12% ja gibt gruppenvariablität/subjektvariablität
1558515388059:# teste ob daten gruppiert
1558515388060:# literatur dazu: LeBreton and Senter (2008) have suggested that an ICC(1)=.05 represents a small to medium effect (p. 838)
1558515388062:av <- aov(value ~ Patientencode, dat2)
1558515389280:ICC1(lm) # 12% ja gibt gruppenvariablität/subjektvariablität
1558515549440:?ICC1
1558515744526:# teste ob daten gruppiert
1558515744528:# literatur dazu: LeBreton and Senter (2008) have suggested that an ICC(1)=.05 represents a small to medium effect (p. 838)
1558515744533:av <- aov(value ~ Patientencode, dat2) # nullmodell resp unconditionelles modell
1558515746179:ICC1(av) # 12% ja gibt gruppenvariablität/subjektvariablität
1558516048844:# gebe p-werte aus
1558516048846:pv <- p_value(lm, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558516049084:summary(pv) # scheint nicht zu funktioneiren
1558516320851:#daten aufbereiten
1558516320853:dat <- data_wide %>%
1558516320854:# mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1558516320856:#        moder_ho = (T0_phq9 - T1_phq9) * ho,
1558516320857:#        moder_zw = (T0_phq9 - T1_phq9) * zw,
1558516320859:#        moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1558516320860:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1558516320862:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1558516320863:drop_na(value)
1558516321760:# check again
1558516321761:dat2 <- group_by(dat, Patientencode) %>%
1558516321763:summarise(occur = n()) %>%
1558516321765:filter(occur == 2) %>%
1558516321766:left_join(., dat, by = "Patientencode") # 46 personen
1558516354852:# ld
1558516354854:av <- aov(value ~ Patientencode * trans, dat2)
1558516355486:library(multilevel)
1558516355791:ICC1(av)
1558516390131:# ld
1558516390133:av <- aov(value ~ Patientencode * trans, dat2) # keinen Unterschied zum obigen ICC, wieso??
1558516394822:summary(av)
1558516401872:summary.lm(av)
1558516431820:# ld
1558516431822:av <- aov(value ~ Patientencode + trans, dat2) # keinen Unterschied zum obigen ICC, wieso??
1558516433568:ICC1(av)
1558516440631:summary(av)
1558516445839:summary.lm(av)
1558516453836:View(dat2)
1558516490658:# ld
1558516490660:av <- aov(value ~ trans, dat2) # keinen Unterschied zum obigen ICC, wieso??
1558516493312:summary.lm(av)
1558516505368:ICC1(av)
1558516645568:lmer(value ~ variable * trans * ld +
1558516645570:(variable | trans:Patientencode) +
1558516645572:(variable | trans),
1558516645573:data=dat2)
1558516709175:lmer(value ~ variable * trans * ld +
1558516709176:(variable | trans:Patientencode) +
1558516709178:#(variable | trans),
1558516709180:data=dat2)
1558516711681:lmer(value ~ variable * trans * ld +
1558516711683:(variable | trans:Patientencode) +
1558516711685:#(variable | trans),
1558516711687:data=dat2)
1558516722855:lmer(value ~ variable * trans * ld +
1558516722857:(variable | trans:Patientencode), # +
1558516722859:#(variable | trans),
1558516722860:data=dat2)
1558516728723:lm1 <- lmer(value ~ variable * trans * ld +
1558516728724:(variable | trans:Patientencode), # +
1558516728726:#(variable | trans),
1558516728727:data=dat2)
1558516734445:# ist das model konvergiert?
1558516734446:converge_ok(lm1) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558516750157:lm1 <- lme4::lmer(value ~ variable * trans * ld +
1558516750159:(variable | trans:Patientencode), # +
1558516750161:#(variable | trans),
1558516750163:data=dat2)
1558516753797:# ist das model konvergiert?
1558516753799:converge_ok(lm1) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558516764610:str(lm1)
1558516776666:attribute(lm1)
1558516779436:attributes(lm1)
1558516810967:lm <- lme4::lmer(value ~ variable * trans * ld +
1558516810968:(variable | trans:Patientencode), # +
1558516810970:#(variable | trans),
1558516810971:data=dat2)
1558516817635:attributes(lm)
1558516869310:dat <- data_wide %>%
1558516869312:# mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1558516869314:#        moder_ho = (T0_phq9 - T1_phq9) * ho,
1558516869316:#        moder_zw = (T0_phq9 - T1_phq9) * zw,
1558516869318:#        moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1558516869319:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1558516869321:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1558516869324:drop_na(value)
1558516869333:# check again
1558516869334:dat2 <- group_by(dat, Patientencode) %>%
1558516869336:summarise(occur = n()) %>%
1558516869339:filter(occur == 2) %>%
1558516869342:left_join(., dat, by = "Patientencode")
1558516873072:lm <- lme4::lmer(value ~ variable * trans * ld +
1558516873076:(variable | trans:Patientencode), # +
1558516873078:#(variable | trans),
1558516873080:data=dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558516879609:lm1 <- lme4::lmer(value ~ variable * trans * ld +
1558516879611:(variable | trans:Patientencode), # +
1558516879614:#(variable | trans),
1558516879616:data=dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558516881885:# ist das model konvergiert?
1558516881886:converge_ok(lm1) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558516884717:is_singular(lm) #auch hier False
1558516889635:is_singular(lm1) #auch hier False
1558516894659:is_singular(lm2) #auch hier False
1558516900222:# gebe p-werte aus
1558516900224:pv <- p_value(lm1, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558516902923:summary(pv) # scheint nicht zu funktioneiren
1558516932671:# nehme residual varianz
1558516932673:get_re_var(lm, "sigma_2")
1558516936270:# alle random effekte
1558516936271:re_var(lm1)
1558517478451:re_var(lm, adjusted = TRUE) # weitere varianzkomponenten für das ganze modell angepasst?=> interpretationen kann siehe unten
1558517493863:sumamy(lm1)
1558517501055:summary(lm1)
1558517552636:# zur überprüfung mit nlme
1558517552638:lm1 <- lme(value ~ variable * trans * ld, random = list(trans  = ~ variable,
1558517552640:Patientencode = ~ variable), data=dat2)
1558517558849:summary(lm1)
1558517602884:re_var(lm1, adjusted = TRUE) # weitere varianzkomponenten für das ganze modell angepasst?=> interpretationen kann siehe unten
1558517609182:# modell mit ld
1558517609184:lm1 <- lme4::lmer(value ~ variable * trans * ld +
1558517609188:(variable | trans:Patientencode), # +
1558517609189:#(variable | trans),
1558517609192:data=dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558517613571:re_var(lm1, adjusted = TRUE) # weitere varianzkomponenten für das ganze modell angepasst?=> interpretationen kann siehe unten
1558517626147:# r-quadrat (gut oder schlecht?)
1558517626149:r2(lm1) # interpretation https://rdrr.io/cran/MuMIn/man/r.squaredGLMM.html
1558517635875:# berechne icc, von einem bestehenden modell => ist anders als ICC1!!
1558517635876:icc(lm1, adjusted = T) # conditionelles modell!
1558517735073:lm1 <- lme4::lmer(value ~ variable * trans * ho +
1558517735075:(variable | trans:Patientencode), # +
1558517735076:#(variable | trans),
1558517735078:data=dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558517739438:lm2 <- lme4::lmer(value ~ variable * trans * ho +
1558517739439:(variable | trans:Patientencode), # +
1558517739441:#(variable | trans),
1558517739442:data=dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558517744746:# ist das model konvergiert?
1558517744747:converge_ok(lm2) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558517750093:is_singular(lm2) #auch hier False
1558517756579:# gebe p-werte aus
1558517756582:pv <- p_value(lm2, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558517758459:summary(pv) # scheint nicht zu funktioneiren
1558517776946:# nehme residual varianz
1558517776948:get_re_var(lm2, "sigma_2")
1558517781038:# alle random effekte
1558517781040:re_var(lm2) # negative covariancen und correlation http://www.bristol.ac.uk/cmm/learning/videos/random-slopes.html#covar
1558517790453:# r-quadrat (gut oder schlecht?)
1558517790454:r2(lm2) # interpretation https://rdrr.io/cran/MuMIn/man/r.squaredGLMM.html
1558517797606:# berechne icc, von einem bestehenden modell => ist anders als ICC1!!
1558517797608:icc(lm2, adjusted = T) # conditionelles modell!
1558517806833:summary(lm2)
1558517836640:# ho: scheint einen einfluss zu haben => probiere es zu visualisieren
1558517836642:lm2 <- lme(value ~ variable * trans * condit * ho, random = list(trans  = ~ variable,
1558517836643:Patientencode = ~ variable), data=dat2)
1558517837259:summary(lm2)
1558517849046:# ho: scheint einen einfluss zu haben => probiere es zu visualisieren
1558517849048:lm2 <- lme(value ~ variable * trans * ho, random = list(trans  = ~ variable,
1558517849050:Patientencode = ~ variable), data=dat2)
1558517849337:summary(lm2)
1558521462066:# modell mit zw
1558521462067:lm3 <- lme4::lmer(value ~ variable * trans * zw +
1558521462069:(variable | trans:Patientencode), # +
1558521462070:#(variable | trans),
1558521462072:data=dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558521468661:# ist das model konvergiert?
1558521468663:converge_ok(lm3) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558521470085:is_singular(lm3) #auch hier False
1558521474461:# gebe p-werte aus
1558521474465:pv <- p_value(lm3, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558521475879:summary(pv) # scheint nicht zu funktioneiren
1558521486043:# alle random effekte
1558521486045:re_var(lm3) # negative covariancen und correlation http://www.bristol.ac.uk/cmm/learning/videos/random-slopes.html#covar
1558521495008:re_var(lm3, adjusted = TRUE) # weitere varianzkomponenten für das ganze modell angepasst?=> interpretationen kann siehe unten
1558521500604:summary(lm3)
1558521529157:summary(lm1)
1558521536897:re_var(lm1, adjusted = TRUE) # weitere varianzkomponenten für das ganze modell angepasst?=> interpretationen kann siehe unten
1558521550585:# gebe p-werte ausp_value(lm1, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558521558566:p_value(lm1, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558521569446:p_value(lm, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558521577167:p_value(lm2, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558521843917:lm4 <- lme4::lmer(value ~ variable * trans * vh +
1558521843919:(variable | trans:Patientencode), # +
1558521843920:#(variable | trans),
1558521843923:data=dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558521850722:# ist das model konvergiert?
1558521850724:converge_ok(lm3) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558521851688:is_singular(lm3) #auch hier False
1558521859258:# ist das model konvergiert?
1558521859259:converge_ok(lm4) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558521859736:is_singular(lm4) #auch hier False
1558521863718:# gebe p-werte aus
1558521863723:pv <- p_value(lm4, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558521864464:summary(pv) # scheint nicht zu funktioneiren
1558521994879:# berechne icc, von einem bestehenden modell => ist anders als ICC1!!
1558521994880:icc(lm4, adjusted = T) # conditionelles modell!
1558521996869:# r-quadrat (gut oder schlecht?)
1558521996870:r2(lm4) # interpretation https://rdrr.io/cran/MuMIn/man/r.squaredGLMM.html
1558522008556:# zeige modell
1558522008559:summary(lm3)
1558522024778:# zeige modell
1558522024780:summary(lm2)
1558522031902:lm2 <- lme4::lmer(value ~ variable * trans * ho +
1558522031904:(variable | trans:Patientencode), # +
1558522031905:#(variable | trans),
1558522031907:data=dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558522037153:summary(lm2)
1558522273931:re_var(lm2, adjusted = TRUE)
1558522278859:re_var(lm2)
1558522289940:p_value(lm2, p.kr = TRUE)
1558522329296:ggplot(data=dat2, aes(y=ho, x= variable, col=as.factor(trans)))+
1558522329298:geom_boxplot()
1558522368016:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558522368018:# plot
1558522368019:ggplot(data=dat2, aes(y=value, x= ho, col=as.factor(trans)))+
1558522368021:geom_boxplot()
1558522389089:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558522389090:# plot
1558522389092:ggplot(data=dat2, aes(y=value, x= ho, col=as.factor(variable)))+
1558522389093:geom_boxplot()
1558522412972:ggplot(data=dat2, aes(y=value, x= ho, col=as.factor(variable)))+
1558522412973:geom_point(size=1, alpha=.7, position = "jitter") +
1558522412975:geom_smooth(formula = y ~ 0 + x, se=F, size=1.5, linetype=1, alpha=.7)+
1558522412976:theme_minimal()
1558522454367:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558522454368:# plot
1558522454370:ggplot(data=dat2, aes(y=value, x= ho, col=as.factor(variable)))+
1558522454371:geom_point(size=1, alpha=.7, position = "jitter") +
1558522454373:geom_smooth(formula = y ~ 0 + x, se=F, size=1.5, linetype=1, alpha=.7)+
1558522454374:theme_minimal() +
1558522454376:scale_y_continuous(limits = c(0,30)) +
1558522454377:scale_x_continuous(limits = c(0,5)) +
1558522454378:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1558522475739:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558522475741:# plot
1558522475742:ggplot(data=dat2, aes(y=value, x= ho, col=as.factor(variable)))+
1558522475744:geom_point(size=1, alpha=.7, position = "jitter") +
1558522475745:geom_smooth(formula = y ~ 0 + x, se=F, size=1.5, linetype=1, alpha=.7)+
1558522475746:theme_minimal() +
1558522475748:scale_y_continuous(limits = c(0,25)) +
1558522475749:scale_x_continuous(limits = c(1.5,5)) +
1558522475751:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1558522486908:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558522486909:# plot
1558522486911:ggplot(data=dat2, aes(y=value, x= ho, col=as.factor(variable)))+
1558522486912:geom_point(size=1, alpha=.7, position = "jitter") +
1558522486913:geom_smooth(formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558522486915:theme_minimal() +
1558522486916:scale_y_continuous(limits = c(0,25)) +
1558522486917:scale_x_continuous(limits = c(1.5,5)) +
1558522486919:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1558522493755:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558522493757:# plot
1558522493758:ggplot(data=dat2, aes(y=value, x= ho, col=as.factor(variable)))+
1558522493760:geom_point(size=1, alpha=.7, position = "jitter") +
1558522493761:geom_smooth(formula = lm2, se=F, size=1.5, linetype=1, alpha=.7)+
1558522493762:theme_minimal() +
1558522493764:scale_y_continuous(limits = c(0,25)) +
1558522493765:scale_x_continuous(limits = c(1.5,5)) +
1558522493767:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1558522530190:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558522530191:# plot
1558522530192:ggplot(data=dat2, aes(y=value, x= ho, col=as.factor(variable)))+
1558522530193:geom_point(size=1, alpha=.7, position = "jitter") +
1558522530195:geom_smooth() #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558522542754:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558522542755:# plot
1558522542756:ggplot(data=dat2, aes(y=value, x= ho, col=as.factor(variable)))+
1558522542758:geom_point(size=1, alpha=.7, position = "jitter") +
1558522542759:geom_smooth(method = lm) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558522552060:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558522552061:# plot
1558522552063:ggplot(data=dat2, aes(y=value, x= ho, col=as.factor(variable)))+
1558522552064:geom_point(size=1, alpha=.7, position = "jitter") +
1558522552066:geom_smooth(method = glm) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558522563784:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558522563787:# plot
1558522563788:ggplot(data=dat2, aes(y=value, x= ho, col=as.factor(variable)))+
1558522563794:geom_point(size=1, alpha=.7, position = "jitter") +
1558522563797:geom_smooth(method = lm2) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558522575557:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558522575559:# plot
1558522575560:ggplot(data=dat2, aes(y=value, x= ho, col=as.factor(variable)))+
1558522575562:geom_point(size=1, alpha=.7, position = "jitter") +
1558522575563:geom_smooth(method = glm, se = F) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558522839964:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558522839966:# plot
1558522839969:ggplot(data=dat2, aes(y=value, x= variable)))+
1558522839971:geom_point(size=1, alpha=.7, position = "jitter") +
1558522839973:geom_smooth(method = glm, se = F) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558522851804:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558522851805:# plot
1558522851807:ggplot(data=dat2, aes(y=value, x= variable))+
1558522851808:geom_point(size=1, alpha=.7, position = "jitter") +
1558522851809:geom_smooth(method = glm, se = F) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558522884083:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558522884085:# plot
1558522884086:ggplot(data=dat2, aes(y=ho, x= variable))+
1558522884091:geom_point(size=1, alpha=.7, position = "jitter") +
1558522884093:geom_smooth(method = glm, se = F) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558522933790:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558522933791:# plot
1558522933793:ggplot(data=dat2, aes(y=value, x= variable))+
1558522933794:geom_point(size=1, alpha=.7, position = "jitter") +
1558522933796:geom_smooth(method = glm, se = F) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558522945386:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558522945387:# plot
1558522945388:ggplot(data=dat2, aes(y=value, x= variable))+
1558522945390:geom_point(size=1, alpha=.7, position = "jitter") +
1558522945391:geom_smooth(method = lm, se = F) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558522978939:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558522978941:# plot
1558522978942:ggplot(data=dat2, aes(y=value, x= variable, col = trans))+
1558522978944:geom_point(size=1, alpha=.7, position = "jitter") +
1558522978945:geom_smooth(method = lm, se = F) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558523000814:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558523000815:# plot
1558523000816:ggplot(data=dat2, aes(y=value, x= variable, col = trans))+
1558523000818:geom_point(size=1, alpha=.7, position = "jitter") +
1558523000819:geom_smooth(method = glm, se = F) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558523010531:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558523010533:# plot
1558523010534:ggplot(data=dat2, aes(y=value, x= variable, col = trans))+
1558523010536:geom_point(size=1, alpha=.7, position = "jitter") +
1558523010537:geom_smooth(method = glm, se = F)
1558523024635:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558523024636:# plot
1558523024638:ggplot(data=dat2, aes(y=value, x= variable, col = trans))+
1558523024639:geom_point(size=1, alpha=.7, position = "jitter") +
1558523024641:geom_smooth(formula = y ~x, se = F)
1558523052956:# plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558523052958:# plot
1558523052959:ggplot(data=dat2, aes(y=value, x= variable, col = trans))+
1558523052960:geom_point(size=1, alpha=.7, position = "jitter") +
1558523052962:geom_smooth(formula = y ~x + (1|Patientencode), se = F)
1558523177712:ggplot(dat2, aes(x=value, y=ho, colour=variable)) +
1558523177713:geom_point(size=3) +
1558523177714:geom_line(aes(y=predict(lm2), group=Subject, size="Subjects"))
1558523189414:ggplot(dat2, aes(x=value, y=ho, colour=variable)) +
1558523189416:geom_point(size=3) +
1558523189417:geom_line(aes(y=predict(lm2), group=Patientencode, size="Subjects"))
1558523211917:ggplot(dat2, aes(x=value, y=condit, colour=variable)) +
1558523211919:geom_point(size=3) +
1558523211920:geom_line(aes(y=predict(lm2), group=Patientencode, size="Subjects"))
1558523230928:ggplot(dat2, aes(x=value, y=condit, colour=variable)) +
1558523230930:geom_point(size=3) +
1558523230931:geom_line(aes(y=predict(lm2), group=Patientencode))
1558523252862:ggplot(dat2, aes(x=condit, y=value, colour=variable)) +
1558523252864:geom_point(size=3) +
1558523252865:geom_line(aes(y=predict(lm2), group=Patientencode))
1558523267816:ggplot(dat2, aes(x=condit, y=value, colour=variable)) +
1558523267818:geom_point(size=3) +
1558523267819:geom_line(aes(y=predict(lm2), group=Patientencode, size = "Patienten"))
1558523280798:ggplot(dat2, aes(x=condit, y=value, colour=variable)) +
1558523280800:geom_point(size=3) +
1558523280802:geom_line(aes(y=predict(lm2), group=Patientencode, size = "Patientencode"))
1558523309903:geom_line(aes(y=predict(lm2))#, group=Patientencode, size = "Patientencode"))
1558523321133:)
1558523324427:geom_line(aes(y=predict(lm2))#, group=Patientencode, size = "Patientencode")))
1558523330688:ggplot(dat2, aes(x=condit, y=value, colour=variable)) +
1558523330690:geom_point(size=3) +
1558523330692:geom_line(aes(y=predict(lm2)))#, group=Patientencode, size = "Patientencode"))
1558523349841:ggplot(dat2, aes(x=variable, y=value, colour=Patientencode)) +
1558523349843:geom_point(size=3) +
1558523349844:geom_line(aes(y=predict(lm2)))#, group=Patientencode, size = "Patientencode"))
1558523365178:ggplot(dat2, aes(x=variable, y=value, colour=Patientencode)) +
1558523365180:geom_point(size=3) +
1558523365181:geom_line(aes(y=predict(lm2), group=Patientencode, size = "Patientencode"))
1558523397634:ggplot(dat2, aes(x=variable, y=value, colour=Patientencode)) +
1558523397636:geom_point(size=1) +
1558523397637:geom_line(aes(y=predict(lm2), group=Patientencode, size = "Patientencode"))
1558523412219:ggplot(dat2, aes(x=variable, y=value, colour=Patientencode)) +
1558523412221:geom_point(size=2) +
1558523412223:geom_line(aes(y=predict(lm2), group=Patientencode, size = "Patientencode"), size = 1)
1558523554944:ggplot(dat2, aes(x=variable, y=value, colour=Patientencode)) +
1558523554945:geom_point(size=2) +
1558523554947:geom_line(aes(y=predict(lm2), group=Patientencode, size = "Patientencode"), size = 1)
1558523578697:ggplot(dat2, aes(x=variable, y=value, colour=Patientencode)) +
1558523578699:geom_point(size=2) +
1558523578700:geom_poit(dat2, aes(y = ho))
1558523583586:ggplot(dat2, aes(x=variable, y=value, colour=Patientencode)) +
1558523583588:geom_point(size=2) +
1558523583589:geom_point(dat2, aes(y = ho))
1558523597766:ggplot(dat2, aes(x=variable, y=value, colour=Patientencode)) +
1558523597768:geom_point(size=2) +
1558523597769:geom_point(dat2, aes(y = ho, x = variable))
1558523606274:ggplot(dat2, aes(x=variable, y=value, colour=Patientencode)) +
1558523606276:geom_point(size=2) +
1558523606277:geom_point(aes(y = ho, x = variable))
1558523625523:ggplot(dat2, aes(x=variable, y=value)) +
1558523625525:geom_point(size=2) +
1558523625529:geom_point(aes(y = ho, x = variable))
1558523751793:# modelfit
1558523751796:dat2$fit <- predict(lm2)
1558524044301:ggplot(dat2,aes(ho, value, group=interaction(variable, trans), col=variable, shape=trans )) +
1558524044302:# facet_grid(~N) +
1558524044304:geom_line(aes(y=fit, lty=trans), size=0.8) +
1558524044305:geom_point(alpha = 0.3)
1558524073663:ggplot(dat2,aes(ho, value, group=interaction(variable, trans), col=variable, shape=trans )) +
1558524073666:# facet_grid(~N) +
1558524073668:geom_line(aes(y=fit, lty=variable), size=0.8) +
1558524073670:geom_point(alpha = 0.3)
1558524119544:ggplot(dat2,aes(value, ho, group=interaction(variable, trans), col=variable, shape=trans )) +
1558524119547:# facet_grid(~N) +
1558524119549:geom_line(aes(y=fit, lty=variable), size=0.8) +
1558524119550:geom_point(alpha = 0.3)
1558524234951:ggplot(dat2,aes(value, ho, group=variable, col=variable, shape=trans )) +
1558524234953:facet_grid(~trans) +
1558524234954:geom_line(aes(y=fit, lty=variable), size=0.8) +
1558524234956:geom_point(alpha = 0.3)
1558524263463:ggplot(dat2,aes(value, ho, group=variable, col=variable )) +
1558524263465:facet_grid(~trans) +
1558524263466:geom_line(aes(y=fit, lty=variable), size=0.8) +
1558524263469:geom_point(alpha = 0.3)
1558524269563:ggplot(dat2,aes(value, ho, group=variable )) +
1558524269564:facet_grid(~trans) +
1558524269565:geom_line(aes(y=fit, lty=variable), size=0.8) +
1558524269567:geom_point(alpha = 0.3)
1558524326537:ggplot(dat2,aes(value, ho, group=trans )) +
1558524326539:facet_grid(~variable) +
1558524326540:geom_line(aes(y=fit, lty=variable), size=0.8) +
1558524326542:geom_point(alpha = 0.3)
1558524342043:ggplot(dat2,aes(value, ho, group=trans )) +
1558524342044:facet_grid(~variable) +
1558524342046:geom_line(aes(y=fit, lty=variable), size=0.8)
1558524364899:ggplot(dat2,aes(value, ho, group=trans )) +
1558524364900:facet_grid(~variable)
1558524373405:ggplot(dat2,aes(value, ho, group=trans )) +
1558524373408:facet_grid(~variable) +
1558524373409:geom_line(aes(y=fit, lty=trans), size=0.8)
1558524392604:ggplot(dat2,aes(value, ho, group=trans )) +
1558524392605:facet_grid(~variable) +
1558524392607:geom_line(aes(y=fit, lty=trans), size=0.8) +
1558524392609:geom_point()
1558524457433:ggplot(dat2,aes(value, ho, group=Patientencode )) +
1558524457435:facet_grid(~variable) +
1558524457436:geom_line(aes(y=fit, lty=trans), size=0.8) +
1558524457438:geom_point()
1558524491530:ggplot(dat2,aes(value, ho, group=Patientencode )) +
1558524491532:facet_grid(~variable) +
1558524491533:geom_line(aes(y=fit, lty=Patientencode), size=0.8) +
1558524491535:geom_point()
1558524537658:ggplot(dat2,aes(value, ho, group=interaction(value,Patientencode) )) +
1558524537660:facet_grid(~variable) +
1558524537662:geom_line(aes(y=fit, lty=Patientencode), size=0.8) +
1558524537663:geom_point()
1558524550146:ggplot(dat2,aes(value, ho, group=interaction(value,Patientencode) )) +
1558524550147:facet_grid(~variable) +
1558524550149:# geom_line(aes(y=fit, lty=Patientencode), size=0.8) +
1558524550151:geom_point()
1558524905390:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore"), REML = TRUE) # it is already glmm, eigentlich
1558524909778:summary(lm)
1558524952278:summary(lm2)
1558525263926:ggplot(dat2,aes(value, ho, group=interaction(value,Patientencode) )) +
1558525263928:facet_grid(~variable)
1558525267888:ggplot(dat2,aes(value, ho, group=interaction(value,Patientencode) )) +
1558525267890:facet_grid(~variable) +
1558525267891:# geom_line(aes(y=fit, lty=Patientencode), size=0.8) +
1558525267892:geom_point()
1558525273015:ggplot(dat2,aes(value, ho, group=interaction(value,Patientencode) )) +
1558525273017:# facet_grid(~variable) +
1558525273018:# geom_line(aes(y=fit, lty=Patientencode), size=0.8) +
1558525273019:geom_point()
1558525326089:ggplot(dat2,aes(variable, value) )) +
1558525326091:# facet_grid(~variable) +
1558525326092:# geom_line(aes(y=fit, lty=Patientencode), size=0.8) +
1558525326094:geom_point()
1558525332246:ggplot(dat2,aes(variable, value)) +
1558525332247:# facet_grid(~variable) +
1558525332249:# geom_line(aes(y=fit, lty=Patientencode), size=0.8) +
1558525332251:geom_point()
1558525361206:ggplot(dat2,aes(variable, value)) +
1558525361207:# facet_grid(~variable) +
1558525361209:# geom_line(aes(y=fit, lty=Patientencode), size=0.8) +
1558525361211:geom_point() +
1558525361212:geom_line()
1558525371431:ggplot(dat2,aes(variable, value, group = Patientencode)) +
1558525371433:# facet_grid(~variable) +
1558525371434:# geom_line(aes(y=fit, lty=Patientencode), size=0.8) +
1558525371436:geom_point() +
1558525371438:geom_line()
1558525380800:ggplot(dat2,aes(variable, value, group = Patientencode)) +
1558525380801:# facet_grid(~variable) +
1558525380803:geom_line(aes(y=fit, lty=Patientencode), size=0.8) +
1558525380804:geom_point() +
1558525380806:geom_line()
1558525409033:ggplot(dat2,aes(variable, value, group = Patientencode)) +
1558525409035:# facet_grid(~variable) +
1558525409036:geom_line(aes(y=fit, col=Patientencode), size=0.8) +
1558525409038:geom_point() +
1558525409039:geom_line()
1558525516712:ggplot(dat2,aes(variable, value, group = Patientencode)) +
1558525516714:# facet_grid(~variable) +
1558525516716:# geom_line(aes(y=fit, lty=Patientencode), size=0.8) +
1558525516718:geom_point() +
1558525516719:geom_line() +
1558525516721:geom_hline(yintercept=0, linetype="dashed")
1558525527945:ggplot(dat2,aes(variable, value, group = Patientencode, col = Patientencode)) +
1558525527946:# facet_grid(~variable) +
1558525527948:# geom_line(aes(y=fit, lty=Patientencode), size=0.8) +
1558525527949:geom_point() +
1558525527950:geom_line() +
1558525527952:geom_hline(yintercept=0, linetype="dashed")
1558525541481:ggplot(dat2,aes(variable, value, group = Patientencode, col = trans)) +
1558525541483:# facet_grid(~variable) +
1558525541484:# geom_line(aes(y=fit, lty=Patientencode), size=0.8) +
1558525541486:geom_point() +
1558525541487:geom_line() +
1558525541489:geom_hline(yintercept=0, linetype="dashed")
1558525563316:ggplot(dat2,aes(variable, value, group = Patientencode, col = trans)) +
1558525563318:# facet_grid(~variable) +
1558525563319:# geom_line(aes(y=fit, lty=Patientencode), size=0.8) +
1558525563321:geom_point() +
1558525563322:geom_line() +
1558525563324:geom_hline(yintercept=mean(dat2$ho), linetype="dashed")
1558525678793:# anderer plot
1558525678794:ggplot(dat2, aes(ho, value, group = Patientencode, col = trans)) +
1558525678796:geom_point() +
1558525678797:geom_line()
1558525698773:# anderer plot
1558525698776:ggplot(dat2, aes(value, ho, group = Patientencode, col = trans)) +
1558525698779:geom_point() +
1558525698781:geom_line()
1558525719353:# anderer plot
1558525719355:ggplot(dat2, aes(value, ho, group = (ho,Patientencode), col = trans)) +
1558525719357:geom_point() +
1558525719359:geom_line()
1558525728499:# anderer plot
1558525728501:ggplot(dat2, aes(value, ho, group = interaction(ho,Patientencode), col = trans)) +
1558525728502:geom_point() +
1558525728503:geom_line()
1558526006473:# anderer plot
1558526006474:ggplot(dat2, aes(ho, variable, group = Patientencode, col = trans)) +
1558526006476:geom_point() +
1558526006477:geom_line()
1558526025420:# anderer plot
1558526025421:ggplot(dat2, aes(ho, trans)) +
1558526025423:geom_point() +
1558526025424:geom_line()
1558526031435:# anderer plot
1558526031436:ggplot(dat2, aes(ho, trans)) +
1558526031438:geom_point()
1558526050119:# anderer plot
1558526050121:ggplot(dat2, aes(trans, ho, col = trans)) +
1558526050123:geom_point()
1558526090798:aggregate(ho ~ trans, FUN = mean, data = dat2)
1558526105816:fisher.test(ho ~ trans, data = dat2)
1558526116832:fisher.test(dat2$ho ~ dat2$trans)
1558526127226:fisher.test(dat2$ho, dat2$trans)
1558526137759:t.test(dat2$ho, dat2$trans)
1558526143727:t.test(dat2$ho ~  dat2$trans)
1558526295656:t.test(value ~ variable, data = dat2)
1558526458256:# plot pqh9 und zeit
1558526458258:ggplot(dat2, aes(values, variable, col = trans)) +
1558526458260:geom_point() +
1558526458262:geom_line()
1558526463198:# plot pqh9 und zeit
1558526463200:ggplot(dat2, aes(value, variable, col = trans)) +
1558526463201:geom_point() +
1558526463202:geom_line()
1558526474037:# plot pqh9 und zeit
1558526474039:ggplot(dat2, aes(y = value, x = variable, col = trans)) +
1558526474040:geom_point() +
1558526474042:geom_line()
1558526478982:# plot pqh9 und zeit
1558526478984:ggplot(dat2, aes(y = value, x = variable, col = trans)) +
1558526478985:geom_point()
1558526501281:table(dat2$trans)
1558526510203:64/2
1558526515948:28/2
1558526539432:# plot pqh9 und zeit
1558526539434:ggplot(dat2, aes(y = value, x = variable, col = trans, size = trans)) +
1558526539436:geom_point()
1558526573527:# plot pqh9 und zeit
1558526573529:ggplot(dat2, aes(y = value, x = variable, col = trans)) +
1558526573530:geom_point()
1558526688908:lm(value ~ variable * trans, data = dat2)
1558526698435:summary.lm(lm(value ~ variable * trans, data = dat2))
1558526785543:summary.lm(lm(value ~ variable * trans + (variable|Patientencode), data = dat2))
1558526788252:summary.lm(lm(value ~ variable * trans + (variable|Patientencode), data = dat2))
1558526794460:lmer(value ~ variable * trans + (variable|Patientencode), data = dat2))
1558526799068:lmer(value ~ variable * trans + (variable|Patientencode), data = dat2)
1558526808933:lmer(value ~ variable * trans + (1|variable:Patientencode), data = dat2)
1558526830352:lmer(value ~ variable * trans + (1|variable:Patientencode), data = dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558526834055:lmer(value ~ variable * trans + (1|variable:Patientencode), data = dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558526900520:lmer(value ~ variable * trans + (1|Patientencode), data = dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558526909055:lm <- lmer(value ~ variable * trans + (1|Patientencode), data = dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558526909372:summary(lm)
1558526945794:lm <- lmer(value ~ variable * trans + (variable | trans:Patientencode), data = dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558526947485:summary(lm)
1558527418065:library(effect)
1558527426202:library(effects)
1558527433292:install.packages("effects")
1558527446564:install.packages("effects", dependencies = T)
1558527661021:setRepositories()
1558527722907:ap <- available.packages()
1558527737699:"effects" %in% ap
1558527748611:"effect" %in% ap
1558527754675:head(ap)
1558527765260:names(ap)
1558527772708:attributes(ap)
1558527792372:dimnames(ap)
1558527798238:dimnames(ap)[1]
1558527817434:"effects" %in% dimnames(ap)[1]
1558527842499:"effects" %in% dimnames(ap)[1]
1558527845790:"effects " %in% dimnames(ap)[1]
1558527852110:" effects" %in% dimnames(ap)[1]
1558527962198:library(remotes)
1558527962237:install_github("cran/effects")
1558642060182:# h1b:versuche das ganze zu plotten
1558642060198:pat <- ("T0_phq9|T1_phq9")
1558642061276:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1558642062645:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1558642062646:dat2 <- group_by(dat1, Patientencode) %>%
1558642062648:summarise(occur = n()) %>%
1558642062649:filter(occur == 2) %>%
1558642062650:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1558642067096:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore"), REML = TRUE) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558642068483:# ist das model konvergiert?
1558642068491:converge_ok(lm) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558642071075:is_singular(lm) #auch hier False
1558642072410:# gebe p-werte aus
1558642072414:pv <- p_value(lm, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558642074891:summary(pv) # scheint nicht zu funktioneiren
1558642086174:# nehme residual varianz
1558642086191:get_re_var(lm, "sigma_2")
1558642089607:# alle random effekte
1558642089608:re_var(lm)
1558642098460:re_var(lm, adjusted = TRUE) # weitere varianzkomponenten für das ganze modell angepasst?=> interpretationen kann siehe unten
1558642126635:# r-quadrat (gut oder schlecht?)
1558642126647:r2(lm) # interpretation https://rdrr.io/cran/MuMIn/man/r.squaredGLMM.html
1558642133142:# berechne icc, von einem bestehenden modell => ist anders als ICC1!!
1558642133152:icc(lm, adjusted = T) # conditionelles modell!
1558642151729:# r-quadrat (gut oder schlecht?)
1558642151731:r2(lm) # interpretation https://rdrr.io/cran/MuMIn/man/r.squaredGLMM.html
1558873746335:# load themes,data, packages-----------
1558873746337:source("kira_masterarbeit_edit_190418.R")
1558873748764:source("mytheme.R")
1558873765473:p1 <- ggplot(dat, aes(y = dat$T0_phq9 , x = trans)) +
1558873765476:geom_boxplot() +
1558873765477:scale_y_continuous(limits = c(0,20))# dont look very nice :(
1558873765505:# ggplot(dat, aes(x = dat$T0_phq9 )) + geom_histogram()
1558873765507:p2 <- ggplot(dat, aes(y = dat$T1_phq9 , x = trans)) +
1558873765509:geom_boxplot() +
1558873765510:scale_y_continuous(limits = c(0,20))# looks good
1558873765570:plot_grid(p1, p2, ncol = 2)
1558873773179:library(cowplot)
1558873774152:library(lme4)
1558873784042:p1 <- ggplot(dat, aes(y = dat$T0_phq9 , x = trans)) +
1558873784046:geom_boxplot() +
1558873784048:scale_y_continuous(limits = c(0,20))# dont look very nice :(
1558873784054:# ggplot(dat, aes(x = dat$T0_phq9 )) + geom_histogram()
1558873784056:p2 <- ggplot(dat, aes(y = dat$T1_phq9 , x = trans)) +
1558873784058:geom_boxplot() +
1558873784059:scale_y_continuous(limits = c(0,20))# looks good
1558873784066:plot_grid(p1, p2, ncol = 2)
1558873810940:# h1b:schaue boxplots an
1558873810942:# hier ein beispiel für die resultate: http://rcompanion.org/handbook/I_06.html
1558873810944:p1 <- ggplot(data_wide, aes(y = T0_phq9 , x = trans)) +
1558873810945:geom_boxplot() +
1558873810946:scale_y_continuous(limits = c(0,20))# dont look very nice :(
1558873819771:# ggplot(dat, aes(x = dat$T0_phq9 )) + geom_histogram()
1558873819772:p2 <- ggplot(data_wide, aes(y = T1_phq9 , x = trans)) +
1558873819774:geom_boxplot() +
1558873819776:scale_y_continuous(limits = c(0,20))# looks good
1558873820475:plot_grid(p1, p2, ncol = 2)
1558873838699:plot_grid(p1, p2, ncol = 2)
1558873863879:p1
1558873873171:print(p1)
1558873889762:table(data_wide$trans) # sehr ungleiche gruppengrössen
1558873897415:# h1b:versuche das ganze zu plotten
1558873897417:pat <- ("T0_phq9|T1_phq9")
1558873898467:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1558873902459:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1558873902460:dat2 <- group_by(dat1, Patientencode) %>%
1558873902462:summarise(occur = n()) %>%
1558873902464:filter(occur == 2) %>%
1558873902466:left_join(., dat1, by = "Patientencode") # nur 23 personen haben beide zeitpunkte
1558873912408:table(dat1$trans)
1558873935346:table(unique(dat1[dat1$Patientencode,]$trans))
1558873946291:unique(dat1[dat1$Patientencode,]$trans)
1558873951893:unique(dat1[dat1$Patientencode,]
1558873963522:)
1558873995414:unique(dat1$Patientencode)
1558874026389:aggregate(trans~Patientencode, dat1, FUN = lenght)
1558874037189:aggregate(trans~Patientencode, dat1, FUN = length)
1558874054860:str(dat1)
1558874077930:aggregate(trans~Patientencode, dat2, FUN = length)
1558874091288:aggregate(Patientencode~trans, dat2, FUN = length)
1558874105856:aggregate(unique(dat2$Patientencode)~trans, dat2, FUN = length)
1558874152265:group_by(dat2, Patientencode,trans) %>% add_tally()
1558874161232:group_by(dat2, Patientencode,trans) %>% count()
1558874207312:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(check.nobs.vs.nRE="ignore"), REML = TRUE) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558874279578:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(optimizer ="Nelder_Mead", check.nobs.vs.nRE="ignore"), REML = TRUE) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558874286511:is_singular(lm) #auch hier False
1558874380897:library(sjstats)
1558874384002:is_singular(lm) #auch hier False
1558874386357:# ist das model konvergiert?
1558874386359:converge_ok(lm) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558874395885:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(optimizer ="Nelder_Mead", check.nobs.vs.nRE="ignore"), REML = F) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558874406763:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(optimizer ="Nelder_Mead"), REML = F) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558874434971:install.packages("optimx")
1558874445719:library(optimx)
1558874481115:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(
1558874481118:optimizer ='optimx', optCtrl=list(method='L-BFGS-B')), REML = F) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558874501513:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(
1558874501515:optimizer ='optimx', optCtrl=list(method='L-BFGS-B'), check.nobs.vs.nRE="ignore")), REML = F) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558874523555:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(
1558874523557:optimizer ='optimx', optCtrl=list(method='L-BFGS-B'), check.nobs.vs.nRE="ignore"), REML = F) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558874550624:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(
1558874550626:optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = F) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558874561533:# ist das model konvergiert?
1558874561535:converge_ok(lm) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558874563505:is_singular(lm) #auch hier False
1558874594364:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(
1558874594366:optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T) # it is already glmm, eigentlich müsste man auch random slope rechnen => aber zu wenig datenpunkte dafür, achtung modell konvergiert nicht
1558874633888:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558874644577:# r-quadrat (gut oder schlecht?)
1558874644578:r2(lm) # interpretation https://rdrr.io/cran/MuMIn/man/r.squaredGLMM.html
1558874649744:# berechne icc, von einem bestehenden modell => ist anders als ICC1!!
1558874649745:icc(lm, adjusted = T) # conditionelles modell!
1558874678857:# plot1
1558874678858:pl <- dat2 %>%
1558874678860:group_by(variable, trans, condit) %>%
1558874678862:summarise(mean_t = mean(value))
1558874679520:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1558874679523:geom_point(size= 4) +
1558874679525:geom_line(size = 1.5) +
1558874679527:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1558874679529:ylab("Mittelwerte der Summenscore") +
1558874679530:xlab("Zeitpunkt") +
1558874679532:guides(linetype = guide_legend(title = "Überweisungsquelle"), shape = F) +
1558874679533:facet_wrap(~condit) +
1558874679535:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1558874679537:mytheme
1558874897152:ggplot(dat2, aes(y = value, x = variable, fill = trans)) + geom_point()
1558874913488:ggplot(dat2, aes(y = value, x = variable, fill = trans)) + geom_point() + ggsave()
1558874933168:ggplot(dat2, aes(y = value, x = variable, fill = trans)) + geom_point() + ggsave("test.pdf", device = pdf)
1558874942630:ggplot(dat2, aes(y = value, x = variable, fill = trans)) + geom_point() + ggsave(filename = "test.pdf", device = pdf)
1558875955435:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1558875955437:geom_point(size= 4)
1558875969665:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1558875969667:geom_point(size= 4) + ggsave("test")
1558875982772:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1558875982774:geom_point(size= 4) + ggsave("test.png", device = png)
1558876006438:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1558876006439:geom_point(size= 4) + ggsave("test.pdf", device = pdf)
1558876018673:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1558876018674:geom_point(size= 4) + ggsave("test.pdf", device = pdf, width = 12, height = 12)
1558876033947:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1558876033949:geom_point(size= 4) + ggsave("plot/test.pdf", device = pdf, width = 12, height = 12)
1558876042782:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1558876042788:geom_point(size= 4) + ggsave("plot/test.pdf", device = cairo_pdf, width = 12, height = 12)
1558876068282:detach("package:psych", unload=TRUE) # attention psych and ggplot do not well togheter
1558876087730:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1558876087732:geom_point(size= 4) + ggsave("plot/test.pdf", device = cairo_pdf, width = 12, height = 12)
1558876095340:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1558876095343:geom_point(size= 4)
1558876290166:# load themes,data, packages-----------
1558876290168:source("kira_masterarbeit_edit_190418.R")
1558876292596:source("mytheme.R")
1558876310976:pat <- ("T0_phq9|T1_phq9")
1558876310978:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1558876310982:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1558876310984:dat2 <- group_by(dat1, Patientencode) %>%
1558876310985:summarise(occur = n()) %>%
1558876310987:filter(occur == 2) %>%
1558876310988:left_join(., dat1, by = "Patientencode") # nur 46 personen haben beide zeitpunkte
1558876324684:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1558876324686:geom_point(size= 4)
1558876329934:pl <- dat2 %>%
1558876329936:group_by(variable, trans, condit) %>%
1558876329938:summarise(mean_t = mean(value))
1558876329955:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1558876329957:geom_point(size= 4)
1558876382037:# plot0
1558876382038:ggplot(dat2, aes(x = trans, y = values)) + geom_point()
1558876401054:# plot0
1558876401055:ggplot(dat2, aes(x = trans, y = value)) + geom_point()
1558876415056:# plot0
1558876415058:ggplot(dat2, aes(x = variable, y = value)) + geom_point()
1558876433992:# plot0
1558876433994:ggplot(dat2, aes(x = value, y = variable)) + geom_point()
1558876548875:library(optimx)
1558876550513:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558876557348:library(lme4)
1558876560316:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558876579593:# plot0
1558876579594:ggplot(dat2, aes(x = variable, y = value)) +
1558876579595:geom_point() +
1558876579597:geom_line(aes(y=predict(lm), group=Patientencode, size="Subjects"))
1558876605594:# plot0
1558876605595:ggplot(dat2, aes(x = variable, y = value)) +
1558876605597:geom_point(size = 3) +
1558876605599:geom_line(aes(y=predict(lm), group=Patientencode, size="Patienten"), size = 1)
1558876619810:# plot0
1558876619812:ggplot(dat2, aes(x = variable, y = value, color = trans)) +
1558876619814:geom_point(size = 3) +
1558876619816:geom_line(aes(y=predict(lm), group=Patientencode, size="Patienten"), size = 1)
1558876896142:(min(dat2[dat2$variable == "T0_phq0",]$value
1558876905423:min(dat2[dat2$variable == "T0_phq0",]$value
1558876911156:)
1558876930038:min(dat2[dat2$variable == "T0_phq9",]$value)
1558876943442:max(dat2[dat2$variable == "T0_phq9",]$value))
1558876947149:# plot0
1558876947150:newdat <- expand.grid(trans=unique(dat2$trans),
1558876947152:T0_phq0=c(min(dat2[dat2$variable == "T0_phq9",]$value),
1558876947153:max(dat2[dat2$variable == "T0_phq9",]$value)))
1558876949831:View(newdat)
1558876970672:# plot0
1558876970674:newdat <- expand.grid(trans=unique(dat2$trans),
1558876970675:T0_phq0=c(min(dat2[dat2$variable == "T0_phq9",]$value),
1558876970677:max(dat2[dat2$variable == "T0_phq9",]$value)),
1558876970678:T0_phq1=c(min(dat2[dat2$variable == "T1_phq9",]$value),
1558876970680:max(dat2[dat2$variable == "T1_phq9",]$value)))
1558876983302:predict(lm, level=0, newdata=newdat)
1558877063276:# plot0
1558877063277:newdat <- expand.grid(trans=unique(dat2$trans),
1558877063279:variable=c(min(dat2[dat2$variable == "T1_phq9",]$value),
1558877063280:max(dat2[dat2$variable == "T0_phq9",]$value)))
1558877072775:predict(lm, level=0, newdata=newdat)
1558877159165:# plot0
1558877159166:newdat <- expand.grid(condit = unique(dat2$condit),trans=unique(dat2$trans),
1558877159168:variable=c(min(dat2[dat2$variable == "T1_phq9",]$value),
1558877159169:max(dat2[dat2$variable == "T0_phq9",]$value)))
1558877161861:View(newdat)
1558877175895:predict(lm, level=0, newdata=newdat)
1558877327898:str(newdat)
1558877583045:model.frame(lm)
1558877597644:head(model.frame(lm))
1558877662146:# plot0
1558877662149:newdat <- expand.grid(condit = unique(dat2$condit),trans=unique(dat2$trans), variable = unique(dat2$variable),
1558877662150:value=c(min(dat2[dat2$variable == "T1_phq9",]$value),
1558877662152:max(dat2[dat2$variable == "T0_phq9",]$value)))
1558877673071:predict(lm, level=0, newdata=newdat)
1558877694061:ggplot(dat2, aes(x = variable, y = value, color = trans)) +
1558877694062:geom_point(size = 3) +
1558877694064:geom_line(aes(y=predict(lm), group=Patientencode, size="Patienten"), size = 1) +
1558877694065:geom_line(data=newdat, aes(y=predict(lm, level=0, newdata=model.frame(lm)), size="Population"))
1558877700877:predict(lm, level=0, newdata=model.frame(lm)
1558877704821:)
1558877719449:ggplot(dat2, aes(x = variable, y = value, color = trans)) +
1558877719450:geom_point(size = 3) +
1558877719452:geom_line(aes(y=predict(lm), group=Patientencode, size="Patienten"), size = 1) +
1558877719453:geom_line(data=newdat, aes(y=predict(lm, level=0, newdata=model.frame(lm)), size="Population"))
1558877761421:ggplot(dat2, aes(x = variable, y = value, color = trans)) +
1558877761422:geom_point(size = 3) +
1558877761424:geom_line(aes(y=predict(lm), group=Patientencode, size="Patient"), size = 1) +
1558877761425:geom_line(data=newdat, aes(y=predict(lm, level=0, newdata=model.frame(lm)), size="Population")) +
1558877761427:scale_size_manual(name="Predictions", values=c("Patient"=0.5, "Population"=3))
1558877809520:# plot0
1558877809522:newdat <- expand.grid(Patientencode = unique(dat2$Patientencode), condit = unique(dat2$condit),trans=unique(dat2$trans), variable = unique(dat2$variable),
1558877809523:value=c(min(dat2[dat2$variable == "T1_phq9",]$value),
1558877809525:max(dat2[dat2$variable == "T0_phq9",]$value)))
1558877819122:ggplot(dat2, aes(x = variable, y = value, color = trans)) +
1558877819123:geom_point(size = 3) +
1558877819125:geom_line(aes(y=predict(lm), group=Patientencode, size="Patient"), size = 1) +
1558877819126:geom_line(data=newdat, aes(y=predict(lm, level=0, newdata=newdata), size="Population")) +
1558877819127:scale_size_manual(name="Predictions", values=c("Patient"=0.5, "Population"=3))
1558877836264:ggplot(dat2, aes(x = variable, y = value, color = trans)) +
1558877836265:geom_point(size = 3) +
1558877836267:geom_line(aes(y=predict(lm), group=Patientencode, size="Patient"), size = 1) +
1558877836268:geom_line(data=newdat, aes(y=predict(lm, level=0, newdata=newdat), size="Population")) +
1558877836270:scale_size_manual(name="Predictions", values=c("Patient"=0.5, "Population"=3))
1558877859838:?Orthodont
1558877875389:newdat2 <- expand.grid(Sex=unique(Orthodont$Sex),
1558877875391:age=c(min(Orthodont$age),
1558877875392:max(Orthodont$age)))
1558877882786:library(nlme)
1558877884328:newdat2 <- expand.grid(Sex=unique(Orthodont$Sex),
1558877884329:age=c(min(Orthodont$age),
1558877884331:max(Orthodont$age)))
1558877887320:View(newdat2)
1558877905120:fm2 <- lme(distance ~ age + Sex, data = Orthodont, random = ~ 1|Subject)
1558877915637:predict(fm2, level=0, newdata=newdat)
1558877924214:predict(fm2, level=0, newdata=newdat2)
1558877966493:predi
1558877986667:predict(fm2, level = 0, newdata = model.frame(fm2))
1558877998725:model.frame(fm2)
1558878014003:model.frame(fm2[1])
1558878018040:model.frame(fm2[3])
1558878021167:model.frame(fm2[3,])
1558878056487:ggplot(dat2, aes(x = variable, y = value, color = trans)) +
1558878056489:geom_point(size = 3) +
1558878056491:geom_line(aes(y=predict(lm), group=Patientencode, size="Patient"), size = 1) +
1558878056492:# geom_line(data=newdat, aes(y=predict(lm, level=0, newdata=newdat), size="Population")) +
1558878056493:scale_size_manual(name="Vorhersagen", values=c("Patient"=0.5, "Population"=3))
1558878094213:ggplot(dat2, aes(x = variable, y = value, color = trans)) +
1558878094214:geom_point(size = 3) +
1558878094216:geom_line(aes(y=predict(lm), group=Patientencode, size="Patient"), size = 1) +
1558878094218:# geom_line(data=newdat, aes(y=predict(lm, level=0, newdata=newdat), size="Population")) +
1558878094220:# scale_size_manual(name="Vorhersagen", values=c("Patient"=0.5, "Population"=3)) +
1558878094226:# plot1
1558878094227:pl <- dat2 %>%
1558878094228:group_by(variable, trans, condit) %>%
1558878094230:summarise(mean_t = mean(value))
1558878099663:ggplot(dat2, aes(x = variable, y = value, color = trans)) +
1558878099666:geom_point(size = 3) +
1558878099667:geom_line(aes(y=predict(lm), group=Patientencode, size="Patient"), size = 1)
1558878123094:ggplot(dat2, aes(x = variable, y = value, color = trans)) +
1558878123100:geom_point(size = 3)
1558878133687:ggplot(dat2, aes(x = variable, y = value, color = trans)) +
1558878133689:geom_point(size = 3) +
1558878133691:geom_line(aes(y=predict(lm), group=Patientencode, size="Patient"), size = 1) +
1558878133692:# geom_line(data=newdat, aes(y=predict(lm, level=0, newdata=newdat), size="Population")) +
1558878133694:# scale_size_manual(name="Vorhersagen", values=c("Patient"=0.5, "Population"=3)) +
1558878133700:# plot1
1558878133702:pl <- dat2 %>%
1558878133704:group_by(variable, trans, condit) %>%
1558878133706:summarise(mean_t = mean(value))
1558878198401:ggplot(dat2, aes(x = variable, y = value, color = trans)) +
1558878198404:geom_point(size = 3) +
1558878198405:geom_line(aes(y=predict(lm), group=Patientencode, size="Patient"), size = 1) +
1558878198407:xlab("Zeitpunkt") +
1558878198408:ylab("Summenscore PHQ-9") +
1558878198410:guides(color = guide_legend("Überweisungsquelle"))+
1558878198411:mytheme
1558878270535:ggsave("plots/prediction_h5_190526.pdf",
1558878270537:height = 12,
1558878270538:width = 12,
1558878270540:device = cairo_pdf)
1558878275953:# plot1
1558878275955:pl <- dat2 %>%
1558878275957:group_by(variable, trans, condit) %>%
1558878275958:summarise(mean_t = mean(value))
1558878276603:ggplot(pl, aes(x = variable, y = mean_t, linetype = trans ,shape = trans, group = trans)) +
1558878276604:geom_point(size= 4) +
1558878276605:geom_line(size = 1.5) +
1558878276607:scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
1558878276608:ylab("Mittelwerte der Summenscore") +
1558878276610:xlab("Zeitpunkt") +
1558878276612:guides(linetype = guide_legend(title = "Überweisungsquelle"), shape = F) +
1558878276613:facet_wrap(~condit) +
1558878276615:# scale_fill_manual("") + # falls PR und SR noch ausgeschrieben werden soll
1558878276616:mytheme
1558878448551:summary(lm)
1558878498455:# ho mit lme
1558878498456:lm2 <- lme(value ~ variable * trans * ho, random = list(trans  = ~ variable,
1558878498458:Patientencode = ~ variable), data=dat2)
1558878508628:#daten aufbereiten
1558878508629:dat <- data_wide %>%
1558878508631:# mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1558878508632:#        moder_ho = (T0_phq9 - T1_phq9) * ho,
1558878508634:#        moder_zw = (T0_phq9 - T1_phq9) * zw,
1558878508636:#        moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1558878508637:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1558878508639:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1558878508640:drop_na(value)
1558878510472:# check again
1558878510474:dat2 <- group_by(dat, Patientencode) %>%
1558878510476:summarise(occur = n()) %>%
1558878510477:filter(occur == 2) %>%
1558878510478:left_join(., dat, by = "Patientencode") # 46 personen
1558878520501:lm2 <- lme4::lmer(value ~ variable * trans * ho +
1558878520503:(variable | trans:Patientencode), # +
1558878520504:#(variable | trans),
1558878520506:data=dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558878523082:# ist das model konvergiert?
1558878523084:converge_ok(lm2) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558878532677:summary(lm2)
1558878616618:# zur überprüfung mit nlme
1558878616620:lm1 <- lme(value ~ variable * trans * ld, random = list(trans  = ~ variable,
1558878616621:Patientencode = ~ variable), data=dat2)
1558878617432:summary(lm1) # ähnliche werte zu oben mit lme4 methode
1558878635256:summary(lm1) # ähnliche werte zu oben mit lme4 methode
1558878818692:# freind of kira
1558878818693:interHO <- interaction(data_wide$T0_phq9*data_wide$ho)
1558878862667:lme(value ~ variable * trans * ho, random = list(trans  = ~ variable,
1558878862668:Patientencode = ~ variable), data=data_wide)
1558878913408:lme(T1_phq9 ~ T0_phq9 * trans + ho + interHO, random = list(trans  = ~ variable,
1558878913409:Patientencode = ~ variable), data=data_wide)
1558878954524:lme(T1_phq9 ~ T0_phq9 * trans + ho + interHO, random = list(trans  = ~ T1_phq9 + T0_phq9,
1558878954526:Patientencode = ~ T1_phq9 + T0_phq9), data=data_wide)
1558878985816:lme(T1_phq9 ~ T0_phq9 * trans + ho + interHO, random = list(trans  = ~ T1_phq9 + T0_phq9,
1558878985817:Patientencode = ~ T1_phq9 + T0_phq9), data=data_wide, na.action = "complete")
1558879026925:# model
1558879026928:lm1 <- lme4::lmer(value ~ variable * trans + ld +
1558879026929:(variable | trans:Patientencode), # +
1558879026931:#(variable | trans),
1558879026932:data=dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558879080269:# model
1558879080270:lm1 <- lme4::lmer(value ~ variable * trans + ld +
1558879080272:(variable | trans:Patientencode), # +
1558879080273:#(variable | trans),
1558879080275:data=dat2, REML = TRUE, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558879084325:# ist das model konvergiert?
1558879084327:converge_ok(lm1) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558879097843:library(sjstats)
1558879098176:library(optimx)
1558879120088:# model
1558879120090:lm1 <- lme4::lmer(value ~ variable * trans + ld +
1558879120091:(variable | trans:Patientencode), # +
1558879120092:#(variable | trans),
1558879120094:data=dat2, REML = TRUE, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558879122463:# ist das model konvergiert?
1558879122464:converge_ok(lm1) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558879124272:is_singular(lm1) #auch hier False
1558879136231:# gebe p-werte aus
1558879136232:pv <- p_value(lm1, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558879136985:summary(pv) # scheint nicht zu funktioneiren
1558879140315:# gebe p-werte aus
1558879140317:pv <- p_value(lm1, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558879143480:summary(pv) # scheint nicht zu funktioneiren
1558879186985:lm2 <- lme4::lmer(value ~ variable * trans + ho +
1558879186987:(variable | trans:Patientencode), # +
1558879186988:#(variable | trans),
1558879186989:data=dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558879194854:lm2 <- lme4::lmer(value ~ variable * trans + ho +
1558879194856:(variable | trans:Patientencode), # +
1558879194860:#(variable | trans),
1558879194861:data=dat2, REML = TRUE, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558879200153:# ist das model konvergiert?
1558879200155:converge_ok(lm2) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558879203027:is_singular(lm2) #auch hier False
1558879221649:lm2 <- lme4::lmer(value ~ variable * trans + ho +
1558879221651:(variable | trans:Patientencode), # +
1558879221652:#(variable | trans),
1558879221654:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558879228104:# ist das model konvergiert?
1558879228106:converge_ok(lm2) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558879230058:is_singular(lm2) #auch hier False
1558879234043:# gebe p-werte aus
1558879234044:pv <- p_value(lm2, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558879235823:summary(pv) # scheint nicht zu funktioneiren
1558879251620:summary(lm2)
1558879347228:lm2 <- lme4::lmer(value ~ variable * trans + ho +
1558879347230:(variable | trans:Patientencode), # +
1558879347231:#(variable | trans),
1558879347233:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore", optCtrl=list(maxfun=2e5)))
1558879382019:lm2 <- lme4::lmer(value ~ variable * trans + ho +
1558879382021:(variable | trans:Patientencode), # +
1558879382023:#(variable | trans),
1558879382024:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb', maxfun = 2e5), check.nobs.vs.nRE="ignore"))
1558879402634:lm2 <- lme4::lmer(value ~ variable * trans + ho +
1558879402635:(variable | trans:Patientencode), # +
1558879402637:#(variable | trans),
1558879402638:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(maxfun = 2e5), check.nobs.vs.nRE="ignore"))
1558879434317:lm2 <- lme4::lmer(value ~ variable * trans + ho +
1558879434318:(variable | trans:Patientencode), # +
1558879434320:#(variable | trans),
1558879434321:data=dat2, REML = F, control = lmerControl(optimizer ='bobyqa', optCtrl=list(maxfun = 2e5), check.nobs.vs.nRE="ignore"))
1558879452660:summary(lm2)
1558879471501:# ist das model konvergiert?
1558879471503:converge_ok(lm2) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558879473449:is_singular(lm2) #auch hier False
1558879474839:# gebe p-werte aus
1558879474840:pv <- p_value(lm2, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558879477096:summary(pv) # scheint nicht zu funktioneiren
1558879493735:lm2 <- lme4::lmer(value ~ variable * trans + ho +
1558879493737:(variable | trans:Patientencode), # +
1558879493739:#(variable | trans),
1558879493740:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558879495562:# ist das model konvergiert?
1558879495563:converge_ok(lm2) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558879497830:is_singular(lm2) #auch hier False
1558879499965:# gebe p-werte aus
1558879499966:pv <- p_value(lm2, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558879500717:summary(pv) # scheint nicht zu funktioneiren
1558879539974:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(variable)))+
1558879539975:geom_point(size=1, alpha=.7, position = "jitter")
1558879590679:pat <- ("T0_phq9|T1_phq9")
1558879590681:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1558879590685:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1558879590686:dat2 <- group_by(dat1, Patientencode) %>%
1558879590687:summarise(occur = n()) %>%
1558879590689:filter(occur == 2) %>%
1558879590690:left_join(., dat1, by = "Patientencode") #
1558879596611:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558879602952:# ist das model konvergiert?
1558879602954:converge_ok(lm) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558879604782:is_singular(lm) #auch hier False
1558879608364:# gebe p-werte aus
1558879608366:pv <- p_value(lm, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558879608948:summary(pv) # scheint nicht zu funktioneiren
1558879637207:ggplot(dat2, aes(x = variable, y = value, color = trans)) +
1558879637209:geom_point(size = 3, alpha=.7, position = "jitter")
1558879645702:ggplot(dat2, aes(x = variable, y = value, color = trans)) +
1558879645704:geom_point(size = 3, alpha=.7, position = "jitter") +
1558879645705:geom_line(aes(y=predict(lm), group=Patientencode, size="Patient"), size = 1) +
1558879645707:xlab("Zeitpunkt")
1558879675427:#daten aufbereiten
1558879675428:dat <- data_wide %>%
1558879675430:# mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1558879675432:#        moder_ho = (T0_phq9 - T1_phq9) * ho,
1558879675433:#        moder_zw = (T0_phq9 - T1_phq9) * zw,
1558879675435:#        moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1558879675436:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1558879675438:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1558879675440:drop_na(value)
1558879690290:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(variable)))+
1558879690292:geom_point(size=1, alpha=.7, position = "jitter")
1558879720111:formula(lm2)
1558879736292:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558879736294:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(variable)))+
1558879736296:geom_point(size=1, alpha=.7, position = "jitter") +
1558879736297:geom_smooth(formula = formula(lm2), se = F) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558879748845:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(variable)))+
1558879748846:geom_point(size=1, alpha=.7, position = "jitter") +
1558879748847:geom_smooth(formula = formula(lm2), se = F)
1558879760592:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558879760595:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558879760596:geom_point(size=1, alpha=.7, position = "jitter") +
1558879760598:geom_smooth(formula = formula(lm2), se = F) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558879781976:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558879781978:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558879781980:geom_point(size=1, alpha=.7, position = "jitter") +
1558879781981:geom_smooth(formula = lm, se = F) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558879803605:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558879803607:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558879803608:geom_point(size=1, alpha=.7, position = "jitter") +
1558879803610:geom_smooth(method = lm, se = F) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558879817703:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558879817705:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558879817707:geom_point(size=1, alpha=.7, position = "jitter") +
1558879817709:geom_smooth(method = "loess", se = F) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558879828646:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558879828648:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558879828649:geom_point(size=1, alpha=.7, position = "jitter") +
1558879828652:geom_smooth(se = F) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558879846261:theme_minimal() +
1558879846262:scale_y_continuous(limits = c(0,25)) +
1558879846264:scale_x_continuous(limits = c(1.5,5)) +
1558879846266:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1558879853365:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle
1558879853366:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558879853368:geom_point(size=1, alpha=.7, position = "jitter") +
1558879853369:geom_smooth(se = F) +#formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558879853371:theme_minimal() +
1558879853376:scale_y_continuous(limits = c(0,25)) +
1558879853383:scale_x_continuous(limits = c(1.5,5)) +
1558879853386:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1558879872253:ggplot(dat2, aes(x=variable, y=value)) +
1558879872254:geom_point(size=2) +
1558879872256:geom_point(aes(y = ho, x = variable))
1558879872272:geom_line(aes(y=predict(lm2), group=Patientencode, size = "Patientencode"), size = 1)
1558879880625:ggplot(dat2, aes(x=variable, y=value)) +
1558879880627:geom_point(size=2) +
1558879880628:geom_point(aes(y = ho, x = variable)) +
1558879880630:geom_line(aes(y=predict(lm2), group=Patientencode, size = "Patientencode"), size = 1)
1558879977871:lm2 <- lme4::lmer(value ~ variable * trans + ho +
1558879977874:(variable | trans:Patientencode), # +
1558879977876:#(variable | trans),
1558879977878:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558879985575:#daten aufbereiten
1558879985577:dat <- data_wide %>%
1558879985579:# mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1558879985581:#        moder_ho = (T0_phq9 - T1_phq9) * ho,
1558879985582:#        moder_zw = (T0_phq9 - T1_phq9) * zw,
1558879985584:#        moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1558879985586:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1558879985587:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1558879985589:drop_na(value)
1558879995796:lm2 <- lme4::lmer(value ~ variable * trans + ho +
1558879995798:(variable | trans:Patientencode), # +
1558879995800:#(variable | trans),
1558879995802:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558880009658:# check again
1558880009660:dat2 <- group_by(dat, Patientencode) %>%
1558880009662:summarise(occur = n()) %>%
1558880009664:filter(occur == 2) %>%
1558880009665:left_join(., dat, by = "Patientencode") # 46 personen
1558880017677:lm2 <- lme4::lmer(value ~ variable * trans + ho +
1558880017679:(variable | trans:Patientencode), # +
1558880017680:#(variable | trans),
1558880017682:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558880020518:# ist das model konvergiert?
1558880020520:converge_ok(lm2) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558880022601:is_singular(lm2) #auch hier False
1558880024840:# gebe p-werte aus
1558880024842:pv <- p_value(lm2, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558880025427:summary(pv) # scheint nicht zu funktioneiren
1558880051635:ggplot(dat2, aes(x=variable, y=value)) +
1558880051637:geom_point(size=2) +
1558880051639:geom_point(aes(y = ho, x = variable)) +
1558880051641:geom_line(aes(y=predict(lm2), group=Patientencode, size = "Patientencode"), size = 1)
1558880091372:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558880091374:geom_point(size=1, alpha=.7, position = "jitter") +
1558880645972:summary(lm2)
1558880853652:ggplot(data_wide, aes(x = ho, y = T0_phq9, fill = trans)) + geom_point()
1558880867739:ggplot(data_wide, aes(x = ho, y = T0_phq9, fill = trans)) + geom_point() +
1558880867740:geom_smooth()
1558880878560:ggplot(data_wide, aes(x = ho, y = T0_phq9, fill = trans)) + geom_point() +
1558880878561:geom_smooth(se = F)
1558880893418:ggplot(data_wide, aes(x = ho, y = T0_phq9, fill = trans)) + geom_point() +
1558880893420:geom_smooth(method = "lm",se = F)
1558880906629:ggplot(data_wide, aes(x = ho, y = T0_phq9, color = trans)) + geom_point() +
1558880906632:geom_smooth(method = "lm",se = F)
1558880954019:ggplot(data_wide, aes(x = ho, y = T0_phq9, color = trans)) + geom_point() +
1558880954021:geom_smooth(method = "lm",se = F) +
1558880954023:scale_y_continuous(limits = c(0,25))
1558881006337:ggplot(data_wide, aes(x = ld, y = T0_phq9, color = trans)) + geom_point() +
1558881006340:geom_smooth(method = "lm",se = F) +
1558881006342:scale_y_continuous(limits = c(0,25))
1558881019024:ggplot(data_wide, aes(x = zw, y = T0_phq9, color = trans)) + geom_point() +
1558881019026:geom_smooth(method = "lm",se = F) +
1558881019027:scale_y_continuous(limits = c(0,25))
1558881076378:lm(data_wide$T1_phq9 ~ data_wide$T0_phq9 * data_wide$ho)
1558881090336:summary.lm(lm(data_wide$T1_phq9 ~ data_wide$T0_phq9 * data_wide$ho))
1558881150379:ggplot(data_wide, aes(x = ho, y = T1_phq9, color = trans)) + geom_point() +
1558881150381:geom_smooth(method = "lm",se = F) +
1558881150383:scale_y_continuous(limits = c(0,25))
1558881176564:ggplot(data_wide, aes(x = ho, y = T0_phq9, color = trans)) + geom_point() +
1558881176569:geom_smooth(method = "lm",se = F) +
1558881176570:scale_y_continuous(limits = c(0,25))
1558881215662:lm <- lmer(value ~ variable * trans * condit + age + edu + (variable|condit:Patientencode), data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558881220086:lm <- lmer(value ~ variable * trans * condit + age + educ + (variable|condit:Patientencode), data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558881225605:# ist das model konvergiert?
1558881225607:converge_ok(lm) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558881228126:is_singular(lm) #auch hier False
1558881236283:lm <- lmer(value ~ variable * trans * condit + age + (variable|condit:Patientencode), data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558881238958:# ist das model konvergiert?
1558881238959:converge_ok(lm) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558881252577:lm <- lmer(value ~ variable * trans * condit + educ + (variable|condit:Patientencode), data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558881255155:# ist das model konvergiert?
1558881255157:converge_ok(lm) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558881257446:is_singular(lm) #auch hier False
1558881260855:# gebe p-werte aus
1558881260857:pv <- p_value(lm, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558881261580:summary(pv) # scheint nicht zu funktioneiren
1558881335698:lm <- lmer(value ~ variable * trans * condit + educ:trans + (variable|condit:Patientencode), data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558881338031:# ist das model konvergiert?
1558881338033:converge_ok(lm) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558881342016:age
1558881344387:lm <- lmer(value ~ variable * trans * condit + age + (variable|condit:Patientencode), data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558881346780:# ist das model konvergiert?
1558881346782:converge_ok(lm) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558881919711:# check again
1558881919713:dat2 <- group_by(dat, Patientencode) %>%
1558881919715:summarise(occur = n()) %>%
1558881919716:filter(occur == 2) %>%
1558881919718:left_join(., dat, by = "Patientencode") # 46 personen
1558881987003:dat2$ho2 <- cut(dat2$ho, breaks = ifelse(dat2$ho > median(dat2$ho), "grosse Hoffnung", "kleine Hoffnung"))
1558882000787:dat2$ho2 <- ifelse(dat2$ho > median(dat2$ho), "grosse Hoffnung", "kleine Hoffnung")
1558882004130:View(dat2)
1558882016695:median(dat2$hp)
1558882019457:median(dat2$h0)
1558882023258:median(dat2$h0o
1558882031504:median(dat2$ho)
1558882063851:lm2 <- lme4::lmer(value ~ variable * trans * ho2 +
1558882063853:(variable | trans:Patientencode), # +
1558882063854:#(variable | trans),
1558882063856:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558882066750:# ist das model konvergiert?
1558882066752:converge_ok(lm2) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558882074013:summary(lm2)
1558882106563:# gebe p-werte aus
1558882106564:pv <- p_value(lm2, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558882107330:summary(pv) # scheint nicht zu funktioneiren
1558882257615:ggplot(dat2, aes(x = value, y = variable, color = trans, fill = ho2)) + geom_point()
1558882276218:ggplot(dat2, aes(x = value, y = variable, shape = trans, color = ho2)) + geom_point() +
1558882276221:geom_smooth(method = "lm",se = F) +
1558882276223:scale_y_continuous(limits = c(0,25))
1558882280872:ggplot(dat2, aes(x = value, y = variable, shape = trans, color = ho2)) + geom_point()
1558882297243:ggplot(dat2, aes(y = value, x = variable, shape = trans, color = ho2)) + geom_point() +
1558882297244:geom_smooth(method = "lm",se = F) +
1558882297246:scale_y_continuous(limits = c(0,25))
1558882341521:ggplot(dat2, aes(y = value, x = variable, color = ho2)) + geom_point() +
1558882341522:facet_wrap(~trans)
1558882393013:ggplot(data_wide, aes(x = ho, y = T0_phq9, color = trans)) + geom_point() +
1558882393014:geom_smooth(method = "lm",se = F) +
1558882393016:scale_y_continuous(limits = c(0,25))
1558882629247:summary(lm)
1558882756476:is_singular(lm)
1558882764106:converge_ok(lm)
1558882849090:ggplot(dat2, aes(y = values, x = age, col = trans)) + geom_point() + facet_wrap(~variable)
1558882855385:ggplot(dat2, aes(y = value, x = age, col = trans)) + geom_point() + facet_wrap(~variable)
1558882884168:ggplot(dat2, aes(y = value, x = age, col = trans)) + geom_point() + facet_wrap(~variable) + geom_smooth()
1558882895812:ggplot(dat2, aes(y = value, x = age, col = trans)) + geom_point() + facet_wrap(~variable) + geom_smooth(method = "lm")
1558882904194:ggplot(dat2, aes(y = value, x = age, col = trans)) + geom_point() + facet_wrap(~variable) + geom_smooth(method = "lm", se = F)
1558897249222:4/54
1558897748576:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558897750798:# ist das model konvergiert?
1558897750800:converge_ok(lm) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558897752752:is_singular(lm) #auch hier False
1558897755256:# gebe p-werte aus
1558897755257:pv <- p_value(lm, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558897757101:summary(pv) # scheint nicht zu funktioneiren
1558898012085:summary(lm)
1558898577477:# h1b:versuche das ganze zu plotten
1558898577479:pat <- ("T0_phq9|T1_phq9")
1558898579609:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1558898580831:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1558898580833:dat2 <- group_by(dat1, Patientencode) %>%
1558898580834:summarise(occur = n()) %>%
1558898580835:filter(occur == 2) %>%
1558898580837:left_join(., dat1, by = "Patientencode") # nur 46 personen haben beide zeitpunkte
1558898642679:dat2$variable <- parse_factor(dat2$variable, levels = c("T1_phq9", "T0_phq9"))
1558898644677:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558898648239:# ist das model konvergiert?
1558898648240:converge_ok(lm) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558898650256:is_singular(lm) #auch hier False
1558898668083:summary(lm)
1558898845862:lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558898876694:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1558898876695:dat2 <- group_by(dat1, Patientencode) %>%
1558898876697:summarise(occur = n()) %>%
1558898876698:filter(occur == 2) %>%
1558898876700:left_join(., dat1, by = "Patientencode") # nur 46 personen haben beide zeitpunkte
1558898880243:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558898883773:# ist das model konvergiert?
1558898883774:converge_ok(lm) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558898890506:summary(lm)
1558899414726:# gebe p-werte aus
1558899414727:pv <- p_value(lm, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558899418059:summary(pv) # scheint nicht zu funktioneiren
1558899492703:re_var(lm, adjusted = TRUE) # weitere varianzkomponenten für das ganze modell angepasst?=> interpretationen kann siehe unten
1558899507988:# r-quadrat (gut oder schlecht?)
1558899507989:r2(lm) # interpretation https://rdrr.io/cran/MuMIn/man/r.squaredGLMM.html
1558899710993:# r-quadrat (gut oder schlecht?)
1558899710995:r2(lm) # interpretation https://rdrr.io/cran/MuMIn/man/r.squaredGLMM.html
1558901033924:re_var(lm, adjusted = TRUE) # weitere varianzkomponenten für das ganze modell angepasst?=> interpretationen kann siehe unten
1558901195421:# berechne icc, von einem bestehenden modell => ist anders als ICC1!!
1558901195422:icc(lm, adjusted = T) # conditionelles modell!
1558901374001:lm1 <- lme(value ~ variable * trans * condit + sex + educ + age, random = list( condit  = ~ variable,
1558901374003:Patientencode = ~ variable), data=dat2) # das scheint zu funktionieren => gründe, aber seh ähnliche werte zu oben!!
1558901382943:summary(lm1)
1558901447877:dat2$variable <- parse_factor(dat2$variable, levels = c("T1_phq9", "T0_phq9"))
1558901450212:lm1 <- lme(value ~ variable * trans * condit + sex + educ + age, random = list( condit  = ~ variable,
1558901450215:Patientencode = ~ variable), data=dat2) # das scheint zu funktionieren => gründe, aber seh ähnliche werte zu oben!!
1558901457298:summary(lm1)
1558901741931:icc(lm1, adjusted = T)
1558901760488:r2(lm1)
1558901885197:install.packages("MuMin")
1558901890916:install.packages("MuMIn")
1558901916165:install.packages("MuMIn", dependencies = T)
1558902153167:install.packages("MuMIn")
1558902192628:install.packages("MuMIn", repos = http://cran.rstudio.com/)
1558902205198:install.packages("MuMIn", repos = "http://cran.rstudio.com/")
1558902922573:ggplot(dat2, aes(y = value, x = age, col = trans)) + geom_point() + facet_wrap(~variable) + geom_smooth(method = "lm", se = F)
1558902950373:p1 <- ggplot(data_wide, aes(y = T0_phq9 , x = trans)) +
1558902950375:geom_boxplot() +
1558902950376:scale_y_continuous(limits = c(0,20))
1558902959792:pat <- ("T0_phq9|T1_phq9")
1558902959794:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1558902959798:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1558902959799:dat2 <- group_by(dat1, Patientencode) %>%
1558902959801:summarise(occur = n()) %>%
1558902959802:filter(occur == 2) %>%
1558902959803:left_join(., dat1, by = "Patientencode") # nur 46 personen
1558902966537:# age und phq9
1558902966539:ggplot(dat2, aes(y = value, x = age, col = trans)) + geom_point() + facet_wrap(~variable) + geom_smooth(method = "lm", se = F)
1558902973633:# age und phq9
1558902973635:ggplot(dat2, aes(y = value, x = age, col = trans)) + geom_point() + facet_wrap(~variable) + geom_smooth(method = "lm", se = F) +
1558902973636:mytheme
1558903087921:# age und phq9
1558903087922:ggplot(dat2, aes(y = value, x = age, col = trans)) + geom_point() + facet_wrap(~variable) + geom_smooth(method = "lm", se = F) +
1558903087924:xlab("Alter") +
1558903087925:ylab("Summenscore PHQ9") +
1558903087927:guides(col = guide_legend("Überweisungsquelle")) +
1558903087928:mytheme +
1558903087930:ggsave("plots/age_trans_190516.pdf",
1558903087931:width = 15,
1558903087933:height = 12,
1558903087934:device = cairo_pdf)
1558903464216:# age und phq9
1558903464218:ggplot(dat2, aes(y = value, x = age, col = trans)) + geom_point() + facet_wrap(~variable) + geom_smooth(method = "lm", se = F) +
1558903464219:scale_x_continuous(limits = c(min(age), max(age)))
1558903473190:# age und phq9
1558903473191:ggplot(dat2, aes(y = value, x = age, col = trans)) + geom_point() + facet_wrap(~variable) + geom_smooth(method = "lm", se = F) +
1558903473194:scale_x_continuous(limits = c(min(.$age), max(age)))
1558903484299:# age und phq9
1558903484300:ggplot(dat2, aes(y = value, x = age, col = trans)) + geom_point() + facet_wrap(~variable) + geom_smooth(method = "lm", se = F) +
1558903484302:scale_x_continuous(limits = c(min(dat2$age), max(dat2$age)))
1558903498015:# age und phq9
1558903498017:ggplot(dat2, aes(y = value, x = age, col = trans)) + geom_point() + facet_wrap(~variable) + geom_smooth(method = "lm", se = F) +
1558903498018:scale_x_continuous(breaks = c(min(dat2$age), max(dat2$age)))
1558903517137:# age und phq9
1558903517139:ggplot(dat2, aes(y = value, x = age, col = trans)) + geom_point() + facet_wrap(~variable) + geom_smooth(method = "lm", se = F) +
1558903517141:scale_x_continuous(breaks = seq(min(dat2$age), max(dat2$age)), 20)
1558903553017:# age und phq9
1558903553019:ggplot(dat2, aes(y = value, x = age, col = trans)) + geom_point() + facet_wrap(~variable) + geom_smooth(method = "lm", se = F) +
1558903553020:scale_x_continuous(breaks = seq(min(dat2$age), max(dat2$age)), 4)
1558903560773:# age und phq9
1558903560774:ggplot(dat2, aes(y = value, x = age, col = trans)) + geom_point() + facet_wrap(~variable) + geom_smooth(method = "lm", se = F) +
1558903560776:scale_x_continuous(breaks = seq(min(dat2$age), max(dat2$age)))
1558903584281:# age und phq9
1558903584282:ggplot(dat2, aes(y = value, x = age, col = trans)) + geom_point() + facet_wrap(~variable) + geom_smooth(method = "lm", se = F) +
1558903584284:scale_x_continuous(breaks = seq(24, 84,20))
1558903592130:# age und phq9
1558903592131:ggplot(dat2, aes(y = value, x = age, col = trans)) + geom_point() + facet_wrap(~variable) + geom_smooth(method = "lm", se = F) +
1558903592134:scale_x_continuous(breaks = seq(24, 84,15))
1558903604012:# age und phq9
1558903604014:ggplot(dat2, aes(y = value, x = age, col = trans)) + geom_point() + facet_wrap(~variable) + geom_smooth(method = "lm", se = F) +
1558903604015:scale_x_continuous(breaks = seq(24, 84,15)) +
1558903604016:xlab("Alter") +
1558903604018:ylab("Summenscore PHQ9") +
1558903604019:guides(col = guide_legend("Überweisungsquelle")) +
1558903604021:mytheme +
1558903604022:ggsave("plots/age_trans_190516.pdf",
1558903604024:width = 15,
1558903604025:height = 12,
1558903604026:device = cairo_pdf)
1558903697536:#daten aufbereiten
1558903697537:dat <- data_wide %>%
1558903697539:# mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1558903697540:#        moder_ho = (T0_phq9 - T1_phq9) * ho,
1558903697542:#        moder_zw = (T0_phq9 - T1_phq9) * zw,
1558903697544:#        moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1558903697545:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1558903697546:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1558903697548:drop_na(value)
1558903700173:#daten aufbereiten
1558903700174:dat <- data_wide %>%
1558903700176:# mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1558903700177:#        moder_ho = (T0_phq9 - T1_phq9) * ho,
1558903700178:#        moder_zw = (T0_phq9 - T1_phq9) * zw,
1558903700180:#        moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1558903700181:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1558903700182:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1558903700184:drop_na(value)
1558903704158:# check again
1558903704165:dat2 <- group_by(dat, Patientencode) %>%
1558903704166:summarise(occur = n()) %>%
1558903704167:filter(occur == 2) %>%
1558903704169:left_join(., dat, by = "Patientencode") # 46 personen
1558903827086:# grosse probleme das passende modell zu finden
1558903827089:# literatur: http://afhayes.com/public/spsp2016.pdf
1558903827092:#daten aufbereiten
1558903827093:dat <- data_wide %>%
1558903827095:# mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1558903827096:#        moder_ho = (T0_phq9 - T1_phq9) * ho,
1558903827098:#        moder_zw = (T0_phq9 - T1_phq9) * zw,
1558903827099:#        moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1558903827100:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1558903827102:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1558903827104:drop_na(value)
1558903827112:# check again
1558903827113:dat2 <- group_by(dat, Patientencode) %>%
1558903827115:summarise(occur = n()) %>%
1558903827119:filter(occur == 2) %>%
1558903827120:left_join(., dat, by = "Patientencode") # 46 personen
1558903827126:dat2$ho2 <- ifelse(dat2$ho > median(dat2$ho), "grosse Hoffnung", "kleine Hoffnung")
1558903827129:# second option: glmm
1558903827131:# eventuel motivation so umformulieren dass wie eine zeit und gruppenvariable berücksichtigen kann im sinne einer 3ten ebene
1558903827135:#########
1558903827137:# modell ld
1558903827139:########
1558903827141:# icc: unconditional modell
1558903827143:av <- aov(value ~ Patientencode + trans, dat2) # keinen Unterschied zum obigen ICC, wieso??
1558903827147:library(multilevel)
1558903827190:ICC1(av)
1558903827194:# model
1558903827195:lm1 <- lme4::lmer(value ~ variable * trans + ld +
1558903827196:(variable | trans:Patientencode), # +
1558903827198:#(variable | trans),
1558903827199:data=dat2, REML = TRUE, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558903827589:# ist das model konvergiert?
1558903827591:converge_ok(lm1) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558903827594:is_singular(lm1) #auch hier False
1558903827597:# gebe p-werte aus
1558903827598:pv <- p_value(lm1, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558903827612:summary(pv) # scheint nicht zu funktioneiren
1558903827617:# nehme residual varianz
1558903827618:get_re_var(lm1, "sigma_2")
1558903827658:# alle random effekte
1558903827659:re_var(lm1) # negative covariancen und correlation http://www.bristol.ac.uk/cmm/learning/videos/random-slopes.html#covar
1558903827672:re_var(lm1, adjusted = TRUE) # weitere varianzkomponenten für das ganze modell angepasst?=> interpretationen kann siehe unten
1558903827686:summary(lm1)
1558903827702:#verständnis interpretation:
1558903827704:# random effects intercept: heisst zwischen-Gruppen/subjects Varianz (hier 7.867)
1558903827705:# random effects residual: heisst inner-Gruppen/subjects Varianz (hier 8.863)
1558903827709:#inhaltliche interpretation:
1558903827710:# fixed effects intercept: mittlere phc_9 summenscore beträgt 11.42 (beta0)
1558903827712:# Der phq verkleinert sich bei t1 im Mittel um -5 Summenpunkte (beta1)
1558903827713:# Die Varianz der mittleren Abweichung einer Person von dem mittleren phq aller Personen beträgt 7.995 Summenpunkte
1558903827716:# Die Varianz der Residuen beträgt 9.858 Summenpunkte
1558903827718:# r-quadrat (gut oder schlecht?)
1558903827720:r2(lm1) # interpretation https://rdrr.io/cran/MuMIn/man/r.squaredGLMM.html
1558903827736:# berechne icc, von einem bestehenden modell => ist anders als ICC1!!
1558903827738:icc(lm1, adjusted = T) # conditionelles modell!
1558903827751:# zur überprüfung mit nlme
1558903827753:lm1 <- lme(value ~ variable * trans * ld, random = list(trans  = ~ variable,
1558903827754:Patientencode = ~ variable), data=dat2)
1558903827831:summary(lm1) # ähnliche werte zu oben mit lme4 methode
1558903827843:# modell ho-----
1558903827847:lm2 <- lme4::lmer(value ~ variable * trans * ho2 +
1558903827849:(variable | trans:Patientencode), # +
1558903827850:#(variable | trans),
1558903827852:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558903828199:# ist das model konvergiert?
1558903828201:converge_ok(lm2) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558903828204:is_singular(lm2) #auch hier False
1558903828207:# gebe p-werte aus
1558903828209:pv <- p_value(lm2, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558903828224:summary(pv) # scheint nicht zu funktioneiren
1558903828230:# nehme residual varianz
1558903828231:get_re_var(lm2, "sigma_2")
1558903828243:# alle random effekte
1558903828245:re_var(lm2) # negative covariancen und correlation http://www.bristol.ac.uk/cmm/learning/videos/random-slopes.html#covar
1558903828284:re_var(lm1, adjusted = TRUE) # weitere varianzkomponenten für das ganze modell angepasst?=> interpretationen kann siehe unten
1558903828293:summary(lm2)
1558903828313:# r-quadrat (gut oder schlecht?)
1558903828315:r2(lm2) # interpretation https://rdrr.io/cran/MuMIn/man/r.squaredGLMM.html
1558903828331:# berechne icc, von einem bestehenden modell => ist anders als ICC1!!
1558903828332:icc(lm2, adjusted = T) # conditionelles modell!
1558903828347:# ho mit lme
1558903828349:lm2 <- lme(value ~ variable * trans * ho, random = list(trans  = ~ variable,
1558903828350:Patientencode = ~ variable), data=dat2)
1558903828428:summary(lm2)
1558903828443:##########
1558903828444:# modell mit zw
1558903828445:##########
1558903828448:lm3 <- lme4::lmer(value ~ variable * trans * zw +
1558903828449:(variable | trans:Patientencode), # +
1558903828451:#(variable | trans),
1558903828452:data=dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558903828501:# ist das model konvergiert?
1558903828503:converge_ok(lm3) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558903828506:is_singular(lm3) #auch hier False
1558903828510:# gebe p-werte aus
1558903828511:pv <- p_value(lm3, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558903828536:summary(pv) # scheint nicht zu funktioneiren
1558903828550:# nehme residual varianz
1558903828551:get_re_var(lm3, "sigma_2")
1558903828564:# alle random effekte
1558903828565:re_var(lm3) # negative covariancen und correlation http://www.bristol.ac.uk/cmm/learning/videos/random-slopes.html#covar
1558903828578:re_var(lm3, adjusted = TRUE) # weitere varianzkomponenten für das ganze modell angepasst?=> interpretationen kann siehe unten
1558903828594:# r-quadrat (gut oder schlecht?)
1558903828595:r2(lm3) # interpretation https://rdrr.io/cran/MuMIn/man/r.squaredGLMM.html
1558903828612:# berechne icc, von einem bestehenden modell => ist anders als ICC1!!
1558903828613:icc(lm3, adjusted = T) # conditionelles modell!
1558903828630:# zeige modell
1558903828632:summary(lm3)
1558903828653:# zw mit lme
1558903828654:lm3 <- lme(value ~ variable * trans * zw, random = list(trans  = ~ variable,
1558903828656:Patientencode = ~ variable), data=dat2)
1558903828736:summary(lm3)
1558903828748:######
1558903828754:# modell vh
1558903828757:#######
1558903828760:lm4 <- lme4::lmer(value ~ variable * trans * vh +
1558903828762:(variable | trans:Patientencode), # +
1558903828763:#(variable | trans),
1558903828764:data=dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558903828989:# ist das model konvergiert?
1558903828990:converge_ok(lm4) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558903828994:is_singular(lm4) #auch hier False
1558903828998:# gebe p-werte aus
1558903828999:pv <- p_value(lm4, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558903829015:summary(pv) # scheint nicht zu funktioneiren
1558903829021:# nehme residual varianz
1558903829022:get_re_var(lm4, "sigma_2")
1558903829035:# alle random effekte
1558903829036:re_var(lm4) # negative covariancen und correlation http://www.bristol.ac.uk/cmm/learning/videos/random-slopes.html#covar
1558903829051:re_var(lm4, adjusted = TRUE) # weitere varianzkomponenten für das ganze modell angepasst?=> interpretationen kann siehe unten
1558903829066:# r-quadrat (gut oder schlecht?)
1558903829067:r2(lm4) # interpretation https://rdrr.io/cran/MuMIn/man/r.squaredGLMM.html
1558903829084:# berechne icc, von einem bestehenden modell => ist anders als ICC1!!
1558903829086:icc(lm4, adjusted = T) # conditionelles modell!
1558903829103:# zeige modell
1558903829104:summary(lm4)
1558903829124:# vh mit lme
1558903829125:lm4 <- lme(value ~ variable * trans * vh, random = list(trans  = ~ variable,
1558903829127:Patientencode = ~ variable), data=dat2)
1558903829206:summary(lm4)
1558903829222:# versuche zu plotten
1558903829225:# modelfit
1558903829226:dat2$fit <- predict(lm2)
1558903829230:ggplot(dat2,aes(variable, value, group = Patientencode, col = trans)) +
1558903829232:# facet_grid(~variable) +
1558903829233:# geom_line(aes(y=fit, lty=Patientencode), size=0.8) +
1558903829235:geom_point() +
1558903829236:geom_line() +
1558903829238:geom_hline(yintercept=mean(dat2$ho), linetype="dashed") # mittwelwert hoffnung
1558903829529:# plot hoffnung => SR höhere hoffnung als PR (knapp nicht signifikant. fisher.test(dat2$ho, dat2$trans))
1558903829530:ggplot(dat2, aes(trans, ho, col = trans)) +
1558903829532:geom_point() +
1558903829533:geom_line()
1558903829858:# plot pqh9 und zeit
1558903829859:ggplot(dat2, aes(y = value, x = variable, col = trans)) +
1558903829861:geom_point()
1558903830140:# model depreverlauf und überweisungsquelle
1558903830145:lm <- lmer(value ~ variable * trans + (variable | trans:Patientencode), data = dat2, REML = TRUE, control = lmerControl(check.nobs.vs.nRE = "ignore"))
1558903830175:summary(lm)
1558903830195:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle------------
1558903830196:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558903830198:geom_point(size=1, alpha=.7, position = "jitter") +
1558903830199:geom_smooth(se = F) +#formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558903830201:theme_minimal() +
1558903830202:scale_y_continuous(limits = c(0,25)) +
1558903830204:scale_x_continuous(limits = c(1.5,5)) +
1558903830205:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1558903830531:ggplot(dat2, aes(x=variable, y=value)) +
1558903830532:geom_point(size=2) +
1558903830534:geom_point(aes(y = ho, x = variable)) +
1558903830535:geom_line(aes(y=predict(lm2), group=Patientencode, size = "Patientencode"), size = 1)
1558903830730:# plotte phq9 und hoffnung mit trans-----
1558903830733:ggplot(data_wide, aes(x = ho, y = T0_phq9, color = trans)) + geom_point() +
1558903830734:geom_smooth(method = "lm",se = F) +
1558903830736:scale_y_continuous(limits = c(0,25))
1558903843332:lm2 <- lme4::lmer(value ~ variable * trans * ho2 +
1558903843334:(variable | trans:Patientencode), # +
1558903843335:#(variable | trans),
1558903843337:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558903848696:# ist das model konvergiert?
1558903848697:converge_ok(lm2) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558903852964:# gebe p-werte aus
1558903852965:pv <- p_value(lm2, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558903857691:summary(pv) # scheint nicht zu funktioneiren
1558903894561:dat2 <- group_by(dat, Patientencode) %>%
1558903894562:summarise(occur = n()) %>%
1558903894564:filter(occur == 2) %>%
1558903894565:left_join(., dat, by = "Patientencode")
1558904037977:lm2 <- lme4::lmer(value ~ variable * trans * ho2 +
1558904037978:(variable | trans:Patientencode), # +
1558904037980:#(variable | trans),
1558904037981:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558904049185:lm2 <- lme4::lmer(value ~ variable * trans * ho2 +
1558904049187:(variable | trans:Patientencode), # +
1558904049188:#(variable | trans),
1558904049190:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558904060916:lm2 <- lme4::lmer(value ~ variable * trans * ho +
1558904060917:(variable | trans:Patientencode), # +
1558904060919:#(variable | trans),
1558904060920:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558904068625:# gebe p-werte aus
1558904068626:pv <- p_value(lm2, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558904072150:summary(pv) # scheint nicht zu funktioneiren
1558904222389:summary(lm2)
1558904268590:lm2 <- lme4::lmer(value ~ variable * trans * ho2 +
1558904268591:(variable | trans:Patientencode), # +
1558904268593:#(variable | trans),
1558904268594:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558904276802:dat2$ho2 <- ifelse(dat2$ho > median(dat2$ho), "grosse Hoffnung", "kleine Hoffnung")
1558904282016:lm2 <- lme4::lmer(value ~ variable * trans * ho2 +
1558904282018:(variable | trans:Patientencode), # +
1558904282019:#(variable | trans),
1558904282021:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558904288506:summary(lm2)
1558904402608:# ist das model konvergiert?
1558904402610:converge_ok(lm2) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558904404125:is_singular(lm2) #auch hier False
1558904432840:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle------------
1558904432842:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558904432843:geom_point(size=1, alpha=.7, position = "jitter") +
1558904432845:geom_smooth(se = F) +#formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558904432846:theme_minimal() +
1558904432848:scale_y_continuous(limits = c(0,25)) +
1558904432850:scale_x_continuous(limits = c(1.5,5)) +
1558904432852:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1558904435763:ggplot(dat2, aes(x=variable, y=value)) +
1558904435764:geom_point(size=2) +
1558904435766:geom_point(aes(y = ho, x = variable)) +
1558904435768:geom_line(aes(y=predict(lm2), group=Patientencode, size = "Patientencode"), size = 1)
1558904726883:# ho mit lme
1558904726884:lm2
1558904730424:# ho mit lme
1558904730425:lm2<- lme(value ~ variable * trans * ho, random = list(trans  = ~ variable,
1558904730427:Patientencode = ~ variable), data=dat2)
1558904732080:summary(lm2)
1558905111099:ggplot(dat2, aes(x=variable, y=value)) +
1558905111101:geom_point(size=2) +
1558905111102:geom_point(aes(y = ho, x = variable)) +
1558905111104:geom_line(aes(y=predict(lm2), group=Patientencode, size = "Patientencode"), size = 1)
1558905118109:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905118112:geom_point(size=1, alpha=.7, position = "jitter")
1558905135467:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905135471:geom_point(size=1, alpha=.7, position = "jitter") +
1558905135474:geom_smooth(se = F)
1558905152689:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle------------
1558905152691:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905152693:geom_point(size=1, alpha=.7, position = "jitter") +
1558905152694:geom_smooth(se = F) +#formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558905152695:theme_minimal() +
1558905152698:scale_y_continuous(limits = c(0,25)) +
1558905152700:scale_x_continuous(limits = c(1.5,5)) +
1558905152702:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1558905167640:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905167642:geom_point(size=1, alpha=.7, position = "jitter") +
1558905167643:geom_smooth(se = F) +#formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558905167645:# theme_minimal() +
1558905167646:scale_y_continuous(limits = c(0,25)) +
1558905167648:scale_x_continuous(limits = c(1.5,5))
1558905177359:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle------------
1558905177361:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905177363:geom_point(size=1, alpha=.7, position = "jitter") +
1558905177364:geom_smooth(se = F) +#formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558905177366:# theme_minimal() +
1558905177367:scale_y_continuous(limits = c(0,25)) +
1558905177369:# scale_x_continuous(limits = c(1.5,5)) +
1558905177371:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1558905187678:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle------------
1558905187679:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905187681:geom_point(size=1, position = "jitter") +
1558905187683:geom_smooth(se = F) +#formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558905187684:# theme_minimal() +
1558905187686:scale_y_continuous(limits = c(0,25)) +
1558905187688:# scale_x_continuous(limits = c(1.5,5)) +
1558905187690:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1558905225176:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle------------
1558905225177:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905225180:geom_point(size=1, position = "jitter") +
1558905225181:geom_smooth(formula = y = x * trans,se = F) +#formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558905225182:# theme_minimal() +
1558905225184:scale_y_continuous(limits = c(0,25)) +
1558905225185:# scale_x_continuous(limits = c(1.5,5)) +
1558905225187:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1558905230935:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle------------
1558905230936:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905230939:geom_point(size=1, position = "jitter") +
1558905230942:geom_smooth(formula = y = x * trans,se = F) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558905239570:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle------------
1558905239572:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905239574:geom_point(size=1, position = "jitter") +
1558905239575:geom_smooth(formula = y ~ x * trans,se = F) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558905258217:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle------------
1558905258219:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905258221:geom_point(size=1, position = "jitter") +
1558905258223:geom_smooth(formula = formula(lm2),se = F) #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558905272041:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle------------
1558905272043:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905272045:geom_point(size=1, position = "jitter") +
1558905272046:geom_smooth() #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558905281568:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle------------
1558905281572:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905281574:geom_point(size=1, position = "jitter") +
1558905281577:geom_line() #formula = lm, se=F, size=1.5, linetype=1, alpha=.7)+
1558905340101:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle------------
1558905340103:pl <- dat2 %>%
1558905340105:group_by(variable, trans, condit) %>%
1558905340106:summarise(mean_t = mean(value))
1558905361492:pl
1558905374089:# # plotte ergebnis zwischen hoffnung t1 und t0 zwischen überweisungsquelle------------
1558905374092:pl <- dat2 %>%
1558905374094:group_by(variable, trans) %>%
1558905374095:summarise(mean_t = mean(value))
1558905377648:pl
1558905402146:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905402148:geom_point(size=1, position = "jitter") +
1558905402149:geom_line(pl, aes(y = mean_t, x = variable))
1558905407879:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905407882:geom_point(size=1, position = "jitter") +
1558905407884:geom_line(data = pl, aes(y = mean_t, x = variable))
1558905423029:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905423033:geom_point(size=1, position = "jitter") +
1558905423035:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans))
1558905454193:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905454195:geom_point(size=3,alpha = .7, position = "jitter") +
1558905454196:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2)
1558905463133:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905463136:geom_point(size=1,alpha = .7, position = "jitter") +
1558905463139:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2)
1558905500104:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905500106:geom_point(size=1,alpha = .7, position = "jitter") +
1558905500107:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2) +
1558905500110:geom_hline(yintercept = mean(dat2$ho))
1558905526313:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905526315:geom_point(size=1,alpha = .7, position = "jitter") +
1558905526316:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2) +
1558905526317:geom_hline(yintercept = mean(dat2$ho), size = 2)
1558905540411:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905540414:geom_point(size=1,alpha = .7, position = "jitter") +
1558905540415:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2) +
1558905540416:geom_hline(yintercept = mean(dat2$ho), size = 1.3, color = "grey90")
1558905562465:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905562467:geom_point(size=1,alpha = .7, position = "jitter") +
1558905562468:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2) +
1558905562470:geom_hline(yintercept = mean(dat2$ho), size = 1.3, color = "grey90") +
1558905562471:scale_y_continuous(limits = c(0,25)) +
1558905562473:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1558905574799:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905574800:geom_point(size=1, position = "jitter") +
1558905574803:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2) +
1558905574805:geom_hline(yintercept = mean(dat2$ho), size = 1.3, color = "grey90") +
1558905574807:scale_y_continuous(limits = c(0,25)) +
1558905574808:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink"))
1558905583839:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905583841:geom_point(size=1, position = "jitter") +
1558905583842:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2) +
1558905583843:geom_hline(yintercept = mean(dat2$ho), size = 1.3, color = "grey90") +
1558905583845:scale_y_continuous(limits = c(0,25)) +
1558905583847:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink")) +
1558905583848:mytheme
1558905627018:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905627020:geom_point(size=1, position = "jitter") +
1558905627021:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2) +
1558905627023:geom_hline(yintercept = mean(dat2$ho), size = 1.3, color = "grey90") +
1558905627024:scale_y_continuous(limits = c(0,25)) +
1558905627026:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS")) +
1558905627029:mytheme
1558905631294:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905631300:geom_point(size=1, position = "jitter") +
1558905631305:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2) +
1558905631310:geom_hline(yintercept = mean(dat2$ho), size = 1.3, color = "grey90") +
1558905631315:scale_y_continuous(limits = c(0,25)) +
1558905631318:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS")) +
1558905631324:mytheme
1558905640279:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905640287:geom_point(size=1, position = "jitter") +
1558905640292:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2) +
1558905640297:geom_hline(yintercept = mean(dat2$ho), size = 1.3, color = "grey90") +
1558905640301:scale_y_continuous(limits = c(0,25)) +
1558905640305:scale_color_manual(name ="Überweisungsquelle", labels=c("PR", "RS"), values=c("lightblue", "pink")) +
1558905640307:mytheme
1558905654401:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905654405:geom_point(size=1, position = "jitter") +
1558905654407:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2) +
1558905654408:geom_hline(yintercept = mean(dat2$ho), size = 1.3, color = "grey90") +
1558905654411:scale_y_continuous(limits = c(0,25)) +
1558905654412:scale_color_manual(name ="Überweisungsquelle") + # , labels=c("PR", "RS"), values=c("lightblue", "pink")
1558905654414:mytheme
1558905659499:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905659501:geom_point(size=1, position = "jitter") +
1558905659502:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2) +
1558905659504:geom_hline(yintercept = mean(dat2$ho), size = 1.3, color = "grey90") +
1558905659505:scale_y_continuous(limits = c(0,25)) +
1558905659507:scale_color_manual(name ="Überweisungsquelle")
1558905685679:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905685681:geom_point(size=1, position = "jitter") +
1558905685685:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2) +
1558905685686:geom_hline(yintercept = mean(dat2$ho), size = 1.3, color = "grey90") +
1558905685688:scale_y_continuous(limits = c(0,25)) +
1558905685689:guides(col = guide_legend("Überweisungsquelle")) + # , labels=c("PR", "RS"), values=c("lightblue", "pink")
1558905685691:mytheme
1558905694426:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905694428:geom_point(size=1, position = "jitter") +
1558905694429:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2) +
1558905694431:geom_hline(yintercept = mean(dat2$ho), size = 1.3, color = "grey60") +
1558905694432:scale_y_continuous(limits = c(0,25)) +
1558905694435:guides(col = guide_legend("Überweisungsquelle")) + # , labels=c("PR", "RS"), values=c("lightblue", "pink")
1558905694437:mytheme
1558905737697:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905737698:geom_point(size=1, position = "jitter") +
1558905737700:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2) +
1558905737701:geom_hline(yintercept = mean(dat2$ho), size = 1.3, color = "grey60") +
1558905737703:xlab("Zeitpunkt") +
1558905737704:ylab("Summencore PHQ9")
1558905744294:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905744296:geom_point(size=1, position = "jitter") +
1558905744299:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2) +
1558905744300:geom_hline(yintercept = mean(dat2$ho), size = 1.3, color = "grey60") +
1558905744302:xlab("Zeitpunkt") +
1558905744306:ylab("Summencore PHQ9")
1558905756250:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905756252:geom_point(size=1, position = "jitter") +
1558905756253:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2) +
1558905756255:geom_hline(yintercept = mean(dat2$ho), size = 1.3, color = "grey60") +
1558905756256:xlab("Zeitpunkt") +
1558905756258:ylab("Summencore PHQ9") +
1558905756259:scale_y_continuous(limits = c(0,25)) +
1558905756260:guides(col = guide_legend("Überweisungsquelle")) + # , labels=c("PR", "RS"), values=c("lightblue", "pink")
1558905756262:mytheme
1558905831969:ggplot(data=dat2, aes(y=value, x= variable, col=as.factor(trans)))+
1558905831971:geom_point(size=1, position = "jitter") +
1558905831972:geom_line(data = pl, aes(y = mean_t, x = variable, group = trans), size = 2) +
1558905831974:geom_hline(yintercept = mean(dat2$ho), size = 1.3, color = "grey60") +
1558905831975:xlab("Zeitpunkt") +
1558905831976:ylab("Summencore PHQ9") +
1558905831978:scale_y_continuous(limits = c(0,25)) +
1558905831979:guides(col = guide_legend("Überweisungsquelle")) + # , labels=c("PR", "RS"), values=c("lightblue", "pink")
1558905831981:mytheme +
1558905831982:ggsave("plots/hoffnung_phq_190526.pdf", height = 12, width = 12, device = cairo_pdf)
1558983315720:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode) + (variable|condit), data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558983321803:# ist das model konvergiert?
1558983321805:converge_ok(lm) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558983323844:is_singular(lm) #auch hier False
1558983343060:# gebe p-werte aus
1558983343062:pv <- p_value(lm, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558983343696:summary(pv) # scheint nicht zu funktioneiren
1558983378051:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode) , data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558983380314:# gebe p-werte aus
1558983380315:pv <- p_value(lm, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558983381678:summary(pv) # scheint nicht zu funktioneiren
1558983412443:brms::brm(value ~ variable * trans * condit + (variable|condit:Patientencode), data = dat2)
1558983637418:#test with difference-------
1558983637420:melt(dat2)
1558983662485:#test with difference-------
1558983662487:gather(dat2)
1558983682461:#test with difference-------
1558983682463:spread(dat2)
1558983745708:#test with difference-------
1558983745710:dat3 <- filter(data_wide, Patientencode %in% dat2$Patientencode)
1558983798216:dat3$diff <- dat3$T0_phq9-dat3$T1_phq9
1558983809868:View(dat3)
1558983875004:ggplot(dat3, aes(y = diff, x = condit))
1558983883301:ggplot(dat3, aes(y = diff, x = condit)) + geom_point()
1558983906396:ggplot(dat3, aes(y = diff, x = trans)) + geom_point()
1558983965946:lmer(diff ~ trans * ho + (1|trans:Patientencode))
1558983971084:lmer(diff ~ trans * ho + (1|trans:Patientencode), data = dat3)
1558983976332:lmer(diff ~ trans * ho + (1|Patientencode), data = dat3)
1558983993050:av <- aov(diff ~ trans * ho + Error(Patientencode), data = dat3)
1558984004737:summary(av)
1558984012306:summary(av)
1558984026861:summary.lm(av)
1558984030510:summary(av)
1558984175256:av <- aov(diff ~ trans * ho + Error(trans/Patientencode), data = dat3)
1558984182355:av <- aov(diff ~ trans * ho + Error(Patientencode), data = dat3)
1558984185359:av
1558984202388:summary(av)
1558984219561:av <- aov(diff ~ trans * ld + Error(Patientencode), data = dat3)
1558984222979:summary(av)
1558984231785:av <- aov(diff ~ trans * zw + Error(Patientencode), data = dat3)
1558984235764:summary(av)
1558984248562:av <- aov(diff ~ trans * hd + Error(Patientencode), data = dat3)
1558984266649:av <- aov(diff ~ trans * vh + Error(Patientencode), data = dat3)
1558984269817:summary(av)
1558984280096:av <- aov(diff ~ trans * ho + Error(Patientencode), data = dat3)
1558984283452:summary(av)
1558984298203:TukeyHSD(av)
1558984438256:library(multcompView)
1558984447705:library(multcomp)
1558984454178:install.packages("multcomp")
1558984464670:install.packages("multcomp", dependencies = T)
1558984537458:TukeyHSD(av, "Material")
1558984641462:install.packages("emmeans")
1558984648633:install.packages("emmeans")
1558984662638:library(emmeans)
1558984715697:emm <- emmeans(av, ~ trans*ho)
1558984720525:emm <- emmeans(av, ~ trans)
1558984746379:pairs(emm)
1558984760827:av <- aov(diff ~ trans * ho2 + Error(Patientencode), data = dat3)
1558984800879:dat3$ho2 <- ifelse(dat2$ho > median(dat2$ho), "grosse Hoffnung", "kleine Hoffnung")
1558984809913:dat3$ho2 <- ifelse(dat3$ho > median(dat3$ho), "grosse Hoffnung", "kleine Hoffnung")
1558984816183:av <- aov(diff ~ trans * ho2 + Error(Patientencode), data = dat3)
1558984819594:#posthoc test
1558984819597:library(emmeans)
1558984825901:emm <- emmeans(av, ~ trans*ho2)
1558984829821:pairs(emm)
1558985083682:# erzeuge interactionsterm
1558985083684:dat3$inter <- dat3$T0_phq9*dat3$ho
1558985089116:av <- aov(diff ~ trans * inter + Error(Patientencode), data = dat3)
1558985096747:emm <- emmeans(av, ~ trans*inter)
1558985098193:pairs(emm)
1558985115126:summary(av)
1558985138749:View(dat3)
1558985197167:ggplot(dat3, aes(y = inter, x = trans)) + geom_point()
1558985202251:ggplot2(dat3, aes(y = inter, x = trans)) + geom_point()
1558985214023:library(ggplot2)
1558985216331:ggplot2(dat3, aes(y = inter, x = trans)) + geom_point()
1558985220437:ggplot(dat3, aes(y = inter, x = trans)) + geom_point()
1558985277306:ggplot(data_wide, aes(y = T0_phq9, x = ho, col = trans)) + geom_point()
1558985308725:ggplot(data_wide, aes(y = T0_phq9, x = ho, col = trans)) + geom_point() + geom_smooth(method = "av")
1558985317986:ggplot(data_wide, aes(y = T0_phq9, x = ho, col = trans)) + geom_point() + geom_smooth(method = "lm")
1558985342142:ggplot(data_wide, aes(y = T0_phq9, x = ho, col = trans)) + geom_point() + geom_smooth(method = "lm", se = F)
1558985419080:summary(av)
1558985495535:# Fisher tests
1558985495537:fisher.test(data_wide$trans, data_wide$sex) # n.s.
1558985520240:fisher.test(data_wide$trans, data_wide$age_group) # n.s
1558985529420:fisher.test(data_wide$trans, data_wide$educ) # signifikante unterschiede
1558985605977:chisq.test(data_wide$trans, data_wide$sex)$expected# n.s.
1558985613613:chisq.test(data_wide$trans, data_wide$sex)# n.s.
1558985671173:ggplot(dat3, aes(y = inter, x = trans)) + geom_point() + geom_smooth(method = "lm", se = F)
1558985746408:ggplot(dat3, aes(y = inter, x = T1_phq9, col= trans)) + geom_point() + geom_smooth(method = "lm", se = F)
1558985802043:ggplot(dat3, aes(y = T0_phq9, x = T1_phq9, col= trans)) + geom_point() + geom_smooth(method = "lm", se = F)
1558985862252:av2 <- aov(T1_phq9 ~ T0_phq9 * trans + Error(Patientencode), data = dat3)
1558985868337:summary(av2)
1558985909403:emm <- emmeans(av, ~ trans)
1558985910470:pairs(emm)
1558985926245:emm <- emmeans(av2, ~ trans)
1558985927530:pairs(emm)
1558985938742:emm <- emmeans(av2, ~ trans)
1558985945470:summary(av2)
1558985998791:ggplot(dat3, aes(x = T0_phq9, y = T1_phq9, col= trans)) + geom_point() + geom_smooth(method = "lm", se = F)
1558986141272:ggplot(dat3, aes(x = T1_phq9, y = T0_phq9, col= trans)) + geom_point() + geom_smooth(method = "lm", se = F)
1558986239432:dat3 <- filter(data_wide, Patientencode %in% dat2$Patientencode)
1558986239436:dat3$diff <- dat3$T0_phq9-dat3$T1_phq9
1558986248449:# erzeuge interactionsterm
1558986248451:dat3$inter <- dat3$T0_phq9*dat3$ho
1558986249208:av <- aov(diff ~ trans * inter + Error(Patientencode), data = dat3)
1558986257142:summary(av)
1558986310578:ggplot(dat3, aes(y = diff, x = inter, col= trans)) + geom_point() + geom_smooth(method = "lm", se = F)
1558986510251:ggplot(dat3, aes(y = diff, x = ho, col= trans)) + geom_point() + geom_smooth(method = "lm", se = F)
1558987614896:av <- aov(diff ~ trans * ho + Error(trans), data = dat3)
1558987621537:summary(av)
1558987637045:av <- aov(diff ~ trans * ho + Error(Patientencode), data = dat3)
1558987642067:summary(av)
1558987703104:ggplot(dat3, aes(y = diff, x = ho, col= trans)) + geom_point() + geom_smooth(method = "lm", se = F) +
1558987703105:mytheme
1558987750030:emm <- emmeans(av, ~ trans)
1558987751151:pairs(emm)
1558987757441:emm <- emmeans(av, ~ trans * ho)
1558987758800:pairs(emm)
1558987779583:emm <- emmeans(av, ~ trans * ho2)
1558987780661:pairs(emm)
1558988071033:av <- aov(diff ~ trans * ho2 + Error(Patientencode), data = dat3)
1558988073937:emm <- emmeans(av, ~ trans * ho2)
1558988075355:pairs(emm)
1558988081032:pairs(emm)
1558988324926:cor.test(dat3$diff, dat3$ho)
1558988339633:cor.test(dat3$diff, dat3$ho, method = "spearman")
1558988373821:cor.test(dat3$diff~dat3$ho+dat3$trans, method = "spearman")
1558988381498:cor.test(dat3$diff~dat3$trans, method = "spearman")
1558988391206:cor.test(dat3$diff,dat3$trans, method = "spearman")
1558989024427:av <- aov(T1_phq9 ~ T0_phq9 * ho2 + Error(Patientencode), data = dat3)
1558989032351:summary(av)
1558989058053:av <- aov(T1_phq9 ~ T0_phq9 * ho2 *trans + Error(Patientencode), data = dat3)
1558989059203:summary(av)
1558989079484:av <- aov(T1_phq9 ~ T0_phq9 * ho *trans + Error(Patientencode), data = dat3)
1558989080591:summary(av)
1558989091315:av <- aov(T1_phq9 ~ T0_phq9 * ho *trans + Error(Patientencode), data = dat3)
1558989095551:summary(av)
1558989303096:ggplot(dat3, aes(x = ho, y = T0_phq9, col = trasn)) + geom_point() + geom_smooth(method = "av")
1558989312787:ggplot(dat3, aes(x = ho, y = T0_phq9, col = trans)) + geom_point() + geom_smooth(method = "av")
1558989317799:ggplot(dat3, aes(x = ho, y = T0_phq9, col = trans)) + geom_point() + geom_smooth(method = "lm")
1558989379852:av <- aov(T1_phq9 ~ T0_phq9 * ho * trans + age + educ + sex Error(Patientencode), data = dat3)
1558989387593:av <- aov(T1_phq9 ~ T0_phq9 * ho * trans + age + educ + sex + Error(Patientencode), data = dat3)
1558989388911:summary(av)
1558991644506:boxplot(residuals(lm1) ~ dat2$Patientencode, xlab = "Patient", ylab = "Residuen")
1558991652116:boxplot(residuals(lm1) ~ dat2$Patientencode, xlab = "Patient", ylab = "Residuen")
1558991678191:pl <- lme4::ranef(lm1)$`condit:Patientencode`
1558991678194:boxplot(pl[[1]] ~ rownames(pl), xlab = "Patient", ylab = "Zufällige Abweichungen")
1558991689482:#1. Zufällige Abweichungen sind normalverteilt mit EW 0 und Varianz
1558991689484:pl <- lme4::ranef(lm1)$`condit:Patientencode`
1558991703538:lm1
1558991860750:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode) , data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558991878113:library(lme4)
1558991882587:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode) , data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558991886981:library(optimx)
1558991889531:library(sjstats)
1558991890797:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode) , data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1558991892965:# ist das model konvergiert?
1558991892967:converge_ok(lm) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558991894602:is_singular(lm) #auch hier False
1558991896647:# gebe p-werte aus
1558991896649:pv <- p_value(lm, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558991897761:summary(pv) # scheint nicht zu funktioneiren
1558992161014:summary(lm)
1558993283646:lm2 <- lme4::lmer(value ~ variable * trans * ho2 +
1558993283647:(variable | trans:Patientencode), # +
1558993283648:#(variable | trans),
1558993283650:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558993287936:# ist das model konvergiert?
1558993287938:converge_ok(lm2) # gemäss diesen funktionen ist das obige modell doch konvergiert
1558993292252:is_singular(lm2) #auch hier False
1558993294416:# gebe p-werte aus
1558993294420:pv <- p_value(lm2, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558993295751:summary(pv) # scheint nicht zu funktioneiren
1558993309165:summary(lm2)
1558993384316:lm2 <- lme4::lmer(value ~ variable * trans * ho +
1558993384320:(variable | trans:Patientencode), # +
1558993384326:#(variable | trans),
1558993384332:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558993390450:summary(lm2)
1558993418764:# ho mit lme
1558993418766:lm2<- lme(value ~ variable * trans * ho2, random = list(trans  = ~ variable,
1558993418767:Patientencode = ~ variable), data=dat2)
1558993420497:summary(lm2)
1558993435579:lm2 <- lme4::lmer(value ~ variable * trans * ho2 +
1558993435581:(variable | trans:Patientencode), # +
1558993435582:#(variable | trans),
1558993435584:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558993456349:summary(lm2)
1558993477458:# gebe p-werte aus
1558993477461:pv <- p_value(lm2, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1558993478555:summary(pv) # scheint nicht zu funktioneiren
1558993536297:ggplot(data_wide, aes(x = ho, y = T0_phq9, color = trans)) + geom_point() +
1558993536299:geom_smooth(method = "lm",se = F) +
1558993536300:scale_y_continuous(limits = c(0,25))
1558993565747:ggplot(data_wide, aes(x = ho, y = T0_phq9, color = trans)) + geom_point() +
1558993565748:geom_smooth(method = "lm",se = F) +
1558993565750:scale_y_continuous(limits = c(0,25))
1558993615165:ggplot(data_wide, aes(x = ho, y = T0_phq9, color = trans)) + geom_point() +
1558993615167:geom_smooth(method = "lm",se = F) +
1558993615168:scale_y_continuous(limits = c(0,25)) + mytheme +
1558993615171:xlab("Hoffnung") +
1558993615172:ylab("Summenscore PHQ9 t0")
1558993663017:ggsave("plots/phq9_ho_190527.pdf", height = 12, width = 12, device = cairo_pdf)
1558993692127:ggsave("plots/phq9_ho_190527.pdf", height = 8, width = 12, device = cairo_pdf)
1558993927454:aov(T0_phq9 ~ trans * ho, data = data_wide)
1558993941030:summary.lm(aov(T0_phq9 ~ trans * ho, data = data_wide))
1558994048939:#test with difference-------
1558994048940:# get data (only those with two timepoints)
1558994048941:dat3 <- filter(data_wide, Patientencode %in% dat2$Patientencode)
1558994053122:dat3$diff <- dat3$T0_phq9-dat3$T1_phq9 #(positiv bedeutet verbesserung, negativ verschlechterung)
1558994057739:av <- aov(T1_phq9 ~ T0_phq9 * ho * trans + age + educ + sex + Error(Patientencode), data = dat3)
1558994059022:summary(av)
1558994216189:lm2 <- lme4::lmer(value ~ variable * trans * ho2 +
1558994216191:(variable | trans:Patientencode), # +
1558994216192:#(variable | trans),
1558994216194:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1558994225207:summary(lm2)
1558994690064:av <- aov(T1_phq9 ~ T0_phq9 * ho * trans + age + educ + sex + Error(Patientencode), data = dat3)
1558994692234:summary(av)
1558994808989:aov(diff ~ T0_phq9 * ho * trans + Error(Patientencode), dat = dat3)
1558994822198:summary(aov(diff ~ T0_phq9 * ho * trans + Error(Patientencode), dat = dat3))
1559033973270:dat3 <- filter(data_wide, Patientencode %in% dat2$Patientencode)
1559033973275:dat3$diff <- dat3$T0_phq9-dat3$T1_phq9 #(positiv bedeutet verbesserung, negativ verschlechterung)
1559033973277:# neue variable hoffnung getrennt durch median
1559033973278:dat3$ho2 <- ifelse(dat3$ho > median(dat3$ho), "grosse Hoffnung", "kleine Hoffnung")
1559033995101:#daten aufbereiten
1559033995104:dat <- data_wide %>%
1559033995105:# mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1559033995108:#        moder_ho = (T0_phq9 - T1_phq9) * ho,
1559033995110:#        moder_zw = (T0_phq9 - T1_phq9) * zw,
1559033995111:#        moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1559033995112:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1559033995114:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1559033995115:drop_na(value)
1559034002458:library(reshape2)
1559034004591:#daten aufbereiten
1559034004592:dat <- data_wide %>%
1559034004594:# mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1559034004596:#        moder_ho = (T0_phq9 - T1_phq9) * ho,
1559034004597:#        moder_zw = (T0_phq9 - T1_phq9) * zw,
1559034004599:#        moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1559034004600:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1559034004606:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1559034004607:drop_na(value)
1559034010120:library(tidyverse)
1559034012929:#daten aufbereiten
1559034012930:dat <- data_wide %>%
1559034012932:# mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1559034012933:#        moder_ho = (T0_phq9 - T1_phq9) * ho,
1559034012934:#        moder_zw = (T0_phq9 - T1_phq9) * zw,
1559034012936:#        moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1559034012937:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1559034012938:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1559034012940:drop_na(value)
1559034014019:# check again
1559034014020:dat2 <- group_by(dat, Patientencode) %>%
1559034014022:summarise(occur = n()) %>%
1559034014023:filter(occur == 2) %>%
1559034014025:left_join(., dat, by = "Patientencode") # 46 personen
1559034021919:#test with difference-------
1559034021921:# get data (only those with two timepoints)
1559034021922:dat3 <- filter(data_wide, Patientencode %in% dat2$Patientencode)
1559034023013:# neue variable hoffnung getrennt durch median
1559034023014:dat3$ho2 <- ifelse(dat3$ho > median(dat3$ho), "grosse Hoffnung", "kleine Hoffnung")
1559034051214:dat <- data_wide %>%
1559034051215:# mutate(moder_ld = (T0_phq9 - T1_phq9)* ld,
1559034051217:#        moder_ho = (T0_phq9 - T1_phq9) * ho,
1559034051218:#        moder_zw = (T0_phq9 - T1_phq9) * zw,
1559034051220:#        moder_vh = (T0_phq9 - T1_phq9) * vh) %>%
1559034051221:melt(measure.vars = c("T0_phq9", "T1_phq9")) %>%
1559034051223:dplyr::select(-T1_phq15, -T0_phq15, -T0_gad, -T1_gad) %>%
1559034051224:drop_na(value)
1559034051231:# check again
1559034051232:dat2 <- group_by(dat, Patientencode) %>%
1559034051234:summarise(occur = n()) %>%
1559034051235:filter(occur == 2) %>%
1559034051237:left_join(., dat, by = "Patientencode") # 46 personen
1559034051286:dat2$ho2 <- ifelse(dat2$ho > median(dat2$ho), "grosse Hoffnung", "kleine Hoffnung")
1559034077954:aggregate(value ~ variable + trans + ho2, dat2, FUN = mean)
1559034115393:aggregate(T0_phq9 ~ trans + ho2, dat3, FUN = mean)
1559034178337:aggregate(ho2 ~ age + educ + sex, dat3, FUN = length)
1559034195726:aggregate(ho2 ~ age + educ + sex, dat3, FUN = psych::describe)
1559034202097:aggregate(ho2 ~ age + educ + sex, dat3, FUN = Hmisc::describe)
1559034241426:aggregate(ho2 ~ age, dat3, FUN = psych::describe)
1559034247163:aggregate(ho2 ~ age, dat3, FUN = mean)
1559034255184:aggregate(age ~ ho2, dat3, FUN = mean)
1559034265652:aggregate(age ~ ho2 + trans, dat3, FUN = mean)
1559034313483:aggregate(educ ~ ho2 + trans, dat3, FUN = mean)
1559034318283:aggregate(educ ~ ho2 + trans, dat3, FUN = length)
1559034358587:group_by(dat3, trans, ho2, educ) %>% add_tally()
1559034367450:group_by(dat3, trans, ho2, educ) %>% count()
1559034456284:aggregate(T1_phq9 ~ trans + ho2, dat3, FUN = mean)
1559034621109:lm2 <- lme4::lmer(value ~ variable * trans * ho2 +
1559034621110:(variable | trans:Patientencode), # +
1559034621112:#(variable | trans),
1559034621113:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1559034626341:summary(lm2)
1559034628558:# ist das model konvergiert?
1559034628559:converge_ok(lm2) # gemäss diesen funktionen ist das obige modell doch konvergiert
1559034630103:is_singular(lm2) #auch hier False
1559034661563:# gebe p-werte aus
1559034661565:pv <- p_value(lm2, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1559034664109:summary(pv) # scheint nicht zu funktioneiren
1559034942948:av <- aov(T1_phq9 ~ T0_phq9 * ho2 * trans + Error(Patientencode), data = dat3)
1559034944767:summary(av)
1559034963668:#posthoc test
1559034963670:library(emmeans)
1559034964608:emm <- emmeans(av, ~ trans * ho2)
1559034965768:pairs(emm)
1559035070601:av <- aov(T0_phq9 ~ T1_phq9 * ho2 * trans + Error(Patientencode), data = dat3)
1559035071272:summary(av)
1559035092282:av <- aov(T1_phq9 ~ T0_phq9 * ho2 * trans + Error(Patientencode), data = dat3)
1559035092704:summary(av)
1559035128682:av$Patientencode
1559035133978:attributes(av)
1559035324394:?mmc
1559035382670:summary(av)
1559035410301:av <- aov(value ~ variable * ho2 * trans + Error(Patientencode), data = dat2)
1559035411601:summary(av)
1559035446660:av <- aov(value ~ variable * ho2 * trans + Error(trans/Patientencode), data = dat2)
1559035455532:av <- aov(value ~ variable * ho2 * trans + Error(variable/Patientencode), data = dat2)
1559035456644:summary(av)
1559035485555:#posthoc test
1559035485557:library(emmeans)
1559035491443:emm <- emmeans(av, ~ variable * ho2)
1559035493197:pairs(emm)
1559035512087:emm <- emmeans(av, ~ variable * trans)
1559035512443:pairs(emm)
1559035517464:emm <- emmeans(av, ~ variable * trans)
1559035518227:pairs(emm)
1559035522494:av <- aov(value ~ variable * ho2 * trans + Error(variable/Patientencode), data = dat2)
1559035794681:summary(av)
1559035807984:summary(lm2)
1559035823666:summary(pv)
1559035927567:ggplot(dat3, aes(y = T0_phq9, x = ho2)) + geom_point(position = "jitter")
1559035936224:ggplot(dat3, aes(y = T0_phq9, x = ho2)) + geom_point(position = "jitter") + geom_sm
1559035943086:ggplot(dat3, aes(y = T0_phq9, x = ho2)) + geom_point(position = "jitter") + geom_smooth(method = lm)
1559035966448:ggplot(dat3, aes(y = T0_phq9, x = ho2, col = trans)) + geom_point(position = "jitter") + geom_smooth(method = lm)
1559035971958:ggplot(dat3, aes(y = T0_phq9, x = ho2, col = trans)) + geom_point(position = "jitter") + geom_smooth()
1559035979895:ggplot(dat3, aes(y = T0_phq9, x = ho2, col = trans)) + geom_point(position = "jitter") + geom_smooth(method = "lm")
1559036059068:ggplot(dat3, aes(y = T0_phq9, x = ho2, col = trans)) + geom_point(position = "jitter") + geom_smooth(method = "loess")
1559036070659:ggplot(dat3, aes(y = T0_phq9, x = ho2, col = trans, group = trans)) + geom_point(position = "jitter") + geom_smooth(method = "loess")
1559036079160:warning()
1559036083121:warnings()
1559036089771:ggplot(dat3, aes(y = T0_phq9, x = ho2, col = trans, group = trans)) + geom_point(position = "jitter") + geom_smooth(method = "loess")
1559036093105:warnings()
1559036114994:ggplot(dat3, aes(y = T0_phq9, x = ho2, col = trans, group = trans)) + geom_point(position = "jitter") + geom_smooth(method = "lm")
1559036120629:ggplot(dat3, aes(y = T0_phq9, x = ho2, col = trans, group = trans)) + geom_point(position = "jitter") + geom_smooth(method = "lm", se = F)
1559036278932:ggplot(dat3, aes(y = T1_phq9, x = ho2, col = trans, group = trans)) + geom_point(position = "jitter") + geom_smooth(method = "lm", se = F)
1559036307677:ggplot(dat3, aes(y = T1_phq9, x = ho2, col = trans, group = interaction(trans, ho2)) + geom_point(position = "jitter") + geom_smooth(method = "lm", se = F)
1559036316734:ggplot(dat3, aes(y = T1_phq9, x = ho2, col = trans, group = interaction(trans, ho2))) + geom_point(position = "jitter") + geom_smooth(method = "lm", se = F)
1559036323493:ggplot(dat3, aes(y = T1_phq9, x = ho2, col = trans, group = interaction(trans, ho2))) + geom_point(position = "jitter") + geom_smooth(method = "loess")
1559036346760:ggplot(dat3, aes(y = T1_phq9, x = ho2, col = trans, group = interaction(ho2, trans))) + geom_point(position = "jitter") + geom_smooth(method = "loess")
1559036362549:ggplot(dat3, aes(y = diff, x = ho2, col = trans, group = interaction(ho2, trans))) + geom_point(position = "jitter") + geom_smooth(method = "loess")
1559036371414:#test with difference-------
1559036371416:# get data (only those with two timepoints)
1559036371417:dat3 <- filter(data_wide, Patientencode %in% dat2$Patientencode)
1559036372301:dat3$diff <- dat3$T0_phq9-dat3$T1_phq9 #(positiv bedeutet verbesserung, negativ verschlechterung)
1559036377862:ggplot(dat3, aes(y = diff, x = ho2, col = trans, group = interaction(ho2, trans))) + geom_point(position = "jitter") + geom_smooth(method = "loess")
1559036384129:dat3 <- filter(data_wide, Patientencode %in% dat2$Patientencode)
1559036384132:dat3$diff <- dat3$T0_phq9-dat3$T1_phq9 #(positiv bedeutet verbesserung, negativ verschlechterung)
1559036384134:# neue variable hoffnung getrennt durch median
1559036384135:dat3$ho2 <- ifelse(dat3$ho > median(dat3$ho), "grosse Hoffnung", "kleine Hoffnung")
1559036388158:ggplot(dat3, aes(y = diff, x = ho2, col = trans, group = interaction(ho2, trans))) + geom_point(position = "jitter") + geom_smooth(method = "loess")
1559036413706:ggplot(dat3, aes(y = diff, x = ho2, col = interaction(ho2, trans))) + geom_point(position = "jitter") + geom_smooth(method = "loess")
1559036478783:ggplot(dat3, aes(y = diff, x = ho2, col = interaction(ho2, trans))) + geom_point(position = "jitter") + geom_smooth(m)
1559036480684:ggplot(dat3, aes(y = diff, x = ho2, col = interaction(ho2, trans))) + geom_point(position = "jitter") + geom_smooth()
1559036490526:ggplot(dat3, aes(y = diff, x = ho2, col = interaction(ho2, trans))) + geom_point(position = "jitter") + geom_smooth(formula = "av")
1559036505692:ggplot(dat3, aes(y = diff, x = ho2, col = interaction(ho2, trans))) + geom_point(position = "jitter") + geom_smooth(formula = y ~ x * trans)
1559036516203:plot(av)
1559036520683:plot(av, trans)
1559036528060:plot(av$`(Intercept)`)
1559036534903:plot(av$`(Intercept)`, av$variable)
1559036540042:plot(av$variable)
1559036547126:dat3 <- filter(data_wide, Patientencode %in% dat2$Patientencode)
1559036547128:dat3$diff <- dat3$T0_phq9-dat3$T1_phq9 #(positiv bedeutet verbesserung, negativ verschlechterung)
1559036547130:# neue variable hoffnung getrennt durch median
1559036547131:dat3$ho2 <- ifelse(dat3$ho > median(dat3$ho), "grosse Hoffnung", "kleine Hoffnung")
1559036550196:av$variable
1559036558716:av$`variable:Patientencode`
1559036563700:av$`(Intercept)`
1559036657983:ggplot(dat3, aes(y = diff, x = ho2, col = interaction(ho2, trans))) + geom_boxplot()
1559036693576:ggplot(dat3, aes(y = diff, x = ho2, col = interaction(ho2, trans))) + geom_boxplot() + mytheme
1559036741532:ggplot(dat3, aes(y = diff, x = ho2, col = interaction(ho2, trans))) + geom_boxplot() + xlab(Hoffnung) + ylab(Differenz von t0 zu t1 im PHQ9) + guides(col = guide_legend("")) + mytheme
1559036758690:ggplot(dat3, aes(y = diff, x = ho2, col = interaction(ho2, trans))) + geom_boxplot() + xlab("Hoffnung") + ylab("Differenz von t0 zu t1 im PHQ9") + guides(col = guide_legend("")) + mytheme
1559036806346:ggplot(dat3, aes(y = diff, x = ho2, col = interaction(ho2, trans))) + geom_boxplot() + xlab("Hoffnung") + ylab("Differenz von t0 zu t1 im PHQ9") + guides(col = guide_legend("")) + mytheme + ggsave("plots/hoffnung_trans_190528.pdf", width = )
1559036816816:ggplot(dat3, aes(y = diff, x = ho2, col = interaction(ho2, trans))) + geom_boxplot() + xlab("Hoffnung") + ylab("Differenz von t0 zu t1 im PHQ9") + guides(col = guide_legend("")) + mytheme + ggsave("plots/hoffnung_trans_190528.pdf", width = 12, height = 12, device = cairo_pdf)
1559036879726:pat <- ("T0_phq9|T1_phq9")
1559036879727:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1559036879731:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1559036879732:dat2 <- group_by(dat1, Patientencode) %>%
1559036879734:summarise(occur = n()) %>%
1559036879735:filter(occur == 2) %>%
1559036879737:left_join(., dat1, by = "Patientencode") # nur 46 personen haben beide zeitpunkte
1559036881867:lm <- lmer(value ~ variable * trans * condit + (variable|condit:Patientencode) , data = dat2, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"), REML = T)
1559036888069:summary(lm)
1559036898957:# gebe p-werte aus
1559036898959:pv <- p_value(lm, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1559036900503:summary(pv) # scheint nicht zu funktioneiren
1559036988832:summary(lm2)
1559036999793:# gebe p-werte aus
1559036999795:p_value(lm2, p.kr = TRUE) # sieht nicht schlecht aus, wurde für freiheitsgrade korrigiert
1559037037433:av <- aov(diff ~ trans * ho2 + Error(variable/Patientencode), data = dat2)
1559037046842:av <- aov(diff ~ trans * ho2 + Error(Patientencode), data = dat2)
1559037050971:av <- aov(diff ~ trans * ho2 + Error(Patientencode), data = dat3)
1559037052091:summary(av)
1559037065536:emm <- emmeans(av, ~ trans * ho2)
1559037065948:pairs(emm)
1559037361004:lm2 <- lme4::lmer(diff ~ trans * ho2 +
1559037361006:(variable | trans:Patientencode), # +
1559037361007:#(variable | trans),
1559037361009:data=dat2, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1559037361016:summary(lm2)
1559037380533:lm2 <- lme4::lmer(diff ~ trans * ho2 +
1559037380534:(variable | trans:Patientencode), # +
1559037380535:#(variable | trans),
1559037380537:data=dat3, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1559037395165:lm2 <- lme4::lmer(diff ~ trans * ho2 +
1559037395166:(1|trans:Patientencode), # +
1559037395168:#(1| trans),
1559037395169:data=dat3, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1559037403943:lm2 <- lme4::lmer(diff ~ trans * ho2 +
1559037403944:(1|Patientencode), # +
1559037403946:#(1| trans),
1559037403947:data=dat3, REML = F, control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'), check.nobs.vs.nRE="ignore"))
1559037660431:# plotte das ganze
1559037660434:ggplot(dat3, aes(y = diff, x = ho2, col = trans))) + geom_boxplot() + xlab("Hoffnung") + ylab("Differenz von t0 zu t1 im PHQ9") + guides(col = guide_legend("")) + mytheme + ggsave("plots/hoffnung_trans_190528.pdf", width = 12, height = 12, device = cairo_pdf)
1559037668543:# plotte das ganze
1559037668545:ggplot(dat3, aes(y = diff, x = ho2, col = trans)) + geom_boxplot() + xlab("Hoffnung") + ylab("Differenz von t0 zu t1 im PHQ9") + guides(col = guide_legend("")) + mytheme + ggsave("plots/hoffnung_trans_190528.pdf", width = 12, height = 12, device = cairo_pdf)
1559037723722:# plotte das ganze
1559037723723:ggplot(dat3, aes(y = diff, x = ho2, col = trans)) +
1559037723725:geom_boxplot() +
1559037723726:xlab("Hoffnung") +
1559037723733:ylab("Differenz von t0 zu t1 im PHQ9") +
1559037723735:guides(col = guide_legend("")) +
1559037723736:scale_color_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80"))
1559037727940:# plotte das ganze
1559037727941:ggplot(dat3, aes(y = diff, x = ho2, col = trans)) +
1559037727942:geom_boxplot() +
1559037727944:xlab("Hoffnung") +
1559037727946:ylab("Differenz von t0 zu t1 im PHQ9") +
1559037727947:guides(col = guide_legend("")) +
1559037727949:scale_color_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1559037727950:mytheme + ggsave("plots/hoffnung_trans_190528.pdf", width = 12, height = 12, device = cairo_pdf)
1559037750073:# plotte das ganze
1559037750075:ggplot(dat3, aes(y = diff, x = ho2, col = trans)) +
1559037750077:geom_boxplot() +
1559037750078:xlab("Hoffnung") +
1559037750080:ylab("Differenz von t0 zu t1 im PHQ9") +
1559037750081:guides(col = guide_legend("Überweisungsquellen")) +
1559037750083:scale_color_manual(values = c("PR" = "#8b0000", "SR" = "#1c661c", "Unbekannt" = "grey80")) +
1559037750084:mytheme +
1559037750085:ggsave("plots/hoffnung_trans_190528.pdf", width = 12, height = 12, device = cairo_pdf)
1559038343681:summary(av)
1559046799217:summary(lm2)
1559047373735:p_value(lm2, p.kr = TRUE)
1559047509190:summary(av)
1559207264470:library(tidyverse)
1559207299385:read_delim("data.csv", delim = ";")
1559207373701:file.edit("Masterthesis_Datenanalyse.Rmd")
1559207394732:df <- read_delim("data.csv", delim = ";") %>% select("va_1", "va_2", "va_3", "va_4", "va_5", "ps_1", "ps_2", "ps_3", "ps_4", "ps_5", "ps_6", "ps_7", "if_1", "if_2", "if_3", "if_4", "if_5", "if_6", "if_7", "if_8", "os_1", "os_2", "os_3", "os_4", "os_5", "os_6", "os_7", "position", "anstellungsdauer", "ausbildung", "alter", "geschlecht")
1559207402366:problems()
1559207404386:problems(df)
1559207428265:View(df)
1559207456774:library(Amelia)
1559207460371:missmap(df)
1559207478352:missmap(df)
1559207539776:df <- read_delim("data.csv", delim = ";") %>% select("va_1", "va_2", "va_3", "va_4", "va_5", "ps_1", "ps_2", "ps_3", "ps_4", "ps_5", "ps_6", "ps_7", "if_1", "if_2", "if_3", "if_4", "if_5", "if_6", "if_7", "if_8", "os_1", "os_2", "os_3", "os_4", "os_5", "os_6", "os_7", "position", "anstellungsdauer", "ausbildung", "alter", "geschlecht") %>% filter(p_0001 != 1)
1559207563656:df <- read_delim("data.csv", delim = ";") %>% select("p_0001","va_1", "va_2", "va_3", "va_4", "va_5", "ps_1", "ps_2", "ps_3", "ps_4", "ps_5", "ps_6", "ps_7", "if_1", "if_2", "if_3", "if_4", "if_5", "if_6", "if_7", "if_8", "os_1", "os_2", "os_3", "os_4", "os_5", "os_6", "os_7", "position", "anstellungsdauer", "ausbildung", "alter", "geschlecht") %>% filter(p_0001 != 1)
1559207586062:View(df)
1559207687868:df <- read_delim("data.csv", delim = ";") %>% select("p_0001","va_1", "va_2", "va_3", "va_4", "va_5", "ps_1", "ps_2", "ps_3", "ps_4", "ps_5", "ps_6", "ps_7", "if_1", "if_2", "if_3", "if_4", "if_5", "if_6", "if_7", "if_8", "os_1", "os_2", "os_3", "os_4", "os_5", "os_6", "os_7", "position", "anstellungsdauer", "ausbildung", "alter", "geschlecht") %>% filter(p_0001 != 1) %>% mutate(ps_1 = recode("1=7; 2=6; 3=5; 5=3; 6=2; 7=1"), ps_3 = recode("1=7; 2=6; 3=5; 5=3; 6=2; 7=1"), ps_5 = recode("1=7; 2=6; 3=5; 5=3; 6=2; 7=1"))
1559207723971:df <- read_delim("data.csv", delim = ";") %>% select("p_0001","va_1", "va_2", "va_3", "va_4", "va_5", "ps_1", "ps_2", "ps_3", "ps_4", "ps_5", "ps_6", "ps_7", "if_1", "if_2", "if_3", "if_4", "if_5", "if_6", "if_7", "if_8", "os_1", "os_2", "os_3", "os_4", "os_5", "os_6", "os_7", "position", "anstellungsdauer", "ausbildung", "alter", "geschlecht") %>% filter(p_0001 != 1)
1559207784311:df$ps_1 <- car::recode(df$ps_1, "1=7; 2=6; 3=5; 5=3; 6=2; 7=1")
1559207784315:df$ps_3 <- car::recode(df$ps_3, "1=7; 2=6; 3=5; 5=3; 6=2; 7=1")
1559207784319:df$ps_5 <- car::recode(df$ps_5, "1=7; 2=6; 3=5; 5=3; 6=2; 7=1")
1559207792996:install.packages("car")
1559207800640:install.packages("car", dependencies = T)
1559207833397:df$ps_1 <- dplyr::recode(df$ps_1, "1=7; 2=6; 3=5; 5=3; 6=2; 7=1")
1559207833400:df$ps_3 <- dplyr::recode(df$ps_3, "1=7; 2=6; 3=5; 5=3; 6=2; 7=1")
1559207833417:df$ps_5 <- dplyr::recode(df$ps_5, "1=7; 2=6; 3=5; 5=3; 6=2; 7=1")
1559207887798:df$ps_1 <- dplyr::recode(df$ps_1, "1=7", "2=6", "3=5", "5=3", "6=2", "7=1")
1559207887806:df$ps_3 <- dplyr::recode(df$ps_3, "1=7", "2=6", "3=5", "5=3", "6=2", "7=1")
1559207887813:df$ps_5 <- dplyr::recode(df$ps_5, "1=7", "2=6", "3=5", "5=3", "6=2", "7=1")
1559207894951:str(df)
1559207911397:# recode some variables
1559207911399:df$ps_1 <- recode(df$ps_1, "1=7", "2=6", "3=5", "5=3", "6=2", "7=1")
1559207954851:# recode some variables
1559207954853:df %>% mutate(ps_1, recode("1=7", "2=6", "3=5", "5=3", "6=2", "7=1"))
1559207968608:?recode
1559208003140:# recode some variables
1559208003142:df %>% mutate(ps_1, recode(ps_1,"1"="7", "2"="6", "3"="5", "5"="3", "6"="2", "7"="1"))
1559208044107:# recode some variables
1559208044109:df$ps_1 <- dplyr::recode(df$ps_1,"1"="7", "2"="6", "3"="5", "5"="3", "6"="2", "7"="1")
1559208048113:# recode some variables
1559208048120:df$ps_1 <- dplyr::recode(df$ps_1,"1"="7", "2"="6", "3"="5", "5"="3", "6"="2", "7"="1")
1559208049273:df$ps_3 <- dplyr::recode(df$ps_3, "1"="7", "2"="6", "3"="5", "5"="3", "6"="2", "7"="1")
1559208049788:df$ps_5 <- dplyr::recode(df$ps_5, "1"="7", "2"="6", "3"="5", "5"="3", "6"="2", "7"="1")
1559208060454:str(df)
1559208170273:data.raw <- read.csv("data.csv", sep=';')
1559208176807:data.raw <- subset(data.raw, !(p_0001 == 1))
1559208176811:# Remove Data from Persons with higher Position
1559208176812:#data.raw <- subset(data.raw, (position == 1 ))
1559208176814:```
1559208176820:### Select only relevant columns.
1559208176823:```{r}
1559208176824:data <- subset(data.raw, select=c("va_1", "va_2", "va_3", "va_4", "va_5", "ps_1", "ps_2", "ps_3", "ps_4", "ps_5", "ps_6", "ps_7", "if_1", "if_2", "if_3", "if_4", "if_5", "if_6", "if_7", "if_8", "os_1", "os_2", "os_3", "os_4", "os_5", "os_6", "os_7", "position", "anstellungsdauer", "ausbildung", "alter", "geschlecht"))
1559208176826:``
1559208190124:data.raw <- subset(data.raw, !(p_0001 == 1))
1559208195337:data <- subset(data.raw, select=c("va_1", "va_2", "va_3", "va_4", "va_5", "ps_1", "ps_2", "ps_3", "ps_4", "ps_5", "ps_6", "ps_7", "if_1", "if_2", "if_3", "if_4", "if_5", "if_6", "if_7", "if_8", "os_1", "os_2", "os_3", "os_4", "os_5", "os_6", "os_7", "position", "anstellungsdauer", "ausbildung", "alter", "geschlecht"))
1559208199450:library(car)
1559208199452:library(carData)
1559208199455:data$ps_1 <- car::recode(data$ps_1, "1=7; 2=6; 3=5; 5=3; 6=2; 7=1")
1559208199458:data$ps_3 <- car::recode(data$ps_3, "1=7; 2=6; 3=5; 5=3; 6=2; 7=1")
1559208199461:data$ps_5 <- car::recode(data$ps_5, "1=7; 2=6; 3=5; 5=3; 6=2; 7=1")
1559208238150:# istogramms
1559208238152:hist(df$va, xlim = c(1, 7), main ='Histogram', xlab = 'Verbesserungsorienterites ?usserungsverhalten')
1559208247957:# istogramms
1559208247959:hist(df$ps_1, xlim = c(1, 7), main ='Histogram', xlab = 'Verbesserungsorienterites ?usserungsverhalten')
1559208301202:hist(df$ps_1)
1559208310186:str(df$ps_1)
1559208316113:df <- read_delim("df.csv", delim = ";") %>%
1559208316114:select("p_0001","va_1", "va_2", "va_3", "va_4", "va_5",
1559208316116:"ps_1", "ps_2", "ps_3", "ps_4", "ps_5", "ps_6",
1559208316118:"ps_7", "if_1", "if_2", "if_3", "if_4", "if_5",
1559208316119:"if_6", "if_7", "if_8", "os_1", "os_2", "os_3",
1559208316121:"os_4", "os_5", "os_6", "os_7", "position", "anstellungsdauer",
1559208316122:"ausbildung", "alter", "geschlecht") %>%
1559208316124:filter(p_0001 != 1)
1559208316129:# recode some variables
1559208316130:df$ps_1 <- dplyr::recode(df$ps_1,"1"="7", "2"="6", "3"="5", "5"="3", "6"="2", "7"="1")
1559208316132:df$ps_3 <- dplyr::recode(df$ps_3, "1"="7", "2"="6", "3"="5", "5"="3", "6"="2", "7"="1")
1559208316134:df$ps_5 <- dplyr::recode(df$ps_5, "1"="7", "2"="6", "3"="5", "5"="3", "6"="2", "7"="1")
1559208327286:# load df
1559208327288:df <- read_delim("data.csv", delim = ";") %>%
1559208327290:select("p_0001","va_1", "va_2", "va_3", "va_4", "va_5",
1559208327291:"ps_1", "ps_2", "ps_3", "ps_4", "ps_5", "ps_6",
1559208327293:"ps_7", "if_1", "if_2", "if_3", "if_4", "if_5",
1559208327294:"if_6", "if_7", "if_8", "os_1", "os_2", "os_3",
1559208327297:"os_4", "os_5", "os_6", "os_7", "position", "anstellungsdauer",
1559208327300:"ausbildung", "alter", "geschlecht") %>%
1559208327302:filter(p_0001 != 1)
1559208328340:# recode some variables
1559208328341:df$ps_1 <- dplyr::recode(df$ps_1,"1"="7", "2"="6", "3"="5", "5"="3", "6"="2", "7"="1")
1559208328566:df$ps_3 <- dplyr::recode(df$ps_3, "1"="7", "2"="6", "3"="5", "5"="3", "6"="2", "7"="1")
1559208333672:df <- read_delim("data.csv", delim = ";") %>%
1559208333674:select("p_0001","va_1", "va_2", "va_3", "va_4", "va_5",
1559208333675:"ps_1", "ps_2", "ps_3", "ps_4", "ps_5", "ps_6",
1559208333677:"ps_7", "if_1", "if_2", "if_3", "if_4", "if_5",
1559208333678:"if_6", "if_7", "if_8", "os_1", "os_2", "os_3",
1559208333680:"os_4", "os_5", "os_6", "os_7", "position", "anstellungsdauer",
1559208333682:"ausbildung", "alter", "geschlecht") %>%
1559208333683:filter(p_0001 != 1)
1559208338167:# recode some variables
1559208338169:df$ps_1 <- dplyr::recode(df$ps_1,"1"="7", "2"="6", "3"="5", "5"="3", "6"="2", "7"="1")
1559208351376:df$ps_1
1559208359388:df <- read_delim("data.csv", delim = ";") %>%
1559208359389:select("p_0001","va_1", "va_2", "va_3", "va_4", "va_5",
1559208359390:"ps_1", "ps_2", "ps_3", "ps_4", "ps_5", "ps_6",
1559208359392:"ps_7", "if_1", "if_2", "if_3", "if_4", "if_5",
1559208359393:"if_6", "if_7", "if_8", "os_1", "os_2", "os_3",
1559208359395:"os_4", "os_5", "os_6", "os_7", "position", "anstellungsdauer",
1559208359396:"ausbildung", "alter", "geschlecht")
1559208374798:df <- read_delim("data.csv", delim = ";") %>%
1559208374800:select("p_0001","va_1", "va_2", "va_3", "va_4", "va_5",
1559208374801:"ps_1", "ps_2", "ps_3", "ps_4", "ps_5", "ps_6",
1559208374803:"ps_7", "if_1", "if_2", "if_3", "if_4", "if_5",
1559208374804:"if_6", "if_7", "if_8", "os_1", "os_2", "os_3",
1559208374806:"os_4", "os_5", "os_6", "os_7", "position", "anstellungsdauer",
1559208374807:"ausbildung", "alter", "geschlecht") %>%
1559208374808:filter(p_0001 != 1)
1559208389356:#missings
1559208389358:missmap(df)
1559208405568:# recode some variables
1559208405570:df$ps_1 <- dplyr::recode(df$ps_1,"1"="7", "2"="6", "3"="5", "4" = "4", "5"="3", "6"="2", "7"="1")
1559208431085:df$ps_3 <- dplyr::recode(df$ps_3, "1"="7", "2"="6", "3"="5","4" = "4", "5"="3", "6"="2", "7"="1")
1559208431670:df$ps_5 <- dplyr::recode(df$ps_5, "1"="7", "2"="6", "3"="5", "4" = "4","5"="3", "6"="2", "7"="1")
1559208435613:# istogramms
1559208435614:hist(df$ps_1, xlim = c(1, 7), main ='Histogram', xlab = 'Verbesserungsorienterites ?usserungsverhalten')
1559208443182:# istogramms
1559208443183:hist(df$ps_1
1559208444563:)
1559208450312:str(df$ps_1)
1559208464773:# recode some variables
1559208464774:df$ps_1 <- dplyr::recode(df$ps_1,"1"="7", "2"="6", "3"="5", "4" = "4", "5"="3", "6"="2", "7"="1") %>% parse_double()
1559208477353:df$ps_3 <- dplyr::recode(df$ps_3, "1"="7", "2"="6", "3"="5","4" = "4", "5"="3", "6"="2", "7"="1") %>% parse_double()
1559208477761:df$ps_5 <- dplyr::recode(df$ps_5, "1"="7", "2"="6", "3"="5", "4" = "4","5"="3", "6"="2", "7"="1") %>% parse_double()
1559208481150:str(df$ps_1)
1559208489654:hist(df$ps_1)
1559208494204:hist(df$ps_1)
1559208544515:hist(log10(df$ps_1))
1559208549803:hist(log10(df$ps_1))
1559208555948:dev.off()
1559208558352:hist(log10(df$ps_1))
1559208567973:hist(df$ps_1)
1559208615364:cfa.model <- 'va  =~ va_1 + va_2 + va_3 + va_4 + va_5
1559208615366:ps =~  ps_1 + ps_2 + ps_3 + ps_4 + ps_5 + ps_6 + ps_7
1559208615367:ifv =~ if_1 + if_2 + if_3 + if_4 + if_5 + if_6 + if_7 + if_8
1559208615369:os =~ os_1 + os_2 + os_3 + os_4 + os_5 + os_6 + os_7'
1559208621996:library(lavaan)
1559208629586:install.packages("lavaan")
1559208661857:library(lavaan)
1559208676435:cfa.model <- 'va  =~ va_1 + va_2 + va_3 + va_4 + va_5
1559208676438:ps =~  ps_1 + ps_2 + ps_3 + ps_4 + ps_5 + ps_6 + ps_7
1559208676440:ifv =~ if_1 + if_2 + if_3 + if_4 + if_5 + if_6 + if_7 + if_8
1559208676442:os =~ os_1 + os_2 + os_3 + os_4 + os_5 + os_6 + os_7'
1559208678411:# Perfosrm CFA
1559208678412:cfa.fit <- cfa(model = cfa.model,
1559208678414:data = cfa.data)
1559208724230:cfa.data <- select(df, "va_1", "va_2", "va_3", "va_4",
1559208724231:"va_5", "ps_1", "ps_2", "ps_3",
1559208724233:"ps_4", "ps_5", "ps_6", "ps_7",
1559208724234:"if_1", "if_2", "if_3", "if_4",
1559208724235:"if_5", "if_6", "if_7", "if_8",
1559208724237:"os_1", "os_2", "os_3", "os_4",
1559208724238:"os_5", "os_6", "os_7")
1559208759797:# Perfosrm CFA
1559208759799:cfa.fit <- cfa(model = cfa.model,
1559208759800:data = cfa.data)
1559208762212:summary(cfa.fit,
1559208762214:standardized = TRUE,
1559208762215:rsquare = TRUE)
1559208776620:summary(cfa.fit,
1559208776622:standardized = TRUE,
1559208776623:rsquare = TRUE)
1559208840621:library(psych)
1559208958437:fa(df, 4)
1559208974199:fa(cfa.data, 4)
1559208996119:install.packages("psych", dependencies = T)
1559208999777:install.packages("psych", dependencies = T)
1559209086348:library(psych)
1559209106568:fa(cfa.data, 4)
1559209211433:fa(cfa.data, 4, cut.off = .3)
1559209236836:fa(cfa.data, 4, rotate = "varimax")
1559209275074:efafa(cfa.data, 4, rotate = "varimax")
1559209281255:efa <- fa(cfa.data, 4, rotate = "varimax")
1559209293822:print(efa, cut.off = .3)
1559209375976:print(efa$loadings,cutoff = 0.3)
1559209402115:efa <- fa(cfa.data, 4, rotate = "oblimin")
1559209447717:print(efa$loadings,cutoff = 0.3)
1559209802674:cfa.fit <- cfa(model = cfa.model,
1559209802676:data = cfa.data)
1559209802679:summary(cfa.fit,
1559209802681:standardized = TRUE,
1559209802682:rsquare = TRUE)
1559209809253:summary(cfa.fit,
1559209809255:standardized = TRUE,
1559209809257:rsquare = TRUE)
1559209829623:# Perfosrm CFA
1559209829624:cfa.fit <- cfa(model = cfa.model,
1559209829625:data = cfa.data)
1559209837681:cfa.data <- select(df, "va_1", "va_2", "va_3", "va_4",
1559209837683:"va_5", "ps_1", "ps_2", "ps_3",
1559209837684:"ps_4", "ps_5", "ps_6", "ps_7",
1559209837686:"if_1", "if_2", "if_3", "if_4",
1559209837687:"if_5", "if_6", "if_7", "if_8",
1559209837688:"os_1", "os_2", "os_3", "os_4",
1559209837690:"os_5", "os_6", "os_7")
1559209837693:cfa.model <- 'va  =~ va_1 + va_2 + va_3 + va_4 + va_5
1559209837694:ps =~  ps_1 + ps_2 + ps_3 + ps_4 + ps_5 + ps_6 + ps_7
1559209837695:ifv =~ if_1 + if_2 + if_3 + if_4 + if_5 + if_6 + if_7 + if_8
1559209837696:os =~ os_1 + os_2 + os_3 + os_4 + os_5 + os_6 + os_7'
1559209850358:library(tidyverse)
1559209856301:cfa.data <- select(df, "va_1", "va_2", "va_3", "va_4",
1559209856303:"va_5", "ps_1", "ps_2", "ps_3",
1559209856304:"ps_4", "ps_5", "ps_6", "ps_7",
1559209856307:"if_1", "if_2", "if_3", "if_4",
1559209856309:"if_5", "if_6", "if_7", "if_8",
1559209856310:"os_1", "os_2", "os_3", "os_4",
1559209856312:"os_5", "os_6", "os_7")
1559209856321:cfa.model <- 'va  =~ va_1 + va_2 + va_3 + va_4 + va_5
1559209856323:ps =~  ps_1 + ps_2 + ps_3 + ps_4 + ps_5 + ps_6 + ps_7
1559209856325:ifv =~ if_1 + if_2 + if_3 + if_4 + if_5 + if_6 + if_7 + if_8
1559209856326:os =~ os_1 + os_2 + os_3 + os_4 + os_5 + os_6 + os_7'
1559209859036:# Perfosrm CFA
1559209859037:cfa.fit <- cfa(model = cfa.model,
1559209859038:data = cfa.data)
1559209863759:library(lavaan)
1559209866267:# Perfosrm CFA
1559209866273:cfa.fit <- cfa(model = cfa.model,
1559209866277:data = cfa.data)
1559209868468:summary(cfa.fit,
1559209868470:standardized = TRUE,
1559209868471:rsquare = TRUE)
1559210141219:summary(cfa.fit,
1559210141221:standardized = TRUE,
1559210141222:rsquare = TRUE,
1559210141223:fit.measures = TRUE)
1559210345857:hist(df$os_7)
1559210356246:hist(df$os_7)
1559210392499:cfa.model <- 'va  =~ va_1 + va_2 + va_3 + va_4 + va_5
1559210392501:ps =~  ps_1 + ps_2 + ps_3 + ps_4 + ps_5 + ps_6 + ps_7
1559210392503:ifv =~ if_1 + if_2 + if_3 + if_4 + if_5 + if_6 + if_7 + if_8
1559210392505:os =~ os_1 + os_2 + os_3 + os_4 + os_5 + os_6'
1559210393627:# Perfosrm CFA
1559210393629:cfa.fit <- cfa(model = cfa.model,
1559210393631:data = cfa.data)
1559210394228:summary(cfa.fit,
1559210394231:standardized = TRUE,
1559210394232:rsquare = TRUE,
1559210394234:fit.measures = TRUE)
1559210427453:summary(cfa.fit,
1559210427455:standardized = TRUE,
1559210427457:rsquare = TRUE,
1559210427458:fit.measures = TRUE,
1559210427460:modindices = TRUE)
1559210480818:cfa.model <- 'va  =~ va_1 + va_2 + va_3 + va_4 + va_5
1559210480820:ps =~  ps_1 + ps_2 + ps_3 + ps_4 + ps_5 + ps_6 + ps_7
1559210480822:ifv =~ if_1 + if_2 + if_3 + if_4 + if_5 + if_6 + if_7 + if_8
1559210480824:os =~ os_1 + os_2 + os_3 + os_4 + os_5 + os_6 + os_7'
1559210481608:# Perfosrm CFA
1559210481610:cfa.fit <- cfa(model = cfa.model,
1559210481611:data = cfa.data)
1559210482626:summary(cfa.fit,
1559210482629:standardized = TRUE,
1559210482630:rsquare = TRUE,
1559210482631:fit.measures = TRUE,
1559210482633:modindices = TRUE)
1559210553513:cfa.model <- 'va  =~ va_1 + va_2 + va_3 + va_4 + va_5
1559210553514:ps =~  ps_1 + ps_2 + ps_3 + ps_4 + ps_5 + ps_6 + ps_7
1559210553516:ifv =~ if_1 + if_2 + if_3 + if_4 + if_5 + if_6 + if_7 + if_8
1559210553518:os =~ os_1 + os_2 + os_3 + os_4 + os_5 + os_6 + os_7
1559210553519:va =~ os_7
1559210553521:ps =~ os_7
1559210553523:ifv =~ os_7
1559210553524:'
1559210554706:# Perfosrm CFA
1559210554708:cfa.fit <- cfa(model = cfa.model,
1559210554710:data = cfa.data)
1559210555297:summary(cfa.fit,
1559210555300:standardized = TRUE,
1559210555301:rsquare = TRUE,
1559210555303:fit.measures = TRUE,
1559210555305:modindices = TRUE)
1559211393962:df$va <- (df$va_1 + df$va_2 + df$va_3 + df$va_4 + df$va_5)  / 5
1559211393964:df$ps <- (df$ps_1 + df$ps_2 + df$ps_3 + df$ps_4 + df$ps_5 + df$ps_6 + df$ps_7) / 7
1559211393966:df$ifv <- (df$if_1 + df$if_2 + df$if_3 + df$if_4 + df$if_5 + df$if_6 + df$if_7 + df$if_8) / 8
1559211393968:df$os <- (df$os_1 + df$os_2 + df$os_3 + df$os_4 + df$os_5 + df$os_6 + df$os_7) / 7
1559211707177:attributes(cfa.fit)
1559211767656:names(attributes(cfa.fit))
1559211813360:df$va <- (df$va_1 + df$va_2 + df$va_3 + df$va_4 + df$va_5)  / 5
1559211813362:df$ps <- (df$ps_1 + df$ps_2 + df$ps_3 + df$ps_4 + df$ps_5 + df$ps_6 + df$ps_7) / 7
1559211813364:df$ifv <- (df$if_1 + df$if_2 + df$if_3 + df$if_4 + df$if_5 + df$if_6 + df$if_7 + df$if_8) / 8
1559211813365:df$os <- (df$os_1 + df$os_2 + df$os_3 + df$os_4 + df$os_5 + df$os_6 + df$os_7) / 7
1559215873449:library(gmodels)
1559216877570:# moderation
1559216877572:mod.sem <- efa <- fa(cfa.data, 4, rotate = "oblimin")
1559216889111:# moderation
1559216889114:library(psych)
1559216889576:mod.sem <- efa <- fa(cfa.data, 4, rotate = "oblimin")
1559216890041:print(efa$loadings,cutoff = 0.3)
1559588374765:library(MASS)
1559588379940:library(car)
1559588384727:install.packages("car")
1559588409839:install.packages("car")
1559588420813:install.packages("car", dependencies = T)
1559588468346:library(MASS)
1559588507411:# load themes,data, packages-----------
1559588507412:source("kira_masterarbeit_edit_190418.R")
1559588569470:View(data_long)
1559588595384:# h1b:versuche das ganze zu plotten
1559588595386:pat <- ("T0_phq9|T1_phq9")
1559588595803:dat1 <- data_long[grepl(pat, data_long$variable) & !is.na(data_long$value),]
1559588597359:# überprüfe ob auch alle teilnehmer beide zeitpunkte haben, ansonsten ausschliessen
1559588597360:dat2 <- group_by(dat1, Patientencode) %>%
1559588597362:summarise(occur = n()) %>%
1559588597363:filter(occur == 2) %>%
1559588597367:left_join(., dat1, by = "Patientencode") # nur 46 personen haben beide zeitpunkte
1559588608097:qqp(dat2$value)
1559588650193:qqp(dat2$value, "norm")
1559588708505:qqplot(dat2$value, "norm")
1565031351993:library(purl)
1565031470719:knitr::purl("kira_masterarbeit_bericht_190522.Rmd", documentation = 0)
1565032336480:install.packages("Rcpp")
1565032409294:library(tidyverse)
1565032409343:library(Amelia)
1565032409360:library(reshape2)
1565032409365:library(gmodels)
1565032409383:library(lubridate)
1565032409389:library(psych)
1565032409395:library(Hmisc)
1565032410448:library(psych)
1565032448371:install.packages("tidyverse")
1565032466874:install.packages("Amelia")
1565032503534:install.packages("reshape2")
1565032520529:install.packages("gmodels")
1565032532559:install.packages("lubridate")
1565032566148:install.packages("Hmisc")
1565032577462:install.packages("psych")
1565032596434:library(tidyverse)
1565032618878:install.packages("tidyverse")
1566207110700:file.edit("index.Rmd")
1566207127625:dir()
1566548727368:library(lubridate)
1566548743176:install.packages("lubridate")
1566548773642:install.packages("tidyverse")
1566548791202:install.packages("tidyverse", dependencies = T)
1566549966758:library(tidyverse)
1566549976935:install.packages("readr")
1566550145583:library(tidyverse)
1566551374204:head(star_wars)
1566551378540:urlfile = "https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2018/2018-05-14/week7_starwars.csv" # definiere zuerst die URL auf der R zugreifen soll
1566551378542:star_wars <- read_delim(url(urlfile), delim = ",", col_names = T) # lade die Datei von der obigen URL
1566551378802:head(star_wars)
1566551383348:View(star_wars)
1566551433258:urlfile = "https://data.stadt-zuerich.ch/dataset/14f0e561-78a5-4f47-8ccf-9ae93d37e990/resource/91aa31e3-3272-4f8e-8763-c08964f8b16c/download/bev301od3011.csv"
1566551433259:dat_lang <- read_delim(url(urlfile), delim = ",", col_names = T)
1566551433475:head(dat_lang)
1566554075361:install.packages("fansi")
1566559535206:install.packages("uft8")
1566559546587:install.packages("utf8")
1566559795543:install.packages("purl")
1566559830802:knitr::purl("17_Statistik5_2/ablauf_inhalt_190823_egel.Rmd", documentation = "pdf")
1566559966696:knitr::knit("17_Statistik5_2/aufgabe_gruppenarbeit_reme_190823_egel.Rmd", output = "pdf")
1566560142776:rmarkdown::render("17_Statistik5_2/aufgabe_gruppenarbeit_reme_190823_egel.Rmd", "pdf_document")
1566560379091:rmarkdown::render("17_Statistik5_2/ablauf_inhalt_190823_egel.Rmd", "pdf_document")
1566560398072:rmarkdown::render("17_Statistik5_2/different_datasets_190813_egel.Rmd", "pdf_document")
1566563635014:install.packages("FSA")
1566563801087:install.packages("FSA", dependencies = T)
1566564207990:300/6
1566564392764:library(FSA)
1566564504942:library(ggfortify)
1566564649411:## ladet die nötigen Packete und die novanimal.csv Datei in R
1566564649412:nova <- read_delim("13_Statistik1/data/novanimal.csv", delim = ";")
1566564655220:df <- nova # klone den originaler Datensatz
1566564655222:# fasst die vier Inhalte der Gerichte zu drei Inhalten zusammen.
1566564655222:df$label_content[grep("Pflanzlich+",df$label_content)] <- "Vegetarisch"
1566564655224:# gruppiert Daten nach Menü-Inhalt und Woche
1566564655225:df_ <- df %>%
1566564655225:group_by(label_content, week) %>%
1566564655226:summarise(mean_wk = mean())
1566564713484:df <- nova # clone den originaler Datensatz
1566564713485:df$label_content[grep("Pflanzlich+",df$label_content)] <- "Vegetarisch" # fasst die vier Inhalte der Gerichte zu drei Inhalten zusammen.
1566564713487:df_ <- df %>%
1566564713488:group_by(label_content, week) %>%
1566564713488:summarise(tot_sold = n()) %>%
1566564713489:drop_na()
1566565044278:# überprüft die Voraussetzungen für eine ANOVA
1566565044279:# Schaut euch die Verteilungen der Mittelwerte an (plus Standardabweichungen)
1566565044279:df <- group_by(label_content) %>%
1566565044280:summarise(mean_label = mean(.$tot_sold, na.rm = T),
1566565044281:sd_label = sd(.$tot_sold))
1566565050776:# überprüft die Voraussetzungen für eine ANOVA
1566565050777:# Schaut euch die Verteilungen der Mittelwerte an (plus Standardabweichungen)
1566565050777:df_ <- group_by(label_content) %>%
1566565050778:summarise(mean_label = mean(.$tot_sold, na.rm = T),
1566565050779:sd_label = sd(.$tot_sold))
1566565058936:df_
1566565085205:df_  %>%
1566565085206:group_by(label_content) %>%
1566565085206:summarise(mean_label = mean(.$tot_sold, na.rm = T),
1566565085207:sd_label = sd(.$tot_sold))
1566565170539:df_  %>%
1566565170540:split(.$label_content) %>%
1566565170541:purrr::map(~ mean(.$tot_sold))
1566565196883:# überprüft die Voraussetzungen für eine ANOVA
1566565196883:# Schaut euch die Verteilungen der Mittelwerte an (plus Standardabweichungen)
1566565196884:df_  %>%
1566565196885:split(.$label_content) %>%
1566565196885:purrr::map(~ mean(.$tot_sold)) %>%
1566565196886:purrr::map(~ sd(.$tot_sold))
1566565217373:# überprüft die Voraussetzungen für eine ANOVA
1566565217374:# Schaut euch die Verteilungen der Mittelwerte an (plus Standardabweichungen)
1566565217375:df_  %>%
1566565217375:split(.$label_content) %>%
1566565217376:purrr::map(~ psych::describe(.$tot_sold))
1566565295541:# Boxplot
1566565295542:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566565295543:geom_boxplot(fill="white", color = "black", size = 1) +
1566565295543:stat_boxplot(geom = "errorbars") +
1566565295544:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566565295545:mytheme
1566565300822:# Boxplot
1566565300823:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566565300824:geom_boxplot(fill="white", color = "black", size = 1) +
1566565300824:stat_boxplot(geom = "errorbar") +
1566565300825:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566565300826:mytheme
1566565305960:mytheme <-
1566565305961:theme_classic() +
1566565305962:theme(
1566565305963:axis.line = element_line(color = "black"),
1566565305964:axis.text = element_text(size = 20, color = "black"),
1566565305965:axis.title = element_text(size = 20, color = "black"),
1566565305966:axis.ticks = element_line(size = 1, color = "black"),
1566565305967:axis.ticks.length = unit(.5, "cm")
1566565305968:)
1566565309147:# Boxplot
1566565309148:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566565309148:geom_boxplot(fill="white", color = "black", size = 1) +
1566565309149:stat_boxplot(geom = "errorbar") +
1566565309150:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566565309150:mytheme
1566565380347:# Boxplot
1566565380348:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566565380349:geom_boxplot(fill="white", color = "black", size = 1) +
1566565380350:stat_boxplot(geom = "errorbar", width = 0.5) +
1566565380351:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566565380352:mytheme
1566565387977:# Boxplot
1566565387978:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566565387978:geom_boxplot(fill="white", color = "black", size = 1) +
1566565387979:stat_boxplot(geom = "errorbar", width = 0.25) +
1566565387980:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566565387980:mytheme
1566565938464:# Boxplot
1566565938465:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566565938466:geom_boxplot(fill="white", color = "black", size = 1, width = .6) +
1566565938467:stat_boxplot(geom = "errorbar", width = 0.25, mapping = ) +
1566565938467:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566565938468:mytheme
1566565948728:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566565948729:geom_boxplot(fill="white", color = "black", size = 1, width = .6)
1566565959364:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566565959365:geom_boxplot(fill="white", color = "black", size = 1, width = .2)
1566565967399:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566565967402:geom_boxplot(fill="white", color = "black", size = 1, width = .5) +
1566565967403:stat_boxplot(geom = "errorbar", width = 0.25, mapping = ) +
1566565967403:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566565967404:mytheme
1566566001174:# Boxplot
1566566001179:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566566001192:geom_boxplot(fill="white", color = "black", size = 1, width = .5) +
1566566001197:stat_boxplot(geom = "errorbar", width = 0.25, fill = "leighgrey") +
1566566001201:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566566001203:mytheme
1566566033830:# Boxplot
1566566033831:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566566033832:geom_boxplot(fill="lightgrey", color = "black", size = 1, width = .5) +
1566566033833:stat_boxplot(geom = "errorbar", width = 0.25) +
1566566033834:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566566033834:mytheme
1566566151146:# Boxplot
1566566151147:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566566151148:geom_boxplot(fill="white", color = "black", size = 1, width = .5) + # da sind noch striche drin, noch keine lösung diese zu entfernen
1566566151149:# stat_boxplot(geom = "errorbar", width = 0.25) +
1566566151150:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566566151151:mytheme
1566567198968:# Boxplot
1566567198969:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566567198970:geom_boxplot(fill="white", color = "black", size = 1, width = .5) + # da sind noch striche drin, noch keine lösung diese zu entfernen
1566567198971:stat_boxplot(geom = "errorbar", width = 0.25) +
1566567198972:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566567198973:mytheme
1566567218884:# Boxplot
1566567218885:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566567218886:geom_boxplot(fill="white", color = "black", size = 1, width = .5) + # da sind noch striche drin, noch keine lösung diese zu entfernen
1566567218887:stat_boxplot(geom = "errorbar", width = 0) +
1566567218888:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566567218888:mytheme
1566567247664:# Boxplot
1566567247665:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566567247666:geom_boxplot(fill="white", color = "black", size = 1, width = .5) + # da sind noch striche drin, noch keine lösung diese zu entfernen
1566567247667:stat_boxplot(geom = "errorbar", width = 0.25, inherit.aes = T) +
1566567247668:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566567247669:mytheme
1566567253531:# Boxplot
1566567253532:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566567253533:geom_boxplot(fill="white", color = "black", size = 1, width = .5) + # da sind noch striche drin, noch keine lösung diese zu entfernen
1566567253534:stat_boxplot(geom = "errorbar", width = 0.25, inherit.aes = F) +
1566567253535:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566567253536:mytheme
1566567331756:# Boxplot
1566567331757:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566567331758:geom_boxplot(fill="white", color = "black", size = 1, width = .5) + # da sind noch striche drin, noch keine lösung diese zu entfernen
1566567331759:stat_boxplot(stat = "errorbar", width = 0.25, ) +
1566567331760:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566567331761:mytheme
1566567343844:# Boxplot
1566567343845:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566567343846:geom_boxplot(fill="white", color = "black", size = 1, width = .5) + # da sind noch striche drin, noch keine lösung diese zu entfernen
1566567343847:stat_boxplot(geom = "errorbar", width = 0.25, ) +
1566567343848:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566567343849:mytheme
1566567350168:# Boxplot
1566567350169:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566567350170:# geom_boxplot(fill="white", color = "black", size = 1, width = .5) + # da sind noch striche drin, noch keine lösung diese zu entfernen
1566567350171:stat_boxplot(geom = "errorbar", width = 0.25, ) +
1566567350172:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566567350173:mytheme
1566567375465:# Boxplot
1566567375466:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566567375467:# da sind noch striche drin, noch keine lösung diese zu entfernen
1566567375468:stat_boxplot(geom = "errorbar", width = 0.25) +
1566567375469:geom_boxplot(fill="white", color = "black", size = 1, width = .5) +
1566567375470:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566567375471:mytheme
1566567435950:# plottet die Ergebnisse
1566567435951:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566567435953:geom_boxplot(fill="white", color = "black", size = 1) +
1566567435954:stat_boxplot(geom = "errorbar")
1566567452789:# plottet die Ergebnisse
1566567452790:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566567452791:geom_boxplot(fill="white", color = "black", size = 1, width = .5) +
1566567452792:stat_boxplot(geom = "errorbar", widht = .25)
1566567468314:# plottet die Ergebnisse
1566567468315:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566567468316:stat_boxplot(geom = "errorbar", width = .25) +
1566567468317:geom_boxplot(fill="white", color = "black", size = 1, width = .5) +
1566567468318:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566567468319:mytheme
1566567689560:install.packages("ggsignif")
1566567700396:library(ggsignif)
1566567755646:# überprüft die Voraussetzungen des Welch-Test.
1566567755647:# Gibt es eine hohe Varianzheterogenität und
1566567755648:# ist die relative Verteilung der Residuen gegeben?
1566567755650:# In diesem Fall wäre ein Welch-Test passend
1566567755651:w_test <- oneway.test(data=df_, tot_sold ~ label_content, var.equal=F)
1566567756616:w_test
1566567761684:# definiert das Modell
1566567761686:model <- aov(tot_sold ~ label_content, data = df_)
1566567762180:summary.lm(model)
1566567772351:autoplot(model) + mytheme
1566568266624:pairwise.t.test(w_test, pool.sd = FALSE, var.eq = FALSE)
1566568301475:pairwise.t.test(tot_sold, label_content, pool.sd = FALSE, var.eq = FALSE)
1566568324437:pairwise.t.test(df_$tot_sold, df_$label_content, pool.sd = FALSE, var.eq = FALSE)
1566568668064:aov(log10(tot_sold) ~ label_content, data = df_)
1566568678588:model <- aov(log10(tot_sold) ~ label_content, data = df_)
1566568688882:autoplot(model)
1566568708674:model <- aov((tot_sold) ~ label_content, data = df_)
1566568710037:autoplot(model)
1566569237772:# überprüft die Voraussetzungen des Welch-Tests:
1566569237773:# Gibt es eine hohe Varianzheterogenität und ist die relative Verteilung der Residuen gegeben? (siehe Folien Statistik 2: Folie 18)
1566569237774:# Ja Varianzheterogenität ist gegeben, aber die Verteilung der Residuen folgt einem "Trichter", also keiner normalen Verteilung um 0 (siehe Folien Statistik 2: Folie 42)
1566569237775:# Daher ziehe ich eine Transformation der AV dem nicht-parametrischen Test vor.
1566569237776:model1 <- aov(log10(tot_sold) ~ label_content, data = df_)
1566569238222:autoplot(model) + mytheme # scheint ok zu sein
1566569238841:TukeyHSD(model1)
1566570989451:# plottet die Ergebnisse
1566570989452:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566570989453:stat_boxplot(geom = "errorbar", width = .25) +
1566570989454:geom_boxplot(fill="white", color = "black", size = 1, width = .5) +
1566570989455:geom_signif(comparisons = list(c("Fleisch", "Buffet")),
1566570989456:map_signif_level=TRUE)
1566571021279:# plottet die Ergebnisse
1566571021280:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566571021281:stat_boxplot(geom = "errorbar", width = .25) +
1566571021282:geom_boxplot(fill="white", color = "black", size = 1, width = .5) +
1566571021283:geom_signif(comparisons = list(c("Fleisch", "Buffet"), c("Fleisch", "Vegetarisch")),
1566571021284:map_signif_level=TRUE)
1566571187815:# plottet die Ergebnisse
1566571187816:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566571187817:stat_boxplot(geom = "errorbar", width = .25) +
1566571187818:geom_boxplot(fill="white", color = "black", size = 1, width = .5) +
1566571187819:geom_signif(comparisons = list(c("Fleisch", "Buffet", "Vegetarisch")),
1566571187820:map_signif_level=TRUE)
1566571220986:# plottet die Ergebnisse
1566571220988:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566571220989:stat_boxplot(geom = "errorbar", width = .25) +
1566571220990:geom_boxplot(fill="white", color = "black", size = 1, width = .5) +
1566571220991:geom_signif(comparisons = list(c("Fleisch", "Buffet"), c("Fleisch", "Vegetarisch"), c("Vegetarisch", "Buffet")),
1566571220992:map_signif_level=TRUE)
1566571606897:# plottet die Ergebnisse
1566571606898:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566571606899:stat_boxplot(geom = "errorbar", width = .25) +
1566571606900:geom_boxplot(fill="white", color = "black", size = 1, width = .5) +
1566571606900:expand_limits(y = 0) +
1566571606901:geom_signif(y_position=c(5.3, 8.3), xmin=c(0.8, 1.8), xmax=c(1.2, 2.2),
1566571606902:annotation=c("**", "NS"), tip_length=0) +
1566571606903:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566571606904:mytheme
1566571970979:# plottet die Ergebnisse
1566571970981:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566571970983:stat_boxplot(geom = "errorbar", width = .25) +
1566571970984:geom_boxplot(fill="white", color = "black", size = 1, width = .5) +
1566571970985:geom_signif(comparisons = list(c("Fleisch", "Buffet"), c("Fleisch", "Vegetarisch"), c("Vegetarisch", "Buffet")),
1566571970986:map_signif_level=TRUE) + # achtung nicht derselbe test wie oben wird verwendet
1566571970986:expand_limits(y = 0) + # nimmt das 0 bei der y-Achse mit ein
1566571970988:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566571970988:mytheme
1566572004337:# plottet die Ergebnisse
1566572004338:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566572004339:stat_boxplot(geom = "errorbar", width = .25) +
1566572004340:geom_boxplot(fill="white", color = "black", size = 1, width = .5) +
1566572004341:geom_signif(comparisons = list(c("Fleisch", "Buffet"), c("Fleisch", "Vegetarisch"), c("Vegetarisch", "Buffet"))) + # Achtung: wilkoxon Test wird hier verwendet: kommt aber auf die  nicht derselbe test wie oben wird verwendet
1566572004342:expand_limits(y = 0) + # nimmt das 0 bei der y-Achse mit ein
1566572004342:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566572004343:mytheme
1566572052782:# plottet die Ergebnisse
1566572052783:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566572052784:stat_boxplot(geom = "errorbar", width = .25) +
1566572052785:geom_boxplot(fill="white", color = "black", size = 1, width = .5) +
1566572052786:geom_signif(comparisons = list(c("Buffet", "Fleisch"), c("Buffet", "Vegetarisch"), c("Fleisch", "Vegetarisch"))) + # Achtung: wilkoxon Test wird hier verwendet: kommt aber auf die  nicht derselbe test wie oben wird verwendet
1566572052787:expand_limits(y = 0) + # nimmt das 0 bei der y-Achse mit ein
1566572052788:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566572052789:mytheme
1566572057514:TukeyHSD(model1) # (Statistik 2: Folien 9-11)
1566572274760:compare_means
1566572340346:compare_means()
1566572365072:compare_means(formula, data, method = "wilcox.test", paired = FALSE,
1566572365073:group.by = NULL, ref.group = NULL, ...)
1566572407823:install.packages("ggpub")
1566572417972:install.packages("ggpubr")
1566572592824:library(ggpubr)
1566572744791:# plottet die Ergebnisse
1566572744792:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566572744793:stat_boxplot(geom = "errorbar", width = .25) +
1566572744796:geom_boxplot(fill="white", color = "black", size = 1, width = .5) +
1566572744797:# geom_signif(comparisons = list(c("Buffet", "Fleisch"), c("Buffet", "Vegetarisch"), c("Fleisch", "Vegetarisch"))) + # Achtung: wilkoxon Test wird hier verwendet: kommt aber auf die  nicht derselbe test wie oben wird verwendet
1566572744798:stat_compare_means(method = "anova", label.y = 40)+ # Add pairwise comparisons p-value
1566572744799:# stat_compare_means(label.y = 50)+
1566572744800:expand_limits(y = 0) + # nimmt das 0 bei der y-Achse mit ein
1566572744801:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566572744803:mytheme
1566572760994:model1
1566572769345:summary.lm(model1)
1566572815681:compare_means(tot_sold ~ label_content, data = df_, method = "Tukey")
1566572829992:compare_means(tot_sold ~ label_content, data = df_, method = "anova")
1566572845578:compare_means(tot_sold ~ label_content, data = df_, method = "kruskal.test")
1566572863126:compare_means(tot_sold ~ label_content, data = df_, method = "kruskal.test")
1566572881275:compare_means(tot_sold ~ label_content, data = df_, method = "t.test")
1566572995143:compare_means(tot_sold ~ label_content, data = df_, group.by = "label_content")
1566573008168:compare_means(tot_sold ~ label_content, data = df_)
1566573025283:compare_means(tot_sold ~ label_content, data = df_, ref.group = .5)
1566573031554:compare_means(tot_sold ~ label_content, data = df_, ref.group = "Buffet")
1566573250994:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566573250995:stat_boxplot(geom = "errorbar", width = .25) +
1566573250996:geom_boxplot(fill="white", color = "black", size = 1, width = .5)
1566573407989:df1 <- data.frame(a = c(1, 1:3,3), b = c(39, 40, 40, 40, 39)) # aus der Information aus dem Tukey Test von oben
1566573407990:df2 <- data.frame(a = c(1, 1,2, 2), b = c(35, 36, 36, 35))
1566573407991:df3 <- data.frame(a = c(2, 2, 3, 3), b = c(24, 25, 25, 24))
1566573407994:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566573407995:stat_boxplot(geom = "errorbar", width = .25) +
1566573407996:geom_boxplot(fill="white", color = "black", size = 1, width = .5) +
1566573407997:geom_line(data = df1, aes(x = a, y = b)) + annotate("text", x = 2, y = 42, label = "*", size = 8) +
1566573407998:geom_line(data = df2, aes(x = a, y = b)) + annotate("text", x = 1.5, y = 38, label = "**", size = 8) +
1566573407999:geom_line(data = df3, aes(x = a, y = b)) + annotate("text", x = 2.5, y = 27, label = "n.s.", size = 8)
1566573408295:expand_limits(y = 0) + # nimmt das 0 bei der y-Achse mit ein
1566573408296:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566573408297:mytheme
1566573420459:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566573420460:stat_boxplot(geom = "errorbar", width = .25) +
1566573420461:geom_boxplot(fill="white", color = "black", size = 1, width = .5) +
1566573420462:geom_line(data = df1, aes(x = a, y = b)) + annotate("text", x = 2, y = 42, label = "*", size = 8) +
1566573420463:geom_line(data = df2, aes(x = a, y = b)) + annotate("text", x = 1.5, y = 38, label = "**", size = 8) +
1566573420464:geom_line(data = df3, aes(x = a, y = b)) + annotate("text", x = 2.5, y = 27, label = "n.s.", size = 8)+
1566573420465:expand_limits(y = 0) + # nimmt das 0 bei der y-Achse mit ein
1566573420465:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566573420466:mytheme
1566573437775:df1
1566573464961:df2
1566573488845:df3 <- data.frame(a = c(2, 2, 3, 3), b = c(24, 25, 25, 24))
1566573491746:df3
1566573563654:# plottet die Ergebnisse
1566573563655:df1 <- data.frame(a = c(1, 1:3,3), b = c(150, 151, 151, 151, 150)) # aus der Information aus dem Tukey Test von oben
1566573563966:df2 <- data.frame(a = c(1, 1,2, 2), b = c(130, 131, 131, 130))
1566573564299:df3 <- data.frame(a = c(2, 2, 3, 3), b = c(140, 141, 141, 140))
1566573564761:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566573564762:stat_boxplot(geom = "errorbar", width = .25) +
1566573564763:geom_boxplot(fill="white", color = "black", size = 1, width = .5) +
1566573564764:geom_line(data = df1, aes(x = a, y = b)) + annotate("text", x = 2, y = 42, label = "*", size = 8) +
1566573564765:geom_line(data = df2, aes(x = a, y = b)) + annotate("text", x = 1.5, y = 38, label = "**", size = 8) +
1566573564765:geom_line(data = df3, aes(x = a, y = b)) + annotate("text", x = 2.5, y = 27, label = "n.s.", size = 8)+
1566573564766:expand_limits(y = 0) + # nimmt das 0 bei der y-Achse mit ein
1566573564767:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566573564768:mytheme
1566573678264:TukeyHSD(model1) # (Statistik 2: Folien 9-11)
1566573763360:ggplot(df_, aes(x = label_content, y= tot_sold)) +
1566573763361:stat_boxplot(geom = "errorbar", width = .25) +
1566573763362:geom_boxplot(fill="white", color = "black", size = 1, width = .5) +
1566573763363:geom_line(data = df1, aes(x = a, y = b)) + annotate("text", x = 2, y = 152, label = "***", size = 8) + # aus der Information aus dem Tukey Test von oben: Buffet-Vegetarisch
1566573763364:geom_line(data = df2, aes(x = a, y = b)) + annotate("text", x = 1.5, y = 132, label = "***", size = 8) + # Buffet - Fleisch
1566573763365:geom_line(data = df3, aes(x = a, y = b)) + annotate("text", x = 2.5, y = 142, label = "*", size = 8)+ # Fleisch - Vegetarisch
1566573763366:expand_limits(y = 0) + # nimmt das 0 bei der y-Achse mit ein
1566573763368:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566573763369:mytheme
1566574051972:model1
1566574060418:attributes(model1)
1566574068522:model1$coefficients
1566574082024:model1$df.residual
1566574096983:summary.lm(model1)
1566574114531:attributes(model1)
1566574126442:attributes(summary(model1))
1566574139601:summary.lm(model1)[1]
1566574142648:summary.lm(model1)
1566574153922:summary.lm(model1)$p.value
1566574217634:summary(model1)
1566574237425:summary(model1)[1]["Pr(>F)"]
1566574244897:summary(model1)[1]
1566574250670:summary(model1)[[1]]
1566574274761:summary(model1)[[1]][[]]
1566574280649:summary(model1)[[1]][["Pr(>F)"]]
1566574285319:summary(model1)[[1]][["Pr(>F)"]][1]
1566574293138:summary(model1)[1][["Pr(>F)"]][1]
1566574295516:summary(model1)[1][["Pr(>F)"]]
1566574301176:summary(model1)[[1]][["Pr(>F)"]]
1566574304707:summary(model1)[[1]][["Pr(>F)"]][1]
1566574342265:summary(model1)[[1]][["F-Value"]][1]
1566574344386:summary(model1)[[1]][["F-Value"]]
1566574350441:summary(model1)[[1]][["F value"]]
1566574353206:summary(model1)[[1]][["F value"]][1]
1566574709625:geom_boxplot(fill="white", size = 1, width = .5) +
1566574709626:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566574709627:mytheme
1566574714579:df <- nova
1566574714581:# fasst die vier Inhalte der Gerichte zu drei Inhalten zusammen.
1566574714582:df$label_content[grep("Pflanzlich+",df$label_content)] <- "Vegetarisch"
1566574714584:# gruppiert Daten gemäss Bedingungen, Menü-Inhalt und Wochen
1566574714585:df_ <- df %>%
1566574714586:group_by(condit, label_content, week) %>%
1566574714587:summarise(tot_sold = n()) %>%
1566574714587:drop_na() # lasst die unbekannten Menü-Inhalte weg
1566574714593:# überprüft Voraussetzungen für eine ANOVA
1566574714594:# Boxplots zeigt klare Varianzheterogenität
1566574714595:ggplot(df_, aes(x = interaction(label_content, condit), y = tot_sold)) +
1566574714596:stat_boxplot(geom = "errorbar", width = .25)
1566574714785:geom_boxplot(fill="white", size = 1, width = .5) +
1566574714786:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566574714787:mytheme
1566574720844:# überprüft Voraussetzungen für eine ANOVA
1566574720845:# Boxplots zeigt klare Varianzheterogenität
1566574720846:ggplot(df_, aes(x = interaction(label_content, condit), y = tot_sold)) +
1566574720847:stat_boxplot(geom = "errorbar", width = .25) +
1566574720848:geom_boxplot(fill="white", size = 1, width = .5) +
1566574720849:labs(x = "\nMenü-Inhalt", y = "Anzahl verkaufte Gerichte pro Woche\n") +
1566574720850:mytheme
1566574748508:# definiert das Modell mit Interaktion
1566574748510:model1 <- aov(tot_sold ~ label_content * condit, data = df_)
1566574749316:summary.lm(model1)
1566574751530:autoplot(model1) + mytheme  # Inspektion der Modellvoraussetzung: ist ok
1566574972126:# definiert das Modell mit Interaktion
1566574972128:model1 <- aov(log10(tot_sold) ~ label_content * condit, data = df_)
1566574981269:autoplot(model1)
1566575205714:# definiert das Modell mit Interaktion
1566575205715:model2 <- aov(tot_sold ~ label_content * condit, data = df_)
1566575212081:summary.lm(model2)
1566575286513:df_
1566575407556:library(FSA)
1566575412213:library("fansi")
1566575419181:install.packages("fansi")
1566575425662:install.packages("fansi")
1566575443025:install.packages("FSA")
1566575460483:install.packages("gtools")
1566575479985:install.packages("gdata")
1566575493011:install.packages("gplots")
1566575505330:library(FSA)
1566575512650:install.packages("FSA")
1566575629349:file.edit("14_Statistik2/solution_stat2.3s.Rmd")
1566575767358:# in einem nächsten Schritt könnt ihr mit Post-hoc Tests diese Unterschiede genauer betrachten
1566575767359:# es gibt zwei Möglochkeiten dunnTest (mit Package FSA)
1566575767360:library(FSA)
1566575798881:install.packages("PMCMR")
1566575842263:library(PMCMR)
1566575850375:install.packages("PMCMRplus")
1566575960137:dunnTest(tot_sold ~ label_content * condit, data = df_, method="bh") # Korrektur für Mehrfachvergleiche
1566575969057:## ladet die nötigen Packete und die novanimal.csv Datei in R
1566575969058:nova <- read_delim("13_Statistik1/data/novanimal.csv", delim = ";")
1566575974416:df <- nova
1566575974418:# fasst die vier Inhalte der Gerichte zu drei Inhalten zusammen.
1566575974419:df$label_content[grep("Pflanzlich+",df$label_content)] <- "Vegetarisch"
1566575974421:# gruppiert Daten gemäss Bedingungen, Menü-Inhalt und Wochen
1566575974422:df_ <- df %>%
1566575974423:group_by(condit, label_content, week) %>%
1566575974424:summarise(tot_sold = n()) %>%
1566575974425:drop_na() # lasst die unbekannten Menü-Inhalte weg
1566575979012:dunnTest(tot_sold ~ label_content * condit, data = df_, method="bh") # Korrektur für Mehrfachvergleiche
1566575997350:dunnTest(tot_sold ~ label_content, condit, data = df_, method="bh") # Korrektur für Mehrfachvergleiche
1566576019080:dunnTest(tot_sold, condit, data = df_, method="bh") # Korrektur für Mehrfachvergleiche
1566576026630:df_
1566576051547:dunnTest(df_$tot_sold, df_$condit, method="bh") # Korrektur für Mehrfachvergleiche
1566576064090:dunnTest(df_$tot_sold, df_$condit, method="bh") # Korrektur für Mehrfachvergleiche
1566576072781:dunnTest(df_$tot_sold, factor(df_$condit), method="bh") # Korrektur für Mehrfachvergleiche
1566812217986:library(FSA)
1566812229776:fishR()
1566812450458:fishR('IFAR')
1568719572439:library(tidyverse)
1568719618033:read_delim("Unterrichtsunterlagen_HS19/13_Statistik1/data/novanimal.csv")
1568719624384:read_delim("Unterrichtsunterlagen_HS19/13_Statistik1/data/novanimal.csv", delim = ";")
1568719631912:df <- read_delim("Unterrichtsunterlagen_HS19/13_Statistik1/data/novanimal.csv", delim = ";")
1568719646856:group_by(df, gender, member) %>% summarise()
1568719650191:group_by(df, gender, member) %>% summarise(tot = n)
1568719652431:group_by(df, gender, member) %>% summarise(tot = n())
1568719866795:719 +816 +345 +339
1568791712968:getwd()
1568791745974:getwd()
1570778858181:install.packages("multcomp")
1570779687955:library(tidyverse)
1570779704775:install.packages("lubridate")
1570779784811:install.packages("psych")
1570779824836:nova <- read_delim("13_Statistik1/data/novanimal.csv", delim = ";")
1570779827516:library(tidyverse)
1570779840704:install.packages("tidyverse", dependencies = T)
1570779923778:library(tidyverse)
1570779935467:install.packages("readr")
1570783386161:chickwts
1570783427473:glm(wight ~ feed, data = chickwts)
1570783431418:glm(weight ~ feed, data = chickwts)
1570783442056:summary.lm(glm(weight ~ feed, data = chickwts))
1570783450098:summary.lm(aov(weight ~ feed, data = chickwts))
1570783453203:summary.lm(aov(weight ~ feed, data = chickwts))
1570783455587:summary.lm(glm(weight ~ feed, data = chickwts))
1570783472018:TukeyHSD(aov(weight ~ feed, data = chickwts))
1570783561798:iris
1570783576585:mtcars
1570783590562:Titanic
1570783607812:str(Titanic)
1570783625205:tibble::tibble(Titanic)
1570783633297:tibble::as_tibble(Titanic)
1570783642458:as.data.frame(Titanic)
1570783669532:strwars
1570783671867:starwars
1570783680979:library(dyplr)
1570783689074:install.packages("dyplr2)
1570783695082:install.packages("dyplr")
1570783705453:install.packages("dplyr")
1570783708523:install.packages("dplyr")
1570783897668:starwars
1570783906781:data(starwars)
